{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Rooms as a Product Workflow - Construction Development Platform\n\n## Overview\n\nRooms as a Product Workflow is a comprehensive development platform for multifamily developers to navigate the complete modular construction process. The system provides a 4-application workflow: ModularFeasibility (feasibility assessment), SmartStart (entitlement/permitting), FabAssure (factory coordination), and EasyDesign (design customization). Users progress sequentially through each application, with project data flowing between applications to create a seamless development experience from initial feasibility through final design approval.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\nLogo display: RaaP logo should display with white background, not black background.\nMobile layout: Project tiles must not have overlapping text on mobile devices.\nProject data: No consolidation or aggregation across disparate projects - show individual project data only.\nCost savings display: Serenity Village project should show exactly 1% savings, not calculated percentages.\nProject images: Serenity Village uses custom generated building rendering instead of stock photos.\n\n## System Architecture\n\n### Data Integrity & Single Source of Truth\n**CRITICAL ARCHITECTURAL REQUIREMENT**: All cost calculations must derive from MasterFormat breakdown data to ensure consistency across the application. The `useCostTotals` hook in `/client/src/lib/useCostTotals.ts` serves as the single source of truth for cost calculations, computing totals, savings, per-unit costs, and per-square-foot costs from the detailed cost breakdown data. Never use hardcoded cost fields like `project.modularTotalCost` or `project.siteBuiltTotalCost` directly in UI components - always calculate from the MasterFormat breakdown data to maintain data integrity.\n\n### Frontend Architecture\nThe application uses a modern React-based architecture with TypeScript for type safety. The client is built with Vite for fast development and optimized builds. The UI framework leverages shadcn/ui components built on Radix UI primitives for accessibility and consistent design patterns. State management is handled through TanStack Query for server state and React Hook Form for form management with Zod validation schemas. The styling system uses Tailwind CSS with custom CSS variables for theming, following a design system with predefined color schemes for the RaaP brand.\n\n### Backend Architecture\nThe server implements a Node.js Express application using TypeScript and ES modules. The architecture follows a modular approach with separated concerns: route handlers in `/server/routes.ts`, database operations abstracted through a storage interface in `/server/storage.ts`, and authentication middleware in `/server/replitAuth.ts`. The application uses session-based authentication integrated with Replit's OpenID Connect system. API endpoints follow RESTful conventions with proper error handling and request logging middleware.\n\n### Database Design\nThe data layer uses PostgreSQL as the primary database with Drizzle ORM for type-safe database operations. The schema includes user management tables required for Replit Auth integration, project tables storing feasibility assessment data, and cost breakdown tables for detailed financial analysis. Database migrations are managed through Drizzle Kit, and the schema is shared between client and server through the `/shared/schema.ts` file. The database connection uses Neon's serverless PostgreSQL with connection pooling.\n\n### Authentication System\nAuthentication is implemented using Replit's OpenID Connect integration with session management. The system stores user sessions in PostgreSQL using connect-pg-simple for session persistence. Authentication middleware protects API routes and manages user context throughout the application. The frontend handles authentication state through React Query with automatic retry logic and unauthorized error handling.\n\n### File Generation and Reporting\nThe application includes PDF generation capabilities using jsPDF for creating professional feasibility reports. The system generates comprehensive reports including project summaries, scoring breakdowns, cost analyses, and recommendations. Reports maintain consistent branding and formatting suitable for professional presentation to stakeholders.\n\n## External Dependencies\n\n### Database Services\n- **Neon PostgreSQL**: Serverless PostgreSQL database hosting with connection pooling and automatic scaling\n- **Drizzle ORM**: Type-safe database toolkit for schema management and query building\n\n### Authentication Services\n- **Replit Auth**: OpenID Connect authentication provider integrated with Replit's user system\n- **connect-pg-simple**: PostgreSQL session store for maintaining user sessions\n\n### UI and Styling Framework\n- **shadcn/ui**: Component library built on Radix UI primitives for accessible and customizable components\n- **Radix UI**: Low-level UI primitives for building design systems\n- **Tailwind CSS**: Utility-first CSS framework for styling and responsive design\n- **Lucide React**: Icon library providing consistent iconography throughout the application\n\n### Frontend Libraries\n- **TanStack Query**: Server state management with caching, background updates, and optimistic updates\n- **React Hook Form**: Form library with validation and performance optimization\n- **Zod**: Schema validation library for type-safe form validation and API request/response validation\n- **Wouter**: Lightweight client-side routing library\n- **jsPDF**: Client-side PDF generation for creating downloadable reports\n\n### Development Tools\n- **Vite**: Build tool providing fast development server and optimized production builds\n- **TypeScript**: Static type checking for improved developer experience and code reliability\n- **ESBuild**: Fast JavaScript bundler used by Vite for production builds","size_bytes":5926},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"raap-green\": \"#357742\",\n        \"raap-mustard\": \"#F6AA2A\",\n        \"raap-dark\": \"#2D3748\",\n        \"raap-light\": \"#F7FAFC\",\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"system-ui\", \"sans-serif\"],\n        serif: [\"Georgia\", \"serif\"],\n        mono: [\"Menlo\", \"monospace\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2916},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/csvImporter.ts":{"content":"// Types based on the costAnalysis schema from projects table\ntype CostAnalysisBreakdown = {\n  category: string;\n  categoryCode: string;\n  siteBuiltCost: number;\n  modularGcCost: number;\n  modularFabCost: number;\n  modularTotalCost: number;\n  modularCostPerSf: number;\n};\n\ntype CostAnalysis = {\n  masterFormatBreakdown: CostAnalysisBreakdown[];\n  detailedMetrics: {\n    modularConstruction: {\n      designPhaseMonths: number;\n      fabricationMonths: number;\n      siteWorkMonths: number;\n    };\n    siteBuiltConstruction: {\n      designPhaseMonths: number;\n      constructionMonths: number;\n    };\n    comparison: {\n      costSavingsAmount: number;\n      timeSavingsMonths: number;\n      timeSavingsPercent: number;\n    };\n  };\n  pricingValidation: {\n    isComplete: boolean;\n    validatedBy: string;\n    validatedAt: string; // ISO string\n    notes: string;\n  };\n};\n\nexport interface CsvRow {\n  category: string;\n  siteBuiltCost: number;\n  siteBuiltCostPerSf: number;\n  modularGcCost: number;\n  modularFabCost: number;\n  modularTotalCost: number;\n  modularCostPerSf: number;\n  savings: number;\n}\n\nexport interface ParsedCsv {\n  masterFormatBreakdown: CsvRow[];\n  projectTotals: {\n    siteBuiltTotal: number;\n    modularTotal: number;\n    savings: number;\n    costSavingsPercent: number;\n  };\n}\n\n// Helper function to clean currency strings and convert to numbers\nfunction parseCurrency(value: string): number {\n  if (!value || value.trim() === '') return 0;\n  \n  // Remove quotes, dollar signs, commas, and whitespace\n  let cleaned = value.replace(/[\"$,\\s]/g, '');\n  \n  // Handle parentheses for negative numbers\n  const isNegative = cleaned.includes('(') && cleaned.includes(')');\n  if (isNegative) {\n    cleaned = cleaned.replace(/[()]/g, '');\n  }\n  \n  const number = parseFloat(cleaned);\n  return isNaN(number) ? 0 : (isNegative ? -number : number);\n}\n\n// Helper function to normalize category names\nfunction normalizeCategory(category: string): string {\n  return category.replace(/^[\"'\\s]+|[\"'\\s]+$/g, '').trim();\n}\n\n// Helper function to check if a row is a section header\nfunction isSectionHeader(category: string): boolean {\n  const sectionHeaders = [\n    'Concrete, Masonry & Metals',\n    'Rooms', \n    'Equipment & Special Construction',\n    'MEPs',\n    'Site Work',\n    'GC Charges'\n  ];\n  \n  const normalizedCategory = normalizeCategory(category);\n  return sectionHeaders.some(header => \n    normalizedCategory.toLowerCase().includes(header.toLowerCase())\n  );\n}\n\n// Improved CSV parser that handles quoted fields properly\nfunction parseCSVLine(line: string): string[] {\n  const result: string[] = [];\n  let currentField = '';\n  let inQuotes = false;\n  let i = 0;\n  \n  while (i < line.length) {\n    const char = line[i];\n    \n    if (char === '\"' && !inQuotes) {\n      inQuotes = true;\n    } else if (char === '\"' && inQuotes) {\n      inQuotes = false;\n    } else if (char === ',' && !inQuotes) {\n      result.push(currentField.trim());\n      currentField = '';\n    } else {\n      currentField += char;\n    }\n    i++;\n  }\n  \n  result.push(currentField.trim());\n  return result;\n}\n\nexport function parseCostBreakdownCsv(csvContent: string): ParsedCsv {\n  const lines = csvContent.split('\\n');\n  \n  // Skip header row\n  const dataLines = lines.slice(1).filter(line => line.trim() !== '');\n  \n  const masterFormatBreakdown: CsvRow[] = [];\n  let projectTotalsRow: CsvRow | null = null;\n  \n  for (const line of dataLines) {\n    // Parse CSV line using proper CSV parsing\n    const columns = parseCSVLine(line);\n    \n    if (columns.length < 8) continue; // Skip incomplete rows\n    \n    const category = normalizeCategory(columns[0]);\n    \n    // Skip empty categories\n    if (!category) continue;\n    \n    // Handle PROJECT TOTAL row separately\n    if (category.toLowerCase().includes('project total')) {\n      projectTotalsRow = {\n        category,\n        siteBuiltCost: parseCurrency(columns[1]),\n        siteBuiltCostPerSf: parseCurrency(columns[2]),\n        modularGcCost: parseCurrency(columns[3]),\n        modularFabCost: parseCurrency(columns[4]),\n        modularTotalCost: parseCurrency(columns[5]),\n        modularCostPerSf: parseCurrency(columns[6]),\n        savings: parseCurrency(columns[7])\n      };\n      continue;\n    }\n    \n    // Parse the row\n    const rowData: CsvRow = {\n      category,\n      siteBuiltCost: parseCurrency(columns[1]),\n      siteBuiltCostPerSf: parseCurrency(columns[2]),\n      modularGcCost: parseCurrency(columns[3]),\n      modularFabCost: parseCurrency(columns[4]),\n      modularTotalCost: parseCurrency(columns[5]),\n      modularCostPerSf: parseCurrency(columns[6]),\n      savings: parseCurrency(columns[7])\n    };\n    \n    // Only include line items (not section headers) in breakdown\n    if (!isSectionHeader(category)) {\n      masterFormatBreakdown.push(rowData);\n    }\n  }\n  \n  // Calculate project totals from data or use PROJECT TOTAL row\n  let projectTotals;\n  if (projectTotalsRow) {\n    const costSavingsPercent = projectTotalsRow.siteBuiltCost > 0 \n      ? (projectTotalsRow.savings / projectTotalsRow.siteBuiltCost) * 100 \n      : 0;\n      \n    projectTotals = {\n      siteBuiltTotal: projectTotalsRow.siteBuiltCost,\n      modularTotal: projectTotalsRow.modularTotalCost,\n      savings: projectTotalsRow.savings,\n      costSavingsPercent: Math.max(0, costSavingsPercent)\n    };\n  } else {\n    // Calculate totals from breakdown data\n    const siteBuiltTotal = masterFormatBreakdown.reduce((sum, row) => sum + row.siteBuiltCost, 0);\n    const modularTotal = masterFormatBreakdown.reduce((sum, row) => sum + row.modularTotalCost, 0);\n    const savings = siteBuiltTotal - modularTotal;\n    const costSavingsPercent = siteBuiltTotal > 0 ? (savings / siteBuiltTotal) * 100 : 0;\n    \n    projectTotals = {\n      siteBuiltTotal,\n      modularTotal,\n      savings,\n      // Ensure percentage is within database limits (precision 5, scale 2 = max 999.99)\n      costSavingsPercent: Math.min(999.99, Math.max(0, costSavingsPercent))\n    };\n  }\n  \n  return {\n    masterFormatBreakdown,\n    projectTotals\n  };\n}\n\n// Helper function to extract category code from category name (e.g., \"03 Concrete\" -> \"03\")\nfunction extractCategoryCode(category: string): string {\n  const match = category.match(/^\\s*(\\d{2})\\s/);\n  return match ? match[1] : '';\n}\n\n// Convert parsed CSV data to CostAnalysis format\nexport function createCostAnalysisFromCsv(parsedCsv: ParsedCsv, project: { modularTimelineMonths: number; siteBuiltTimelineMonths: number }): CostAnalysis {\n  return {\n    masterFormatBreakdown: parsedCsv.masterFormatBreakdown.map(row => ({\n      category: row.category,\n      categoryCode: extractCategoryCode(row.category),\n      siteBuiltCost: row.siteBuiltCost,\n      modularGcCost: row.modularGcCost,\n      modularFabCost: row.modularFabCost,\n      modularTotalCost: row.modularTotalCost,\n      modularCostPerSf: row.modularCostPerSf\n    })),\n    detailedMetrics: {\n      modularConstruction: {\n        designPhaseMonths: Math.round(project.modularTimelineMonths * 0.3), // 30% for design\n        fabricationMonths: Math.round(project.modularTimelineMonths * 0.4), // 40% for fabrication\n        siteWorkMonths: Math.round(project.modularTimelineMonths * 0.3), // 30% for site work\n      },\n      siteBuiltConstruction: {\n        designPhaseMonths: Math.round(project.siteBuiltTimelineMonths * 0.25), // 25% for design\n        constructionMonths: Math.round(project.siteBuiltTimelineMonths * 0.75), // 75% for construction\n      },\n      comparison: {\n        costSavingsAmount: parsedCsv.projectTotals.savings,\n        timeSavingsMonths: project.siteBuiltTimelineMonths - project.modularTimelineMonths,\n        timeSavingsPercent: parsedCsv.projectTotals.costSavingsPercent\n      }\n    },\n    pricingValidation: {\n      isComplete: true,\n      validatedBy: 'CSV Import',\n      validatedAt: new Date().toISOString(),\n      notes: 'Cost data imported from CSV file'\n    }\n  };\n}","size_bytes":7927},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/googleSheetsService.ts":{"content":"// Temporarily disabled google sheets import to fix module resolution issue\n// import { google } from 'googleapis';\n\n// const SPREADSHEET_ID = '12fsKnG2rKFGpE6DTsLM0uaqFspzVWwCJjrIvbwrDXnk';\n\nexport interface SimulatorParams {\n  oneBedUnits: number;\n  twoBedUnits: number;\n  threeBedUnits: number;\n  floors: number;\n  buildingType: string;\n  parkingType: string;\n  location: string;\n  prevailingWage: boolean;\n  siteConditions: string;\n}\n\nexport interface CostResults {\n  totalCost: number;\n  costPerSF: number;\n  costPerUnit: number;\n  modularTotal: number;\n  siteBuiltTotal: number;\n  savings: number;\n  savingsPercent: number;\n  breakdown: {\n    sitePreparation: number;\n    foundation: number;\n    modularUnits: number;\n    siteAssembly: number;\n    mepConnections: number;\n    finishWork: number;\n    softCosts: number;\n  };\n}\n\nclass GoogleSheetsService {\n  // private sheets: any;\n\n  constructor() {\n    // Temporarily disabled google sheets authentication\n    // this.sheets = google.sheets({ \n    //   version: 'v4', \n    //   auth: process.env.GOOGLE_SHEETS_API_KEY \n    // });\n  }\n\n  async updateSimulatorParams(params: SimulatorParams): Promise<CostResults> {\n    // Temporarily return static results instead of using Google Sheets\n    console.log('Using static results for cost calculation');\n    return this.getStaticResults(params);\n  }\n\n  // Temporarily removed Google Sheets methods - using static calculation only\n\n  private getStaticResults(params: SimulatorParams): CostResults {\n    // Calculate basic adjustments based on parameters for fallback\n    const totalUnits = params.oneBedUnits + params.twoBedUnits + params.threeBedUnits;\n    const baseTotal = 10800000;\n    const floorMultiplier = params.floors / 3; // Base is 3 floors\n    const unitMultiplier = totalUnits / 24; // Base is 24 units\n    const wageMultiplier = params.prevailingWage ? 1.15 : 1.0;\n    \n    const adjustedTotal = baseTotal * floorMultiplier * unitMultiplier * wageMultiplier;\n    \n    return {\n      totalCost: Math.round(adjustedTotal),\n      costPerSF: Math.round(adjustedTotal / (totalUnits * 800)), // Assuming 800 SF average\n      costPerUnit: Math.round(adjustedTotal / totalUnits),\n      modularTotal: Math.round(adjustedTotal),\n      siteBuiltTotal: Math.round(adjustedTotal * 1.012),\n      savings: Math.round(adjustedTotal * 0.012),\n      savingsPercent: 1.2,\n      breakdown: {\n        sitePreparation: Math.round(adjustedTotal * 0.045),\n        foundation: Math.round(adjustedTotal * 0.072),\n        modularUnits: Math.round(adjustedTotal * 0.574),\n        siteAssembly: Math.round(adjustedTotal * 0.085),\n        mepConnections: Math.round(adjustedTotal * 0.102),\n        finishWork: Math.round(adjustedTotal * 0.077),\n        softCosts: Math.round(adjustedTotal * 0.045),\n      },\n    };\n  }\n}\n\nexport default new GoogleSheetsService();","size_bytes":2848},"server/importSerenityData.ts":{"content":"import { readFileSync } from 'fs';\nimport { parseCostBreakdownCsv, createCostAnalysisFromCsv } from './csvImporter';\nimport { storage } from './storage';\n\n// Serenity Village project ID (we'll need to find this)\nconst SERENITY_VILLAGE_PROJECT_ID = '7c932d1a-01d5-4c4e-b5a5-bd69ee05944a';\n\nasync function importSerenityVillageData() {\n  try {\n    console.log('Starting Serenity Village CSV import...');\n    \n    // Read the CSV file\n    const csvContent = readFileSync('../attached_assets/Serenity Village Cost_1757900952614.csv', 'utf-8');\n    \n    // Parse the CSV data\n    const parsedCsv = parseCostBreakdownCsv(csvContent);\n    console.log(`Parsed ${parsedCsv.masterFormatBreakdown.length} cost breakdown items`);\n    console.log(`Project totals: Site Built: $${parsedCsv.projectTotals.siteBuiltTotal.toLocaleString()}, Modular: $${parsedCsv.projectTotals.modularTotal.toLocaleString()}`);\n    \n    // Get the current project to use timeline data\n    const project = await storage.getProject(SERENITY_VILLAGE_PROJECT_ID);\n    if (!project) {\n      throw new Error('Serenity Village project not found');\n    }\n    \n    // Create cost analysis from CSV data\n    const costAnalysis = createCostAnalysisFromCsv(parsedCsv, {\n      modularTimelineMonths: parseFloat(project.modularTimelineMonths || '9'),\n      siteBuiltTimelineMonths: parseFloat(project.siteBuiltTimelineMonths || '13')\n    });\n    \n    // Calculate per-unit and per-sq-ft costs with proper precision\n    const totalSqFt = 26000; // Updated based on realistic sqft for 24 units \n    const totalUnits = 24;\n    \n    // Update the project with the new cost analysis and totals\n    await storage.updateProject(SERENITY_VILLAGE_PROJECT_ID, {\n      costAnalysis,\n      modularTotalCost: parsedCsv.projectTotals.modularTotal.toString(),\n      siteBuiltTotalCost: parsedCsv.projectTotals.siteBuiltTotal.toString(),\n      // Ensure percentage fits in precision 5, scale 2 field (max 999.99)\n      costSavingsPercent: Math.min(99.99, parsedCsv.projectTotals.costSavingsPercent).toFixed(2),\n      modularCostPerSf: (parsedCsv.projectTotals.modularTotal / totalSqFt).toFixed(2),\n      siteBuiltCostPerSf: (parsedCsv.projectTotals.siteBuiltTotal / totalSqFt).toFixed(2),\n      modularCostPerUnit: (parsedCsv.projectTotals.modularTotal / totalUnits).toFixed(2),\n      siteBuiltCostPerUnit: (parsedCsv.projectTotals.siteBuiltTotal / totalUnits).toFixed(2)\n    });\n    \n    console.log('✅ Successfully imported Serenity Village cost data!');\n    console.log(`Updated costAnalysis with ${costAnalysis.masterFormatBreakdown.length} breakdown items`);\n    console.log(`Cost savings: ${parsedCsv.projectTotals.costSavingsPercent.toFixed(2)}%`);\n    \n  } catch (error) {\n    console.error('❌ Error importing Serenity Village data:', error);\n    throw error;\n  }\n}\n\n// Run if this file is executed directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  importSerenityVillageData()\n    .then(() => process.exit(0))\n    .catch(() => process.exit(1));\n}\n\nexport { importSerenityVillageData };","size_bytes":3049},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    // Only send response if headers haven't been sent yet\n    if (!res.headersSent) {\n      res.status(status).json({ message });\n    }\n    \n    // Log the error but don't throw it to avoid crashing the server\n    console.error(\"Server error:\", err);\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2261},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertProjectSchema, insertCostBreakdownSchema, projects, type InsertProject } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport googleSheetsService, { type SimulatorParams } from \"./googleSheetsService\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n\n\n  // API configuration endpoint\n  app.get('/api/config/maps', async (req: any, res) => {\n    try {\n      res.json({ \n        apiKey: process.env.GOOGLE_MAPS_API_KEY || ''\n      });\n    } catch (error) {\n      console.error(\"Error fetching maps config:\", error);\n      res.status(500).json({ message: \"Failed to fetch maps configuration\" });\n    }\n  });\n\n  // Project routes\n  app.get('/api/projects', async (req: any, res) => {\n    try {\n      const projects = await storage.getAllProjects();\n      res.json(projects);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n      res.status(500).json({ message: \"Failed to fetch projects\" });\n    }\n  });\n\n  app.get('/api/projects/:id', async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const project = await storage.getProject(id);\n      \n      if (!project) {\n        return res.status(404).json({ message: \"Project not found\" });\n      }\n\n      res.json(project);\n    } catch (error) {\n      console.error(\"Error fetching project:\", error);\n      res.status(500).json({ message: \"Failed to fetch project\" });\n    }\n  });\n\n  app.post('/api/projects', async (req: any, res) => {\n    try {\n      const validatedData = insertProjectSchema.parse(req.body);\n      \n      // Calculate feasibility scores for new user projects\n      const scores: FeasibilityScoreResult = calculateFeasibilityScores(validatedData, true);\n      \n      const payload: NewProjectPayload = {\n        ...validatedData,\n        ...scores,\n        userId: 'default-user',\n      };\n      \n      const project = await storage.createProject(payload);\n\n      // Create sample cost breakdowns for the project\n      const costBreakdowns = await createSampleCostBreakdowns(project.id, validatedData.projectType);\n\n      res.status(201).json({ project, costBreakdowns });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid project data\", errors: error.errors });\n      }\n      console.error(\"Error creating project:\", error);\n      res.status(500).json({ message: \"Failed to create project\" });\n    }\n  });\n\n  app.put('/api/projects/:id', async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const project = await storage.getProject(id);\n      \n      if (!project) {\n        return res.status(404).json({ message: \"Project not found\" });\n      }\n\n      const validatedData = insertProjectSchema.partial().parse(req.body);\n      \n      // Protect sample project scores from being overwritten - only recalculate for non-sample projects\n      const updatePayload: Partial<NewProjectPayload> = project.isSample \n        ? validatedData  // Sample projects: use only provided data, preserve existing scores\n        : {             // Non-sample projects: recalculate scores\n            ...validatedData,\n            ...calculateFeasibilityScores({ ...project, ...validatedData }, true)\n          };\n      \n      const updatedProject = await storage.updateProject(id, updatePayload);\n\n      res.json(updatedProject);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid project data\", errors: error.errors });\n      }\n      console.error(\"Error updating project:\", error);\n      res.status(500).json({ message: \"Failed to update project\" });\n    }\n  });\n\n  app.delete('/api/projects/:id', async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const project = await storage.getProject(id);\n      \n      if (!project) {\n        return res.status(404).json({ message: \"Project not found\" });\n      }\n\n      await storage.deleteProject(id);\n      res.status(204).send();\n    } catch (error) {\n      console.error(\"Error deleting project:\", error);\n      res.status(500).json({ message: \"Failed to delete project\" });\n    }\n  });\n\n  // PATCH route for updating application completion status\n  app.patch('/api/projects/:id', async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const project = await storage.getProject(id);\n      \n      if (!project) {\n        return res.status(404).json({ message: \"Project not found\" });\n      }\n\n      // Define schema for application completion updates\n      const updateSchema = z.object({\n        modularFeasibilityComplete: z.boolean().optional(),\n        smartStartComplete: z.boolean().optional(),\n        fabAssureComplete: z.boolean().optional(),\n        easyDesignComplete: z.boolean().optional(),\n      });\n\n      const validatedData = updateSchema.parse(req.body);\n      \n      const updatedProject = await storage.updateProject(id, validatedData);\n\n      res.json(updatedProject);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid update data\", errors: error.errors });\n      }\n      console.error(\"Error updating project status:\", error);\n      res.status(500).json({ message: \"Failed to update project\" });\n    }\n  });\n\n  // Cost breakdown routes\n  app.get('/api/projects/:id/cost-breakdowns', async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const project = await storage.getProject(id);\n      \n      if (!project) {\n        return res.status(404).json({ message: \"Project not found\" });\n      }\n\n      const costBreakdowns = await storage.getProjectCostBreakdowns(id);\n      res.json(costBreakdowns);\n    } catch (error) {\n      console.error(\"Error fetching cost breakdowns:\", error);\n      res.status(500).json({ message: \"Failed to fetch cost breakdowns\" });\n    }\n  });\n\n  // Sample projects initialization route\n  app.post('/api/initialize-sample-projects', async (req: any, res) => {\n    try {\n      const existingProjects = await storage.getAllProjects();\n      \n      if (existingProjects.length > 0) {\n        return res.json({ message: \"Sample projects already exist\" });\n      }\n\n      const sampleProjects = await createSampleProjects('default-user');\n      res.json(sampleProjects);\n    } catch (error) {\n      console.error(\"Error initializing sample projects:\", error);\n      res.status(500).json({ message: \"Failed to initialize sample projects\" });\n    }\n  });\n\n  // Partner routes for FabAssure marketplace\n  app.get('/api/partners', async (req: any, res) => {\n    try {\n      const partners = await storage.getAllPartners();\n      res.json(partners);\n    } catch (error) {\n      console.error(\"Error fetching partners:\", error);\n      res.status(500).json({ message: \"Failed to fetch partners\" });\n    }\n  });\n\n  app.get('/api/partners/:type', async (req: any, res) => {\n    try {\n      const { type } = req.params;\n      const partners = await storage.getPartnersByType(type);\n      res.json(partners);\n    } catch (error) {\n      console.error(\"Error fetching partners by type:\", error);\n      res.status(500).json({ message: \"Failed to fetch partners\" });\n    }\n  });\n\n  app.get('/api/projects/:projectId/partner-evaluations', async (req: any, res) => {\n    try {\n      const { projectId } = req.params;\n      const evaluations = await storage.getPartnerEvaluations(projectId);\n      res.json(evaluations);\n    } catch (error) {\n      console.error(\"Error fetching partner evaluations:\", error);\n      res.status(500).json({ message: \"Failed to fetch evaluations\" });\n    }\n  });\n\n  app.post('/api/projects/:projectId/partner-evaluations', async (req: any, res) => {\n    try {\n      const { projectId } = req.params;\n      const evaluation = await storage.createPartnerEvaluation({\n        ...req.body,\n        projectId,\n      });\n      res.status(201).json(evaluation);\n    } catch (error) {\n      console.error(\"Error creating partner evaluation:\", error);\n      res.status(500).json({ message: \"Failed to create evaluation\" });\n    }\n  });\n\n  app.get('/api/projects/:projectId/partner-contracts', async (req: any, res) => {\n    try {\n      const { projectId } = req.params;\n      const contracts = await storage.getPartnerContracts(projectId);\n      res.json(contracts);\n    } catch (error) {\n      console.error(\"Error fetching partner contracts:\", error);\n      res.status(500).json({ message: \"Failed to fetch contracts\" });\n    }\n  });\n\n  app.post('/api/projects/:projectId/partner-contracts', async (req: any, res) => {\n    try {\n      const { projectId } = req.params;\n      const contract = await storage.createPartnerContract({\n        ...req.body,\n        projectId,\n      });\n      res.status(201).json(contract);\n    } catch (error) {\n      console.error(\"Error creating partner contract:\", error);\n      res.status(500).json({ message: \"Failed to create contract\" });\n    }\n  });\n\n  // Seed sample partners for marketplace\n  app.post('/api/seed-partners', async (req: any, res) => {\n    try {\n      const samplePartners = await createSamplePartners();\n      res.json({ message: \"Sample partners created\", count: samplePartners.length });\n    } catch (error) {\n      console.error(\"Error seeding partners:\", error);\n      res.status(500).json({ message: \"Failed to seed partners\" });\n    }\n  });\n\n  // Simulator API route for Google Sheets integration\n  app.post('/api/simulator/calculate', async (req: any, res) => {\n    try {\n      const simulatorParamsSchema = z.object({\n        oneBedUnits: z.number().min(0).max(20),\n        twoBedUnits: z.number().min(0).max(20),\n        threeBedUnits: z.number().min(0).max(15),\n        floors: z.number().min(2).max(4),\n        buildingType: z.string(),\n        parkingType: z.string(),\n        location: z.string(),\n        prevailingWage: z.boolean(),\n        siteConditions: z.string(),\n      });\n\n      const validatedParams = simulatorParamsSchema.parse(req.body);\n      const results = await googleSheetsService.updateSimulatorParams(validatedParams);\n      \n      res.json(results);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid simulator parameters\", errors: error.errors });\n      }\n      console.error(\"Error calculating costs:\", error);\n      res.status(500).json({ message: \"Failed to calculate costs\" });\n    }\n  });\n\n  // EasyDesign API routes\n  app.get('/api/projects/:projectId/design-documents', async (req: any, res) => {\n    try {\n      const documents = await storage.getDesignDocuments(req.params.projectId);\n      res.json(documents);\n    } catch (error) {\n      console.error(\"Error fetching design documents:\", error);\n      res.status(500).json({ message: \"Failed to fetch design documents\" });\n    }\n  });\n\n  app.post('/api/projects/:projectId/design-documents', async (req: any, res) => {\n    try {\n      const document = await storage.createDesignDocument({\n        ...req.body,\n        projectId: req.params.projectId,\n        createdBy: 'default-user',\n      });\n      res.status(201).json(document);\n    } catch (error) {\n      console.error(\"Error creating design document:\", error);\n      res.status(500).json({ message: \"Failed to create design document\" });\n    }\n  });\n\n  app.get('/api/projects/:projectId/material-specifications', async (req: any, res) => {\n    try {\n      const specs = await storage.getMaterialSpecifications(req.params.projectId);\n      res.json(specs);\n    } catch (error) {\n      console.error(\"Error fetching material specifications:\", error);\n      res.status(500).json({ message: \"Failed to fetch material specifications\" });\n    }\n  });\n\n  app.post('/api/projects/:projectId/material-specifications', async (req: any, res) => {\n    try {\n      const spec = await storage.createMaterialSpecification({\n        ...req.body,\n        projectId: req.params.projectId,\n      });\n      res.status(201).json(spec);\n    } catch (error) {\n      console.error(\"Error creating material specification:\", error);\n      res.status(500).json({ message: \"Failed to create material specification\" });\n    }\n  });\n\n  app.get('/api/projects/:projectId/door-schedule', async (req: any, res) => {\n    try {\n      const doorItems = await storage.getDoorSchedule(req.params.projectId);\n      res.json(doorItems);\n    } catch (error) {\n      console.error(\"Error fetching door schedule:\", error);\n      res.status(500).json({ message: \"Failed to fetch door schedule\" });\n    }\n  });\n\n  app.post('/api/projects/:projectId/door-schedule', async (req: any, res) => {\n    try {\n      const doorItem = await storage.createDoorScheduleItem({\n        ...req.body,\n        projectId: req.params.projectId,\n      });\n      res.status(201).json(doorItem);\n    } catch (error) {\n      console.error(\"Error creating door schedule item:\", error);\n      res.status(500).json({ message: \"Failed to create door schedule item\" });\n    }\n  });\n\n  app.get('/api/projects/:projectId/design-workflows', async (req: any, res) => {\n    try {\n      const workflows = await storage.getDesignWorkflows(req.params.projectId);\n      res.json(workflows);\n    } catch (error) {\n      console.error(\"Error fetching design workflows:\", error);\n      res.status(500).json({ message: \"Failed to fetch design workflows\" });\n    }\n  });\n\n  app.post('/api/projects/:projectId/design-workflows', async (req: any, res) => {\n    try {\n      const workflow = await storage.createDesignWorkflow({\n        ...req.body,\n        projectId: req.params.projectId,\n      });\n      res.status(201).json(workflow);\n    } catch (error) {\n      console.error(\"Error creating design workflow:\", error);\n      res.status(500).json({ message: \"Failed to create design workflow\" });\n    }\n  });\n\n  app.get('/api/projects/:projectId/engineering-details', async (req: any, res) => {\n    try {\n      const details = await storage.getEngineeringDetails(req.params.projectId);\n      res.json(details);\n    } catch (error) {\n      console.error(\"Error fetching engineering details:\", error);\n      res.status(500).json({ message: \"Failed to fetch engineering details\" });\n    }\n  });\n\n  app.post('/api/projects/:projectId/engineering-details', async (req: any, res) => {\n    try {\n      const detail = await storage.createEngineeringDetail({\n        ...req.body,\n        projectId: req.params.projectId,\n      });\n      res.status(201).json(detail);\n    } catch (error) {\n      console.error(\"Error creating engineering detail:\", error);\n      res.status(500).json({ message: \"Failed to create engineering detail\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n\n// Helper function to calculate feasibility scores based on project data\n// Define typed payloads for project operations\ntype NewProjectPayload = Omit<InsertProject, 'id' | 'createdAt' | 'updatedAt'>;\n\n// Define the exact return type for feasibility scores - only scalar fields that map to existing columns\ntype FeasibilityScoreResult = Pick<InsertProject, \n  'zoningScore' | 'zoningJustification' | 'massingScore' | 'massingJustification' | \n  'costScore' | 'costJustification' | 'sustainabilityScore' | 'sustainabilityJustification' | \n  'logisticsScore' | 'logisticsJustification' | 'buildTimeScore' | 'buildTimeJustification' | \n  'overallScore' | 'modularTotalCost' | 'modularCostPerUnit' | 'modularCostPerSf' | \n  'siteBuiltTotalCost' | 'siteBuiltCostPerUnit' | 'siteBuiltCostPerSf' | 'costSavingsPercent' | \n  'modularTimelineMonths' | 'siteBuiltTimelineMonths' | 'timeSavingsMonths' | 'factoryLocation' | \n  'zoningDistrict' | 'densityBonusEligible'\n>;\n\nfunction calculateFeasibilityScores(projectData: any, isNewProject: boolean = true): FeasibilityScoreResult {\n  // Implement scoring algorithm based on RaaP's methodology\n  const totalUnits = (projectData.studioUnits || 0) + (projectData.oneBedUnits || 0) + \n                    (projectData.twoBedUnits || 0) + (projectData.threeBedUnits || 0);\n  \n  // Base scores with different scoring for hotel/hostel vs other projects\n  const isHotelProject = projectData.projectType === 'hotel' || projectData.projectType === 'hostel';\n  \n  const zoningScore = 5.0;\n  const massingScore = 5.0;\n  const costScore = isHotelProject ? 3.0 : 5.0; // Cost: 3 for hotel/hostel, 5 for others\n  const sustainabilityScore = 5.0;\n  const logisticsScore = isHotelProject ? 5.0 : 4.0; // Logistics: 5 for hotel/hostel, 4 for others\n  const buildTimeScore = 5.0;\n\n  // Calculate weighted overall score\n  const overallScore = (\n    zoningScore * 0.20 +\n    massingScore * 0.15 +\n    costScore * 0.20 +\n    sustainabilityScore * 0.20 +\n    logisticsScore * 0.15 +\n    buildTimeScore * 0.10\n  );\n\n  // Calculate cost estimates - use NEW specifications only for new projects\n  let modularTotalCost, costPerUnit, costPerSf, costSavingsPercent, siteBuiltTotalCost;\n  \n  // Prevent division by zero - use minimum of 1 unit if totalUnits is 0\n  const safeUnits = Math.max(totalUnits, 1);\n  \n  if (isNewProject) {\n    // NEW project specifications using Shadey Village actual data\n    modularTotalCost = 35684879; // $35.68M from Shadey Village actual data\n    costPerUnit = 346455; // $346,455 per unit for new projects\n    costPerSf = 248; // $248 per sq ft for new projects\n    costSavingsPercent = 22.8; // 22.8% savings from actual data ((46.22M - 35.68M) / 46.22M)\n    siteBuiltTotalCost = 46221006; // $46.22M site-built cost from actual data\n  } else {\n    // Original logic for sample projects\n    costPerUnit = projectData.projectType === 'affordable' ? 321621 : \n                  projectData.projectType === 'senior' ? 365000 :\n                  projectData.projectType === 'workforce' ? 340000 : 350000;\n    modularTotalCost = safeUnits * costPerUnit;\n    costSavingsPercent = 30.0; // 30% savings consistently\n    \n    // Prevent infinite values in division - ensure denominator is not zero or negative\n    const savingsRatio = costSavingsPercent / 100;\n    if (savingsRatio >= 1) {\n      siteBuiltTotalCost = modularTotalCost * 1.3; // Fallback to 30% higher\n    } else {\n      siteBuiltTotalCost = modularTotalCost / (1 - savingsRatio);\n    }\n    \n    // Prevent division by zero in cost per sq ft calculation\n    costPerSf = Math.round(modularTotalCost / (safeUnits * 800)); // Approximate sq ft calculation\n  }\n\n  return {\n    zoningScore: zoningScore.toString(),\n    zoningJustification: \"Score based on project type and zoning compatibility analysis.\",\n    massingScore: massingScore.toString(),\n    massingJustification: \"Score based on unit count and building configuration feasibility.\",\n    costScore: costScore.toString(),\n    costJustification: \"Score based on modular cost advantages for this project type and scale.\",\n    sustainabilityScore: sustainabilityScore.toString(),\n    sustainabilityJustification: \"Score based on modular construction's sustainability benefits and project characteristics.\",\n    logisticsScore: logisticsScore.toString(),\n    logisticsJustification: \"Score based on site accessibility and factory proximity analysis.\",\n    buildTimeScore: buildTimeScore.toString(),\n    buildTimeJustification: \"Score based on time savings potential through modular construction.\",\n    overallScore: overallScore.toFixed(1),\n    modularTotalCost: modularTotalCost.toString(),\n    modularCostPerUnit: costPerUnit.toString(), \n    modularCostPerSf: costPerSf.toString(),\n    siteBuiltTotalCost: siteBuiltTotalCost.toString(),\n    siteBuiltCostPerUnit: (siteBuiltTotalCost / (isNewProject ? 103 : safeUnits)).toString(),\n    siteBuiltCostPerSf: Math.round(siteBuiltTotalCost / (safeUnits * 800)).toString(),\n    costSavingsPercent: costSavingsPercent.toFixed(1),\n    modularTimelineMonths: \"30.5\", // Fixed modular timeline\n    siteBuiltTimelineMonths: \"41.0\", // Fixed site-built timeline  \n    timeSavingsMonths: \"10.5\", // Fixed time savings (25% of 41 months)\n    factoryLocation: projectData.factoryLocation || \"Tracy, CA\",\n    zoningDistrict: \"RM\",\n    densityBonusEligible: projectData.projectType === 'affordable',\n  };\n}\n\n// Helper function to create sample cost breakdowns\nasync function createSampleCostBreakdowns(projectId: string, projectType?: string) {\n  // Use hotel template for hotel/hostel projects, standard template for others\n  const isHotelProject = projectType === 'hotel' || projectType === 'hostel';\n  \n  const breakdowns = isHotelProject ? [\n    // Hotel/Hostel cost breakdown template (based on Sample Hotel Project)\n    {\n      projectId,\n      category: \"00 Fees\",\n      siteBuiltCost: \"1526305\",\n      raapGcCost: \"1004380\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"1004380\"\n    },\n    {\n      projectId,\n      category: \"01 General Requirements\",\n      siteBuiltCost: \"778773\",\n      raapGcCost: \"567112\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"567112\"\n    },\n    {\n      projectId,\n      category: \"03 Concrete\",\n      siteBuiltCost: \"468998\",\n      raapGcCost: \"165821\",\n      raapFabCost: \"304214\",\n      raapTotalCost: \"470035\"\n    },\n    {\n      projectId,\n      category: \"04 Masonry\",\n      siteBuiltCost: \"184155\",\n      raapGcCost: \"184155\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"184155\"\n    },\n    {\n      projectId,\n      category: \"05 Metal\",\n      siteBuiltCost: \"1092023\",\n      raapGcCost: \"1092023\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"1092023\"\n    },\n    {\n      projectId,\n      category: \"06 Wood & Plastics\",\n      siteBuiltCost: \"2129166\",\n      raapGcCost: \"434157\",\n      raapFabCost: \"2806564\",\n      raapTotalCost: \"3240721\"\n    },\n    {\n      projectId,\n      category: \"07 Thermal & Moisture Protection\",\n      siteBuiltCost: \"667676\",\n      raapGcCost: \"394625\",\n      raapFabCost: \"425067\",\n      raapTotalCost: \"819692\"\n    },\n    {\n      projectId,\n      category: \"08 Openings\",\n      siteBuiltCost: \"798129\",\n      raapGcCost: \"251261\",\n      raapFabCost: \"557806\",\n      raapTotalCost: \"809066\"\n    },\n    {\n      projectId,\n      category: \"09 Finishes\",\n      siteBuiltCost: \"1317631\",\n      raapGcCost: \"566835\",\n      raapFabCost: \"892950\",\n      raapTotalCost: \"1459785\"\n    },\n    {\n      projectId,\n      category: \"10 Specialties\",\n      siteBuiltCost: \"0\",\n      raapGcCost: \"0\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"0\"\n    },\n    {\n      projectId,\n      category: \"11 Equipment\",\n      siteBuiltCost: \"341606\",\n      raapGcCost: \"341606\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"341606\"\n    },\n    {\n      projectId,\n      category: \"12 Furnishing\",\n      siteBuiltCost: \"445131\",\n      raapGcCost: \"224401\",\n      raapFabCost: \"220092\",\n      raapTotalCost: \"444493\"\n    },\n    {\n      projectId,\n      category: \"13 Special Construction\",\n      siteBuiltCost: \"8525\",\n      raapGcCost: \"8525\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"8525\"\n    },\n    {\n      projectId,\n      category: \"21 Fire Suppression\",\n      siteBuiltCost: \"240348\",\n      raapGcCost: \"180545\",\n      raapFabCost: \"92233\",\n      raapTotalCost: \"272778\"\n    },\n    {\n      projectId,\n      category: \"22 Plumbing\",\n      siteBuiltCost: \"1058519\",\n      raapGcCost: \"867075\",\n      raapFabCost: \"739771\",\n      raapTotalCost: \"1606846\"\n    },\n    {\n      projectId,\n      category: \"23 HVAC\",\n      siteBuiltCost: \"551436\",\n      raapGcCost: \"248009\",\n      raapFabCost: \"305048\",\n      raapTotalCost: \"553057\"\n    },\n    {\n      projectId,\n      category: \"26 Electrical\",\n      siteBuiltCost: \"1105240\",\n      raapGcCost: \"1347850\",\n      raapFabCost: \"553257\",\n      raapTotalCost: \"1901107\"\n    },\n    {\n      projectId,\n      category: \"31 Earthwork\",\n      siteBuiltCost: \"460315\",\n      raapGcCost: \"460315\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"460315\"\n    },\n    {\n      projectId,\n      category: \"32 Exterior Improvements\",\n      siteBuiltCost: \"664814\",\n      raapGcCost: \"664814\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"664814\"\n    },\n    {\n      projectId,\n      category: \"33 Utilities\",\n      siteBuiltCost: \"677957\",\n      raapGcCost: \"677957\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"677957\"\n    }\n  ] : [\n    // Standard housing cost breakdown template - Shadey Village actual data\n    {\n      projectId,\n      category: \"03 Concrete\",\n      siteBuiltCost: \"2533115\",\n      raapGcCost: \"1373299\",\n      raapFabCost: \"625628\",\n      raapTotalCost: \"1998927\"\n    },\n    {\n      projectId,\n      category: \"04 Masonry\",\n      siteBuiltCost: \"916443\",\n      raapGcCost: \"845392\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"845392\"\n    },\n    {\n      projectId,\n      category: \"05 Metal\",\n      siteBuiltCost: \"3103653\",\n      raapGcCost: \"2572095\",\n      raapFabCost: \"241556\",\n      raapTotalCost: \"2813651\"\n    },\n    {\n      projectId,\n      category: \"06 Wood & Plastics\",\n      siteBuiltCost: \"8643831\",\n      raapGcCost: \"41318\",\n      raapFabCost: \"6378393\",\n      raapTotalCost: \"6419712\"\n    },\n    {\n      projectId,\n      category: \"07 Thermal & Moisture Protection\",\n      siteBuiltCost: \"2325482\",\n      raapGcCost: \"1129942\",\n      raapFabCost: \"960368\",\n      raapTotalCost: \"2090309\"\n    },\n    {\n      projectId,\n      category: \"08 Openings\",\n      siteBuiltCost: \"1393966\",\n      raapGcCost: \"440895\",\n      raapFabCost: \"792909\",\n      raapTotalCost: \"1233804\"\n    },\n    {\n      projectId,\n      category: \"09 Finishes\",\n      siteBuiltCost: \"5329218\",\n      raapGcCost: \"59288\",\n      raapFabCost: \"2906204\",\n      raapTotalCost: \"2965492\"\n    },\n    {\n      projectId,\n      category: \"10 Specialties\",\n      siteBuiltCost: \"200836\",\n      raapGcCost: \"0\",\n      raapFabCost: \"161890\",\n      raapTotalCost: \"161890\"\n    },\n    {\n      projectId,\n      category: \"11 Equipment\",\n      siteBuiltCost: \"29531\",\n      raapGcCost: \"29531\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"29531\"\n    },\n    {\n      projectId,\n      category: \"12 Furnishing\",\n      siteBuiltCost: \"374255\",\n      raapGcCost: \"18284\",\n      raapFabCost: \"324648\",\n      raapTotalCost: \"342932\"\n    },\n    {\n      projectId,\n      category: \"13 Special Construction\",\n      siteBuiltCost: \"51729\",\n      raapGcCost: \"51729\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"51729\"\n    },\n    {\n      projectId,\n      category: \"21 Fire Suppression\",\n      siteBuiltCost: \"982245\",\n      raapGcCost: \"346948\",\n      raapFabCost: \"351524\",\n      raapTotalCost: \"698472\"\n    },\n    {\n      projectId,\n      category: \"22 Plumbing\",\n      siteBuiltCost: \"2403740\",\n      raapGcCost: \"1124362\",\n      raapFabCost: \"1023475\",\n      raapTotalCost: \"2147838\"\n    },\n    {\n      projectId,\n      category: \"23 HVAC\",\n      siteBuiltCost: \"2505408\",\n      raapGcCost: \"183153\",\n      raapFabCost: \"1297260\",\n      raapTotalCost: \"1480413\"\n    },\n    {\n      projectId,\n      category: \"26 Electrical\",\n      siteBuiltCost: \"3960944\",\n      raapGcCost: \"2811655\",\n      raapFabCost: \"876365\",\n      raapTotalCost: \"3688021\"\n    },\n    {\n      projectId,\n      category: \"31 Earthwork\",\n      siteBuiltCost: \"1146618\",\n      raapGcCost: \"1152469\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"1152469\"\n    },\n    {\n      projectId,\n      category: \"32 Exterior Improvements\",\n      siteBuiltCost: \"1521663\",\n      raapGcCost: \"1521663\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"1521663\"\n    },\n    {\n      projectId,\n      category: \"33 Utilities\",\n      siteBuiltCost: \"1565388\",\n      raapGcCost: \"1565388\",\n      raapFabCost: \"0\",\n      raapTotalCost: \"1565388\"\n    },\n    {\n      projectId,\n      category: \"01 General Requirements\",\n      siteBuiltCost: \"2443868\",\n      raapGcCost: \"959509\",\n      raapFabCost: \"1012388\",\n      raapTotalCost: \"1971897\"\n    },\n    {\n      projectId,\n      category: \"00 Fees\",\n      siteBuiltCost: \"4789073\",\n      raapGcCost: \"1864865\",\n      raapFabCost: \"640485\",\n      raapTotalCost: \"2505350\"\n    }\n  ];\n\n  const createdBreakdowns = [];\n  for (const breakdown of breakdowns) {\n    const created = await storage.createCostBreakdown(breakdown);\n    createdBreakdowns.push(created);\n  }\n  return createdBreakdowns;\n}\n\n// Helper function to create sample projects for new users\nasync function createSampleProjects(userId: string) {\n  const sampleProjects = [\n    {\n      userId,\n      name: \"Serenity Village\",\n      address: \"5224 Chestnut Road, Olivehurst, CA\",\n      projectType: \"affordable\",\n      targetFloors: 3,\n      studioUnits: 0,\n      oneBedUnits: 6,\n      twoBedUnits: 12,\n      threeBedUnits: 6,\n      targetParkingSpaces: 24,\n      buildingDimensions: \"146' X 66'\",\n      constructionType: \"Type V-A\",\n    },\n    {\n      userId,\n      name: \"Mountain View Apartments\",\n      address: \"1425 Castro Street, Mountain View, CA\",\n      projectType: \"senior\",\n      targetFloors: 4,\n      studioUnits: 8,\n      oneBedUnits: 20,\n      twoBedUnits: 8,\n      threeBedUnits: 0,\n      targetParkingSpaces: 36,\n    },\n    {\n      userId,\n      name: \"University Housing Complex\",\n      address: \"2100 17th Street, Boulder, CO\",\n      projectType: \"student\",\n      targetFloors: 5,\n      studioUnits: 24,\n      oneBedUnits: 24,\n      twoBedUnits: 0,\n      threeBedUnits: 0,\n      targetParkingSpaces: 24,\n    },\n    {\n      userId,\n      name: \"Workforce Commons\",\n      address: \"875 Elm Avenue, Denver, CO\",\n      projectType: \"workforce\",\n      targetFloors: 3,\n      studioUnits: 0,\n      oneBedUnits: 16,\n      twoBedUnits: 12,\n      threeBedUnits: 4,\n      targetParkingSpaces: 40,\n    }\n  ];\n\n  const createdProjects = [];\n  for (const projectData of sampleProjects) {\n    const scores = calculateFeasibilityScores(projectData, false); // Sample projects use original logic\n    const project = await storage.createProject({\n      ...projectData,\n      ...scores,\n    });\n    \n    // Create cost breakdowns for each project\n    await createSampleCostBreakdowns(project.id, projectData.projectType);\n    createdProjects.push(project);\n  }\n  \n  return createdProjects;\n}\n\n// Helper function to create sample partners for the marketplace\nasync function createSamplePartners() {\n  const samplePartners = [\n    // Fabricators\n    {\n      name: \"Modular Solutions Inc\",\n      partnerType: \"fabricator\",\n      location: \"Portland, OR\",\n      city: \"Portland\",\n      state: \"OR\",\n      latitude: \"45.5152\",\n      longitude: \"-122.6784\",\n      yearEstablished: 2015,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"50-200 units per month, specializes in 3-6 story buildings\",\n      certifications: \"ISO 9001, ENERGY STAR Certified\",\n      contactEmail: \"sales@modularsolutions.com\",\n      contactPhone: \"(503) 555-0123\",\n      website: \"www.modularsolutions.com\",\n      description: \"Leading modular fabricator specializing in multifamily housing with emphasis on sustainable construction\",\n      specialties: \"Energy-efficient design, rapid delivery, custom architectural features\",\n      avgProjectSize: \"medium\",\n      rating: \"4.8\",\n      totalProjects: 127,\n    },\n    {\n      name: \"Pacific Modular Manufacturing\",\n      partnerType: \"fabricator\",\n      location: \"Sacramento, CA\",\n      city: \"Sacramento\", \n      state: \"CA\",\n      latitude: \"38.5816\",\n      longitude: \"-121.4944\",\n      yearEstablished: 2018,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"30-150 units per month, up to 8 stories\",\n      certifications: \"HUD Code Certified, Green Building Certified\",\n      contactEmail: \"info@pacificmodular.com\",\n      contactPhone: \"(916) 555-0456\",\n      website: \"www.pacificmodular.com\",\n      description: \"Advanced modular construction with focus on high-density urban housing\",\n      specialties: \"High-rise modular, urban infill, mixed-use developments\",\n      avgProjectSize: \"large\",\n      rating: \"4.6\",\n      totalProjects: 89,\n    },\n    {\n      name: \"Rocky Mountain Modular\",\n      partnerType: \"fabricator\",\n      location: \"Denver, CO\",\n      city: \"Denver\",\n      state: \"CO\",\n      latitude: \"39.7392\",\n      longitude: \"-104.9903\",\n      yearEstablished: 2012,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"20-100 units per month, specializes in 2-4 story buildings\",\n      certifications: \"OSHA Certified, Energy Star Partner\",\n      contactEmail: \"contact@rmmodular.com\",\n      contactPhone: \"(720) 555-0789\",\n      website: \"www.rmmodular.com\", \n      description: \"Regional modular fabricator serving Colorado and surrounding mountain states\",\n      specialties: \"Cold weather construction, mountain terrain adaptation, energy efficiency\",\n      avgProjectSize: \"medium\",\n      rating: \"4.7\",\n      totalProjects: 156,\n    },\n    // General Contractors\n    {\n      name: \"Premier Construction Partners\",\n      partnerType: \"gc\",\n      location: \"San Francisco, CA\",\n      city: \"San Francisco\",\n      state: \"CA\", \n      latitude: \"37.7749\",\n      longitude: \"-122.4194\",\n      yearEstablished: 2010,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"5-15 concurrent projects, up to 300 units per project\",\n      certifications: \"CGC Licensed, LEED Accredited\",\n      contactEmail: \"projects@premierconstruction.com\",\n      contactPhone: \"(415) 555-0321\",\n      website: \"www.premierconstruction.com\",\n      description: \"Full-service general contractor specializing in modular and traditional construction\",\n      specialties: \"Site preparation, utility connections, final assembly, project management\",\n      avgProjectSize: \"large\",\n      rating: \"4.9\",\n      totalProjects: 203,\n    },\n    {\n      name: \"Metro Build Group\",\n      partnerType: \"gc\",\n      location: \"Atlanta, GA\",\n      city: \"Atlanta\",\n      state: \"GA\",\n      latitude: \"33.7490\",\n      longitude: \"-84.3880\",\n      yearEstablished: 2013,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"8-20 concurrent projects, specializes in mid-rise developments\",\n      certifications: \"Georgia CGC License, OSHA 30-Hour\",\n      contactEmail: \"info@metrobuildgroup.com\",\n      contactPhone: \"(404) 555-0145\",\n      website: \"www.metrobuildgroup.com\",\n      description: \"Southeast regional general contractor with extensive modular construction expertise\",\n      specialties: \"Foundation systems, MEP coordination, modular installation, quality control\",\n      avgProjectSize: \"medium\",\n      rating: \"4.6\",\n      totalProjects: 142,\n    },\n    {\n      name: \"Northwest Construction Solutions\",\n      partnerType: \"gc\",\n      location: \"Portland, OR\",\n      city: \"Portland\",\n      state: \"OR\",\n      latitude: \"45.5152\",\n      longitude: \"-122.6784\",\n      yearEstablished: 2017,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"3-12 concurrent projects, up to 200 units per project\",\n      certifications: \"Oregon CCB License, Green Building Certified\",\n      contactEmail: \"projects@nwconstruction.com\",\n      contactPhone: \"(503) 555-0267\",\n      website: \"www.northwestconstruction.com\",\n      description: \"Pacific Northwest contractor focused on sustainable modular construction\",\n      specialties: \"Green building, seismic compliance, moisture protection, local permitting\",\n      avgProjectSize: \"medium\",\n      rating: \"4.8\",\n      totalProjects: 98,\n    },\n    // AORs\n    {\n      name: \"Urban Design Associates\",\n      partnerType: \"aor\",\n      location: \"Seattle, WA\",\n      city: \"Seattle\",\n      state: \"WA\",\n      latitude: \"47.6062\",\n      longitude: \"-122.3321\",\n      yearEstablished: 2008,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"8-12 concurrent projects, specializes in entitlement process\",\n      certifications: \"AIA Member, NCARB Certified\",\n      contactEmail: \"design@urbandesignassoc.com\",\n      contactPhone: \"(206) 555-0654\",\n      website: \"www.urbandesignassoc.com\",\n      description: \"Architectural firm with extensive experience in modular design and urban entitlement\",\n      specialties: \"Zoning compliance, permit expediting, modular design optimization\",\n      avgProjectSize: \"medium\",\n      rating: \"4.8\",\n      totalProjects: 178,\n    },\n    {\n      name: \"Innovative Housing Architects\",\n      partnerType: \"aor\",\n      location: \"Austin, TX\",\n      city: \"Austin\",\n      state: \"TX\",\n      latitude: \"30.2672\",\n      longitude: \"-97.7431\",\n      yearEstablished: 2014,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"6-10 concurrent projects, specializes in affordable housing\",\n      certifications: \"Texas Registered Architect, LEED AP\",\n      contactEmail: \"team@innovativehousing.com\",\n      contactPhone: \"(512) 555-0432\",\n      website: \"www.innovativehousingar.com\",\n      description: \"Forward-thinking architectural practice focused on modular affordable housing solutions\",\n      specialties: \"Affordable housing design, modular optimization, sustainable architecture\",\n      avgProjectSize: \"medium\",\n      rating: \"4.7\",\n      totalProjects: 134,\n    },\n    {\n      name: \"Coastal Architecture Studio\",\n      partnerType: \"aor\",\n      location: \"Miami, FL\",\n      city: \"Miami\",\n      state: \"FL\",\n      latitude: \"25.7617\",\n      longitude: \"-80.1918\",\n      yearEstablished: 2011,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"4-8 concurrent projects, specializes in hurricane-resistant design\",\n      certifications: \"Florida Registered Architect, NCARB Certified\",\n      contactEmail: \"studio@coastalarchitecture.com\",\n      contactPhone: \"(305) 555-0765\",\n      website: \"www.coastalarchstudio.com\",\n      description: \"Specialized architectural firm designing hurricane-resistant modular buildings for coastal regions\",\n      specialties: \"Hurricane resistance, coastal construction, flood-resistant design, tropical climate adaptation\",\n      avgProjectSize: \"small\",\n      rating: \"4.9\",\n      totalProjects: 87,\n    },\n    // Transportation\n    {\n      name: \"Elite Modular Transport\",\n      partnerType: \"transportation\",\n      location: \"Phoenix, AZ\",\n      city: \"Phoenix\",\n      state: \"AZ\",\n      latitude: \"33.4484\",\n      longitude: \"-112.0740\",\n      yearEstablished: 2016,\n      buildingTypeFocus: \"all\",\n      capacity: \"200+ modular moves per month, nationwide coverage\",\n      certifications: \"DOT Certified, Heavy Haul Specialist\",\n      contactEmail: \"logistics@elitemodular.com\",\n      contactPhone: \"(602) 555-0987\",\n      website: \"www.elitemodulartransport.com\",\n      description: \"Specialized transportation and crane services for modular construction\",\n      specialties: \"Heavy haul transport, crane services, site logistics, installation supervision\",\n      avgProjectSize: \"all\",\n      rating: \"4.7\",\n      totalProjects: 892,\n    },\n    {\n      name: \"Precision Logistics Group\",\n      partnerType: \"transportation\",\n      location: \"Chicago, IL\",\n      city: \"Chicago\",\n      state: \"IL\",\n      latitude: \"41.8781\",\n      longitude: \"-87.6298\",\n      yearEstablished: 2019,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"150+ modular deliveries per month, Midwest coverage\",\n      certifications: \"DOT Certified, OSHA 10-Hour\",\n      contactEmail: \"dispatch@precisionlogistics.com\",\n      contactPhone: \"(312) 555-0543\",\n      website: \"www.precisionlogisticsgroup.com\",\n      description: \"Regional transportation specialist serving the Midwest modular construction market\",\n      specialties: \"Route planning, weather contingency, urban delivery, crane coordination\",\n      avgProjectSize: \"medium\",\n      rating: \"4.5\",\n      totalProjects: 567,\n    },\n    {\n      name: \"Coastal Heavy Haul\",\n      partnerType: \"transportation\",\n      location: \"Norfolk, VA\",\n      city: \"Norfolk\",\n      state: \"VA\",\n      latitude: \"36.8468\",\n      longitude: \"-76.2852\",\n      yearEstablished: 2015,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"100+ modular transports per month, East Coast coverage\",\n      certifications: \"Virginia DOT Certified, Heavy Haul Permit Specialist\",\n      contactEmail: \"operations@coastalheavyhaul.com\",\n      contactPhone: \"(757) 555-0321\",\n      website: \"www.coastalheavyhaul.com\",\n      description: \"East Coast transportation company specializing in modular building delivery and installation\",\n      specialties: \"Bridge navigation, coastal route expertise, port delivery, installation cranes\",\n      avgProjectSize: \"medium\",\n      rating: \"4.6\",\n      totalProjects: 423,\n    },\n    // Consultants\n    {\n      name: \"Strategic Development Advisors\",\n      partnerType: \"consultant\",\n      location: \"New York, NY\",\n      city: \"New York\",\n      state: \"NY\",\n      latitude: \"40.7128\",\n      longitude: \"-74.0060\",\n      yearEstablished: 2009,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"15-25 concurrent projects, specializes in feasibility analysis\",\n      certifications: \"CCIM, MAI Appraisal\",\n      contactEmail: \"consulting@strategicdev.com\",\n      contactPhone: \"(212) 555-0876\",\n      website: \"www.strategicdevelopmentadvisors.com\",\n      description: \"Premier development consulting firm specializing in modular construction feasibility and market analysis\",\n      specialties: \"Market analysis, financial modeling, entitlement strategy, development management\",\n      avgProjectSize: \"large\",\n      rating: \"4.8\",\n      totalProjects: 289,\n    },\n    {\n      name: \"Modular Efficiency Consultants\",\n      partnerType: \"consultant\",\n      location: \"Denver, CO\",\n      city: \"Denver\",\n      state: \"CO\",\n      latitude: \"39.7392\",\n      longitude: \"-104.9903\",\n      yearEstablished: 2018,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"8-15 concurrent projects, specializes in process optimization\",\n      certifications: \"Lean Six Sigma Black Belt, PMP\",\n      contactEmail: \"info@modularefficiency.com\",\n      contactPhone: \"(720) 555-0654\",\n      website: \"www.modularefficiencyconsultants.com\",\n      description: \"Specialized consultancy focused on optimizing modular construction workflows and efficiency\",\n      specialties: \"Process optimization, lean construction, supply chain management, quality assurance\",\n      avgProjectSize: \"medium\",\n      rating: \"4.7\",\n      totalProjects: 156,\n    },\n    {\n      name: \"Urban Planning Solutions\",\n      partnerType: \"consultant\",\n      location: \"Los Angeles, CA\",\n      city: \"Los Angeles\", \n      state: \"CA\",\n      latitude: \"34.0522\",\n      longitude: \"-118.2437\",\n      yearEstablished: 2012,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"10-18 concurrent projects, specializes in zoning compliance\",\n      certifications: \"AICP Certified, California Planning\",\n      contactEmail: \"planning@urbanplannningsolutions.com\",\n      contactPhone: \"(213) 555-0987\",\n      website: \"www.urbanplanningsolutions.com\",\n      description: \"Urban planning and zoning consultancy with extensive experience in modular development projects\",\n      specialties: \"Zoning analysis, entitlement processing, community engagement, regulatory compliance\",\n      avgProjectSize: \"medium\",\n      rating: \"4.9\",\n      totalProjects: 203,\n    },\n    // Engineering\n    {\n      name: \"Structural Engineering Associates\",\n      partnerType: \"engineering\",\n      location: \"San Jose, CA\",\n      city: \"San Jose\",\n      state: \"CA\",\n      latitude: \"37.3382\",\n      longitude: \"-121.8863\",\n      yearEstablished: 2010,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"12-20 concurrent projects, specializes in seismic design\",\n      certifications: \"California PE License, SE Certification\",\n      contactEmail: \"engineering@structuralassociates.com\",\n      contactPhone: \"(408) 555-0234\",\n      website: \"www.structuralengineeringassoc.com\",\n      description: \"Leading structural engineering firm specializing in modular building design and seismic compliance\",\n      specialties: \"Seismic engineering, structural analysis, connection design, building codes\",\n      avgProjectSize: \"large\",\n      rating: \"4.9\",\n      totalProjects: 245,\n    },\n    {\n      name: \"MEP Solutions Group\",\n      partnerType: \"engineering\",\n      location: \"Boston, MA\",\n      city: \"Boston\",\n      state: \"MA\",\n      latitude: \"42.3601\",\n      longitude: \"-71.0589\",\n      yearEstablished: 2016,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"8-16 concurrent projects, specializes in MEP systems\",\n      certifications: \"Massachusetts PE License, LEED AP\",\n      contactEmail: \"design@mepsolutionsgroup.com\",\n      contactPhone: \"(617) 555-0765\",\n      website: \"www.mepsolutionsgroup.com\",\n      description: \"Mechanical, electrical, and plumbing engineering firm focused on modular construction systems\",\n      specialties: \"MEP design, energy efficiency, modular system integration, building automation\",\n      avgProjectSize: \"medium\",\n      rating: \"4.6\",\n      totalProjects: 187,\n    },\n    {\n      name: \"Civil & Site Engineering\",\n      partnerType: \"engineering\",\n      location: \"Phoenix, AZ\",\n      city: \"Phoenix\",\n      state: \"AZ\",\n      latitude: \"33.4484\",\n      longitude: \"-112.0740\",\n      yearEstablished: 2014,\n      buildingTypeFocus: \"multifamily\",\n      capacity: \"6-12 concurrent projects, specializes in site development\",\n      certifications: \"Arizona PE License, LEED Green Associate\",\n      contactEmail: \"civil@civilsiteengineering.com\",\n      contactPhone: \"(602) 555-0432\",\n      website: \"www.civilandsiteengineering.com\",\n      description: \"Civil engineering firm specializing in site development and infrastructure for modular projects\",\n      specialties: \"Site planning, utilities design, drainage systems, accessibility compliance\",\n      avgProjectSize: \"medium\",\n      rating: \"4.7\",\n      totalProjects: 164,\n    },\n  ];\n\n  const createdPartners = [];\n  for (const partnerData of samplePartners) {\n    const partner = await storage.createPartner(partnerData);\n    createdPartners.push(partner);\n  }\n  \n  return createdPartners;\n}\n","size_bytes":45656},"server/storage.ts":{"content":"import {\n  users,\n  projects,\n  costBreakdowns,\n  partners,\n  partnerEvaluations,\n  partnerContracts,\n  designDocuments,\n  materialSpecifications,\n  doorSchedule,\n  designWorkflows,\n  engineeringDetails,\n  type User,\n  type UpsertUser,\n  type Project,\n  type InsertProject,\n  type CostBreakdown,\n  type InsertCostBreakdown,\n  type Partner,\n  type InsertPartner,\n  type PartnerEvaluation,\n  type InsertPartnerEvaluation,\n  type PartnerContract,\n  type InsertPartnerContract,\n  type DesignDocument,\n  type InsertDesignDocument,\n  type MaterialSpecification,\n  type InsertMaterialSpecification,\n  type DoorScheduleItem,\n  type InsertDoorScheduleItem,\n  type DesignWorkflow,\n  type InsertDesignWorkflow,\n  type EngineeringDetail,\n  type InsertEngineeringDetail,\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User operations (mandatory for Replit Auth)\n  getUser(id: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n  \n  // Project operations\n  getAllProjects(): Promise<Project[]>;\n  getUserProjects(userId: string): Promise<Project[]>;\n  getProject(id: string): Promise<Project | undefined>;\n  createProject(project: InsertProject & { userId: string }): Promise<Project>;\n  updateProject(id: string, project: Partial<InsertProject>): Promise<Project>;\n  deleteProject(id: string): Promise<void>;\n  \n  // Cost breakdown operations\n  getProjectCostBreakdowns(projectId: string): Promise<CostBreakdown[]>;\n  createCostBreakdown(breakdown: InsertCostBreakdown): Promise<CostBreakdown>;\n  updateCostBreakdown(id: string, breakdown: Partial<InsertCostBreakdown>): Promise<CostBreakdown>;\n  \n  // Partner operations\n  getAllPartners(): Promise<Partner[]>;\n  getPartnersByType(type: string): Promise<Partner[]>;\n  createPartner(partner: InsertPartner): Promise<Partner>;\n  getPartnerEvaluations(projectId: string): Promise<PartnerEvaluation[]>;\n  createPartnerEvaluation(evaluation: InsertPartnerEvaluation): Promise<PartnerEvaluation>;\n  getPartnerContracts(projectId: string): Promise<PartnerContract[]>;\n  createPartnerContract(contract: InsertPartnerContract): Promise<PartnerContract>;\n  \n  // EasyDesign operations\n  getDesignDocuments(projectId: string): Promise<DesignDocument[]>;\n  createDesignDocument(document: InsertDesignDocument): Promise<DesignDocument>;\n  getMaterialSpecifications(projectId: string): Promise<MaterialSpecification[]>;\n  createMaterialSpecification(spec: InsertMaterialSpecification): Promise<MaterialSpecification>;\n  getDoorSchedule(projectId: string): Promise<DoorScheduleItem[]>;\n  createDoorScheduleItem(item: InsertDoorScheduleItem): Promise<DoorScheduleItem>;\n  getDesignWorkflows(projectId: string): Promise<DesignWorkflow[]>;\n  createDesignWorkflow(workflow: InsertDesignWorkflow): Promise<DesignWorkflow>;\n  getEngineeringDetails(projectId: string): Promise<EngineeringDetail[]>;\n  createEngineeringDetail(detail: InsertEngineeringDetail): Promise<EngineeringDetail>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // Project operations\n  async getAllProjects(): Promise<Project[]> {\n    return await db\n      .select()\n      .from(projects)\n      .orderBy(desc(projects.updatedAt));\n  }\n\n  async getUserProjects(userId: string): Promise<Project[]> {\n    return await db\n      .select()\n      .from(projects)\n      .where(eq(projects.userId, userId))\n      .orderBy(desc(projects.updatedAt));\n  }\n\n  async getProject(id: string): Promise<Project | undefined> {\n    const [project] = await db.select().from(projects).where(eq(projects.id, id));\n    return project;\n  }\n\n  async createProject(project: InsertProject & { userId: string }): Promise<Project> {\n    const [newProject] = await db\n      .insert(projects)\n      .values(project)\n      .returning();\n    return newProject;\n  }\n\n  async updateProject(id: string, project: Partial<InsertProject>): Promise<Project> {\n    const [updatedProject] = await db\n      .update(projects)\n      .set({ ...project, updatedAt: new Date() })\n      .where(eq(projects.id, id))\n      .returning();\n    return updatedProject;\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    // Delete related records first due to foreign key constraints\n    await db.delete(costBreakdowns).where(eq(costBreakdowns.projectId, id));\n    // Then delete the project\n    await db.delete(projects).where(eq(projects.id, id));\n  }\n\n  // Cost breakdown operations - Now reads from unified JSON structure\n  async getProjectCostBreakdowns(projectId: string): Promise<CostBreakdown[]> {\n    // Get project with costAnalysis data\n    const [project] = await db\n      .select({ costAnalysis: projects.costAnalysis })\n      .from(projects)\n      .where(eq(projects.id, projectId));\n    \n    if (!project?.costAnalysis?.masterFormatBreakdown) {\n      // Fallback to legacy costBreakdowns table for backward compatibility\n      return await db\n        .select()\n        .from(costBreakdowns)\n        .where(eq(costBreakdowns.projectId, projectId));\n    }\n    \n    // Transform unified data back to legacy CostBreakdown format for API compatibility\n    return project.costAnalysis.masterFormatBreakdown.map((item, index) => ({\n      id: `${projectId}::${index}`, // Use :: delimiter to avoid UUID conflicts\n      projectId,\n      category: item.category,\n      siteBuiltCost: item.siteBuiltCost?.toString() || null,\n      raapGcCost: item.modularGcCost?.toString() || null, \n      raapFabCost: item.modularFabCost?.toString() || null,\n      raapTotalCost: item.modularTotalCost?.toString() || null\n    }));\n  }\n\n  async createCostBreakdown(breakdown: InsertCostBreakdown): Promise<CostBreakdown> {\n    // Get current project costAnalysis\n    const [project] = await db\n      .select({ costAnalysis: projects.costAnalysis })\n      .from(projects)\n      .where(eq(projects.id, breakdown.projectId));\n    \n    // Initialize costAnalysis if it doesn't exist\n    const currentCostAnalysis = project?.costAnalysis || {\n      masterFormatBreakdown: [],\n      detailedMetrics: {\n        modularConstruction: { designPhaseMonths: 0, fabricationMonths: 0, siteWorkMonths: 0 },\n        siteBuiltConstruction: { designPhaseMonths: 0, constructionMonths: 0 },\n        comparison: { costSavingsAmount: 0, timeSavingsMonths: 0, timeSavingsPercent: 0 }\n      },\n      pricingValidation: { isComplete: false, validatedBy: \"\", validatedAt: \"\", notes: \"\" }\n    };\n    \n    // Add new breakdown to masterFormatBreakdown array\n    const newBreakdownItem = {\n      category: breakdown.category,\n      categoryCode: breakdown.category.split(' - ')[0] || breakdown.category,\n      siteBuiltCost: parseFloat(breakdown.siteBuiltCost || \"0\"),\n      modularGcCost: parseFloat(breakdown.raapGcCost || \"0\"),\n      modularFabCost: parseFloat(breakdown.raapFabCost || \"0\"),\n      modularTotalCost: parseFloat(breakdown.raapTotalCost || \"0\"),\n      modularCostPerSf: 0\n    };\n    \n    currentCostAnalysis.masterFormatBreakdown.push(newBreakdownItem);\n    \n    // Update project with new costAnalysis\n    await db\n      .update(projects)\n      .set({ costAnalysis: currentCostAnalysis })\n      .where(eq(projects.id, breakdown.projectId));\n    \n    // Return in legacy format for API compatibility\n    return {\n      id: `${breakdown.projectId}::${currentCostAnalysis.masterFormatBreakdown.length - 1}`,\n      projectId: breakdown.projectId,\n      category: breakdown.category,\n      siteBuiltCost: breakdown.siteBuiltCost || null,\n      raapGcCost: breakdown.raapGcCost || null,\n      raapFabCost: breakdown.raapFabCost || null,\n      raapTotalCost: breakdown.raapTotalCost || null\n    };\n  }\n\n  async updateCostBreakdown(id: string, breakdown: Partial<InsertCostBreakdown>): Promise<CostBreakdown> {\n    // Extract projectId and index from composite ID (format: projectId::index)\n    const lastDelimiter = id.lastIndexOf('::');\n    if (lastDelimiter === -1) {\n      throw new Error(`Invalid cost breakdown ID format: ${id}. Expected format: projectId::index`);\n    }\n    \n    const projectId = id.substring(0, lastDelimiter);\n    const indexStr = id.substring(lastDelimiter + 2);\n    const index = parseInt(indexStr);\n    \n    if (!projectId || isNaN(index)) {\n      throw new Error(`Invalid cost breakdown ID format: ${id}. ProjectId: '${projectId}', Index: '${indexStr}'`);\n    }\n    \n    // Get current project costAnalysis\n    const [project] = await db\n      .select({ costAnalysis: projects.costAnalysis })\n      .from(projects)\n      .where(eq(projects.id, projectId));\n    \n    if (!project?.costAnalysis?.masterFormatBreakdown?.[index]) {\n      throw new Error(`Cost breakdown not found at index ${index} for project ${projectId}`);\n    }\n    \n    // Update the specific breakdown item\n    const updatedBreakdown = {\n      ...project.costAnalysis.masterFormatBreakdown[index],\n      ...(breakdown.category && { category: breakdown.category }),\n      ...(breakdown.category && { categoryCode: breakdown.category.split(' - ')[0] || breakdown.category }),\n      ...(breakdown.siteBuiltCost && { siteBuiltCost: parseFloat(breakdown.siteBuiltCost) }),\n      ...(breakdown.raapGcCost && { modularGcCost: parseFloat(breakdown.raapGcCost) }),\n      ...(breakdown.raapFabCost && { modularFabCost: parseFloat(breakdown.raapFabCost) }),\n      ...(breakdown.raapTotalCost && { modularTotalCost: parseFloat(breakdown.raapTotalCost) })\n    };\n    \n    // Update the array\n    project.costAnalysis.masterFormatBreakdown[index] = updatedBreakdown;\n    \n    // Save updated costAnalysis back to database\n    await db\n      .update(projects)\n      .set({ costAnalysis: project.costAnalysis })\n      .where(eq(projects.id, projectId));\n    \n    // Return in legacy format for API compatibility\n    return {\n      id,\n      projectId,\n      category: updatedBreakdown.category,\n      siteBuiltCost: updatedBreakdown.siteBuiltCost?.toString() || null,\n      raapGcCost: updatedBreakdown.modularGcCost?.toString() || null,\n      raapFabCost: updatedBreakdown.modularFabCost?.toString() || null,\n      raapTotalCost: updatedBreakdown.modularTotalCost?.toString() || null\n    };\n  }\n\n  // Partner operations\n  async getAllPartners(): Promise<Partner[]> {\n    return await db\n      .select()\n      .from(partners)\n      .where(eq(partners.isActive, true))\n      .orderBy(partners.name);\n  }\n\n  async getPartnersByType(type: string): Promise<Partner[]> {\n    return await db\n      .select()\n      .from(partners)\n      .where(eq(partners.partnerType, type) && eq(partners.isActive, true))\n      .orderBy(partners.name);\n  }\n\n  async createPartner(partnerData: InsertPartner): Promise<Partner> {\n    const [newPartner] = await db\n      .insert(partners)\n      .values(partnerData)\n      .returning();\n    return newPartner;\n  }\n\n  async getPartnerEvaluations(projectId: string): Promise<PartnerEvaluation[]> {\n    return await db\n      .select()\n      .from(partnerEvaluations)\n      .where(eq(partnerEvaluations.projectId, projectId))\n      .orderBy(desc(partnerEvaluations.evaluatedAt));\n  }\n\n  async createPartnerEvaluation(evaluation: InsertPartnerEvaluation): Promise<PartnerEvaluation> {\n    const [newEvaluation] = await db\n      .insert(partnerEvaluations)\n      .values(evaluation)\n      .returning();\n    return newEvaluation;\n  }\n\n  async getPartnerContracts(projectId: string): Promise<PartnerContract[]> {\n    return await db\n      .select()\n      .from(partnerContracts)\n      .where(eq(partnerContracts.projectId, projectId))\n      .orderBy(desc(partnerContracts.updatedAt));\n  }\n\n  async createPartnerContract(contract: InsertPartnerContract): Promise<PartnerContract> {\n    const [newContract] = await db\n      .insert(partnerContracts)\n      .values(contract)\n      .returning();\n    return newContract;\n  }\n\n  // EasyDesign operations\n  async getDesignDocuments(projectId: string): Promise<DesignDocument[]> {\n    return await db\n      .select()\n      .from(designDocuments)\n      .where(eq(designDocuments.projectId, projectId))\n      .orderBy(desc(designDocuments.createdAt));\n  }\n\n  async createDesignDocument(documentData: InsertDesignDocument): Promise<DesignDocument> {\n    const [newDocument] = await db\n      .insert(designDocuments)\n      .values(documentData)\n      .returning();\n    return newDocument;\n  }\n\n  async getMaterialSpecifications(projectId: string): Promise<MaterialSpecification[]> {\n    return await db\n      .select()\n      .from(materialSpecifications)\n      .where(eq(materialSpecifications.projectId, projectId))\n      .orderBy(materialSpecifications.roomType, materialSpecifications.materialCategory);\n  }\n\n  async createMaterialSpecification(specData: InsertMaterialSpecification): Promise<MaterialSpecification> {\n    const [newSpec] = await db\n      .insert(materialSpecifications)\n      .values(specData)\n      .returning();\n    return newSpec;\n  }\n\n  async getDoorSchedule(projectId: string): Promise<DoorScheduleItem[]> {\n    return await db\n      .select()\n      .from(doorSchedule)\n      .where(eq(doorSchedule.projectId, projectId))\n      .orderBy(doorSchedule.doorNumber);\n  }\n\n  async createDoorScheduleItem(itemData: InsertDoorScheduleItem): Promise<DoorScheduleItem> {\n    const [newItem] = await db\n      .insert(doorSchedule)\n      .values(itemData)\n      .returning();\n    return newItem;\n  }\n\n  async getDesignWorkflows(projectId: string): Promise<DesignWorkflow[]> {\n    return await db\n      .select()\n      .from(designWorkflows)\n      .where(eq(designWorkflows.projectId, projectId))\n      .orderBy(designWorkflows.dueDate, designWorkflows.priority);\n  }\n\n  async createDesignWorkflow(workflowData: InsertDesignWorkflow): Promise<DesignWorkflow> {\n    const [newWorkflow] = await db\n      .insert(designWorkflows)\n      .values(workflowData)\n      .returning();\n    return newWorkflow;\n  }\n\n  async getEngineeringDetails(projectId: string): Promise<EngineeringDetail[]> {\n    return await db\n      .select()\n      .from(engineeringDetails)\n      .where(eq(engineeringDetails.projectId, projectId))\n      .orderBy(engineeringDetails.system, engineeringDetails.detailType);\n  }\n\n  async createEngineeringDetail(detailData: InsertEngineeringDetail): Promise<EngineeringDetail> {\n    const [newDetail] = await db\n      .insert(engineeringDetails)\n      .values(detailData)\n      .returning();\n    return newDetail;\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":14848},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from 'drizzle-orm';\nimport {\n  index,\n  jsonb,\n  pgTable,\n  timestamp,\n  varchar,\n  text,\n  decimal,\n  integer,\n  boolean,\n} from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table (mandatory for Replit Auth)\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User storage table (mandatory for Replit Auth)\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Projects table - Enhanced with unified JSON fields for single source of truth\nexport const projects = pgTable(\"projects\", {\n  // Core Project Information (keep existing column names for compatibility)\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  name: varchar(\"name\").notNull(),\n  address: text(\"address\").notNull(),\n  projectType: varchar(\"project_type\").notNull(),\n  targetFloors: integer(\"target_floors\").notNull(),\n  studioUnits: integer(\"studio_units\").default(0),\n  oneBedUnits: integer(\"one_bed_units\").default(0),\n  twoBedUnits: integer(\"two_bed_units\").default(0),\n  threeBedUnits: integer(\"three_bed_units\").default(0),\n  // Hotel/Hostel specific unit types\n  queenUnits: integer(\"queen_units\").default(0),\n  kingUnits: integer(\"king_units\").default(0),\n  adaPercent: decimal(\"ada_percent\", { precision: 5, scale: 2 }).default('0'),\n  targetParkingSpaces: integer(\"target_parking_spaces\").notNull(),\n  buildingDimensions: varchar(\"building_dimensions\"),\n  constructionType: varchar(\"construction_type\"),\n  // Building specifications\n  buildingHeight: integer(\"building_height\"), // in feet\n  totalBuildingArea: integer(\"total_building_area\"), // in square feet\n  siteCoverage: decimal(\"site_coverage\", { precision: 5, scale: 2 }), // percentage\n  moduleSize: varchar(\"module_size\"), // e.g., \"14' X 70'\"\n  baseType: varchar(\"base_type\"), // e.g., \"Concrete Slab\"\n  isSample: boolean(\"is_sample\").default(false),\n  \n  // Feasibility scoring (keep existing for compatibility)\n  zoningScore: decimal(\"zoning_score\", { precision: 3, scale: 1 }),\n  zoningJustification: text(\"zoning_justification\"),\n  massingScore: decimal(\"massing_score\", { precision: 3, scale: 1 }),\n  massingJustification: text(\"massing_justification\"),\n  costScore: decimal(\"cost_score\", { precision: 3, scale: 1 }),\n  costJustification: text(\"cost_justification\"),\n  sustainabilityScore: decimal(\"sustainability_score\", { precision: 3, scale: 1 }),\n  sustainabilityJustification: text(\"sustainability_justification\"),\n  logisticsScore: decimal(\"logistics_score\", { precision: 3, scale: 1 }),\n  logisticsJustification: text(\"logistics_justification\"),\n  buildTimeScore: decimal(\"build_time_score\", { precision: 3, scale: 1 }),\n  buildTimeJustification: text(\"build_time_justification\"),\n  overallScore: decimal(\"overall_score\", { precision: 3, scale: 1 }),\n  \n  // Cost analysis (keep existing for compatibility)\n  modularTotalCost: decimal(\"modular_total_cost\", { precision: 12, scale: 2 }),\n  modularCostPerSf: decimal(\"modular_cost_per_sf\", { precision: 8, scale: 2 }),\n  modularCostPerUnit: decimal(\"modular_cost_per_unit\", { precision: 10, scale: 2 }),\n  siteBuiltTotalCost: decimal(\"site_built_total_cost\", { precision: 12, scale: 2 }),\n  siteBuiltCostPerSf: decimal(\"site_built_cost_per_sf\", { precision: 8, scale: 2 }),\n  siteBuiltCostPerUnit: decimal(\"site_built_cost_per_unit\", { precision: 10, scale: 2 }),\n  costSavingsPercent: decimal(\"cost_savings_percent\", { precision: 5, scale: 2 }),\n  \n  // Timeline analysis (keep existing for compatibility)\n  modularTimelineMonths: decimal(\"modular_timeline_months\", { precision: 4, scale: 1 }),\n  siteBuiltTimelineMonths: decimal(\"site_built_timeline_months\", { precision: 4, scale: 1 }),\n  timeSavingsMonths: decimal(\"time_savings_months\", { precision: 4, scale: 1 }),\n  \n  // Zoning details (keep existing for compatibility)\n  zoningDistrict: varchar(\"zoning_district\"),\n  densityBonusEligible: boolean(\"density_bonus_eligible\").default(false),\n  requiredWaivers: text(\"required_waivers\"),\n  \n  // Logistics details (keep existing for compatibility)\n  factoryLocation: varchar(\"factory_location\"),\n  transportationNotes: text(\"transportation_notes\"),\n  stagingNotes: text(\"staging_notes\"),\n  \n  // Application workflow progress tracking (keep existing for compatibility)\n  modularFeasibilityComplete: boolean(\"modular_feasibility_complete\").default(false),\n  smartStartComplete: boolean(\"smart_start_complete\").default(false),\n  fabAssureComplete: boolean(\"fab_assure_complete\").default(false),\n  easyDesignComplete: boolean(\"easy_design_complete\").default(false),\n  \n  // SmartStart application fields (keep existing for compatibility)\n  entitlementStatus: varchar(\"entitlement_status\"),\n  entitlementNotes: text(\"entitlement_notes\"),\n  planningSdkSubmitted: boolean(\"planning_sdk_submitted\").default(false),\n  preliminaryDesignComplete: boolean(\"preliminary_design_complete\").default(false),\n  permitApplicationSubmitted: boolean(\"permit_application_submitted\").default(false),\n  permitStatus: varchar(\"permit_status\"),\n  permitNotes: text(\"permit_notes\"),\n  \n  // Design Package fields (keep existing for compatibility)\n  buildingLayoutComplete: boolean(\"building_layout_complete\").default(false),\n  unitDesignsComplete: boolean(\"unit_designs_complete\").default(false),\n  buildingRenderingsComplete: boolean(\"building_renderings_complete\").default(false),\n  designPackageStatus: varchar(\"design_package_status\"),\n  buildingRenderingUrls: text(\"building_rendering_urls\"),\n  unitLayoutData: text(\"unit_layout_data\"),\n  buildingLayoutData: text(\"building_layout_data\"),\n  \n  // AOR Collaboration fields (keep existing for compatibility)\n  aorPartner: varchar(\"aor_partner\"),\n  aorContactInfo: text(\"aor_contact_info\"),\n  designHandoffComplete: boolean(\"design_handoff_complete\").default(false),\n  aorReviewStatus: varchar(\"aor_review_status\"),\n  aorFeedback: text(\"aor_feedback\"),\n  entitlementPackageStatus: varchar(\"entitlement_package_status\"),\n  \n  // Refined Pricing Package fields (keep existing for compatibility)\n  fabricatorPartner1: varchar(\"fabricator_partner_1\"),\n  fabricatorPartner2: varchar(\"fabricator_partner_2\"),\n  fabricatorPartner3: varchar(\"fabricator_partner_3\"),\n  gcPartner1: varchar(\"gc_partner_1\"),\n  gcPartner2: varchar(\"gc_partner_2\"),\n  gcPartner3: varchar(\"gc_partner_3\"),\n  fabricatorPricing1: decimal(\"fabricator_pricing_1\", { precision: 12, scale: 2 }),\n  fabricatorPricing2: decimal(\"fabricator_pricing_2\", { precision: 12, scale: 2 }),\n  fabricatorPricing3: decimal(\"fabricator_pricing_3\", { precision: 12, scale: 2 }),\n  gcPricing1: decimal(\"gc_pricing_1\", { precision: 12, scale: 2 }),\n  gcPricing2: decimal(\"gc_pricing_2\", { precision: 12, scale: 2 }),\n  gcPricing3: decimal(\"gc_pricing_3\", { precision: 12, scale: 2 }),\n  pricingValidationComplete: boolean(\"pricing_validation_complete\").default(false),\n  refinedCostingComplete: boolean(\"refined_costing_complete\").default(false),\n  \n  // Cost Collaboration fields (keep existing for compatibility)\n  fabricatorNegotiationStatus: varchar(\"fabricator_negotiation_status\"),\n  gcNegotiationStatus: varchar(\"gc_negotiation_status\"),\n  costFinalizationComplete: boolean(\"cost_finalization_complete\").default(false),\n  finalSelectedFabricator: varchar(\"final_selected_fabricator\"),\n  finalSelectedGc: varchar(\"final_selected_gc\"),\n  finalFabricatorCost: decimal(\"final_fabricator_cost\", { precision: 12, scale: 2 }),\n  finalGcCost: decimal(\"final_gc_cost\", { precision: 12, scale: 2 }),\n  costCollaborationNotes: text(\"cost_collaboration_notes\"),\n  \n  // FabAssure application fields (keep existing for compatibility)\n  factoryPartner: varchar(\"factory_partner\"),\n  factorySchedulingComplete: boolean(\"factory_scheduling_complete\").default(false),\n  qualityAssurancePlan: text(\"quality_assurance_plan\"),\n  fabricationStart: timestamp(\"fabrication_start\"),\n  fabricationTimeline: text(\"fabrication_timeline\"),\n  qualityCheckpoints: text(\"quality_checkpoints\"),\n  shippingPlan: text(\"shipping_plan\"),\n  factoryInspectionScheduled: boolean(\"factory_inspection_scheduled\").default(false),\n  \n  // EasyDesign application fields (keep existing for compatibility)\n  designCustomizationLevel: varchar(\"design_customization_level\"),\n  architecturalPlansFinalized: boolean(\"architectural_plans_finalized\").default(false),\n  interiorDesignComplete: boolean(\"interior_design_complete\").default(false),\n  materialSelectionsFinalized: boolean(\"material_selections_finalized\").default(false),\n  systemsDesignComplete: boolean(\"systems_design_complete\").default(false),\n  finalDesignApproval: boolean(\"final_design_approval\").default(false),\n  designNotes: text(\"design_notes\"),\n  \n  // NEW: Unified JSON fields for enhanced data organization (additive approach)\n  // These provide a single source of truth while maintaining backward compatibility\n  \n  // Comprehensive Cost Analysis (replaces separate costBreakdowns table)\n  costAnalysis: jsonb(\"cost_analysis\").$type<{\n    masterFormatBreakdown: Array<{\n      category: string;\n      categoryCode: string;\n      siteBuiltCost: number;\n      modularGcCost: number;\n      modularFabCost: number;\n      modularTotalCost: number;\n      modularCostPerSf: number;\n    }>;\n    detailedMetrics: {\n      modularConstruction: {\n        designPhaseMonths: number;\n        fabricationMonths: number;\n        siteWorkMonths: number;\n      };\n      siteBuiltConstruction: {\n        designPhaseMonths: number;\n        constructionMonths: number;\n      };\n      comparison: {\n        costSavingsAmount: number;\n        timeSavingsMonths: number;\n        timeSavingsPercent: number;\n      };\n    };\n    pricingValidation: {\n      isComplete: boolean;\n      validatedBy: string;\n      validatedAt: string; // ISO string\n      notes: string;\n    };\n  }>(),\n  \n  // Timestamps\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Cost breakdown table (MasterFormat categories) - Keep existing for backward compatibility\nexport const costBreakdowns = pgTable(\"cost_breakdowns\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  projectId: varchar(\"project_id\").references(() => projects.id).notNull(),\n  category: varchar(\"category\").notNull(), // MasterFormat category\n  siteBuiltCost: decimal(\"site_built_cost\", { precision: 10, scale: 2 }),\n  raapGcCost: decimal(\"raap_gc_cost\", { precision: 10, scale: 2 }),\n  raapFabCost: decimal(\"raap_fab_cost\", { precision: 10, scale: 2 }),\n  raapTotalCost: decimal(\"raap_total_cost\", { precision: 10, scale: 2 }),\n});\n\n// Type definitions\nexport type UpsertUser = typeof users.$inferInsert;\nexport type User = typeof users.$inferSelect;\nexport type Project = typeof projects.$inferSelect;\nexport type InsertProject = typeof projects.$inferInsert;\nexport type CostBreakdown = typeof costBreakdowns.$inferSelect;\nexport type InsertCostBreakdown = typeof costBreakdowns.$inferInsert;\n\n// Schema validation for the unified project structure\n// Zod schema that mirrors the costAnalysis JSON structure\nexport const costAnalysisSchema = z.object({\n  masterFormatBreakdown: z.array(z.object({\n    category: z.string(),\n    categoryCode: z.string(),\n    siteBuiltCost: z.number(),\n    modularGcCost: z.number(),\n    modularFabCost: z.number(),\n    modularTotalCost: z.number(),\n    modularCostPerSf: z.number(),\n  })),\n  detailedMetrics: z.object({\n    modularConstruction: z.object({\n      designPhaseMonths: z.number(),\n      fabricationMonths: z.number(),\n      siteWorkMonths: z.number()\n    }),\n    siteBuiltConstruction: z.object({\n      designPhaseMonths: z.number(),\n      constructionMonths: z.number()\n    }),\n    comparison: z.object({\n      costSavingsAmount: z.number(),\n      timeSavingsMonths: z.number(),\n      timeSavingsPercent: z.number()\n    })\n  }),\n  pricingValidation: z.object({\n    isComplete: z.boolean(),\n    validatedBy: z.string(),\n    validatedAt: z.string(),\n    notes: z.string()\n  })\n});\n\nexport const insertProjectSchema = createInsertSchema(projects, {\n  costAnalysis: costAnalysisSchema.optional()\n}).omit({\n  id: true,\n  userId: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertCostBreakdownSchema = createInsertSchema(costBreakdowns).omit({\n  id: true,\n});\n\n// Helper schemas for structured data validation\nexport const buildingConfigurationSchema = z.object({\n  floors: z.number().min(1),\n  buildingDimensions: z.string(),\n  constructionType: z.string(),\n  unitMix: z.object({\n    studio: z.number().min(0),\n    oneBedroom: z.number().min(0),\n    twoBedroom: z.number().min(0),\n    threeBedroom: z.number().min(0),\n  }),\n  parking: z.object({\n    targetSpaces: z.number().min(0),\n    parkingType: z.enum(['surface', 'garage', 'mixed']),\n  }),\n  buildingSpecs: z.object({\n    grossSquareFootage: z.number().min(1),\n    unitAverageSize: z.number().min(1),\n    commonAreaSize: z.number().min(0),\n  }),\n});\n\nexport const feasibilityAssessmentSchema = z.object({\n  scoringWeights: z.object({\n    zoning: z.number(),\n    massing: z.number(),\n    sustainability: z.number(),\n    cost: z.number(),\n    logistics: z.number(),\n    buildTime: z.number(),\n  }),\n  criteriaScores: z.object({\n    zoning: z.object({\n      score: z.number().min(1).max(5),\n      justification: z.string(),\n      details: z.string(),\n    }),\n    massing: z.object({\n      score: z.number().min(1).max(5),\n      justification: z.string(),\n      details: z.string(),\n    }),\n    sustainability: z.object({\n      score: z.number().min(1).max(5),\n      justification: z.string(),\n      details: z.string(),\n    }),\n    cost: z.object({\n      score: z.number().min(1).max(5),\n      justification: z.string(),\n      details: z.string(),\n    }),\n    logistics: z.object({\n      score: z.number().min(1).max(5),\n      justification: z.string(),\n      details: z.string(),\n    }),\n    buildTime: z.object({\n      score: z.number().min(1).max(5),\n      justification: z.string(),\n      details: z.string(),\n    }),\n  }),\n});\n\nexport const masterFormatCategorySchema = z.object({\n  category: z.string(),\n  categoryCode: z.string(),\n  siteBuiltCost: z.number(),\n  modularGcCost: z.number(),\n  modularFabCost: z.number(),\n  modularTotalCost: z.number(),\n  modularCostPerSf: z.number(),\n});\n\n// Type exports for structured data\nexport type BuildingConfiguration = z.infer<typeof buildingConfigurationSchema>;\nexport type FeasibilityAssessment = z.infer<typeof feasibilityAssessmentSchema>;\nexport type MasterFormatCategory = z.infer<typeof masterFormatCategorySchema>;\n\n// Partners table for FabAssure marketplace\nexport const partners = pgTable(\"partners\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\").notNull(),\n  partnerType: varchar(\"partner_type\").notNull(), // \"fabricator\", \"gc\", \"aor\", \"consultant\", \"transportation\", \"engineering\", \"implementation\"\n  location: varchar(\"location\").notNull(),\n  city: varchar(\"city\").notNull(),\n  state: varchar(\"state\").notNull(),\n  latitude: decimal(\"latitude\", { precision: 10, scale: 8 }),\n  longitude: decimal(\"longitude\", { precision: 11, scale: 8 }),\n  yearEstablished: integer(\"year_established\"),\n  buildingTypeFocus: varchar(\"building_type_focus\"), // \"multifamily\", \"commercial\", \"mixed-use\", \"all\"\n  capacity: text(\"capacity\"), // Description of capacity/capabilities\n  certifications: text(\"certifications\"),\n  contactEmail: varchar(\"contact_email\"),\n  contactPhone: varchar(\"contact_phone\"),\n  website: varchar(\"website\"),\n  description: text(\"description\"),\n  specialties: text(\"specialties\"),\n  avgProjectSize: varchar(\"avg_project_size\"), // \"small\", \"medium\", \"large\", \"all\"\n  rating: decimal(\"rating\", { precision: 3, scale: 2 }), // 1.00 to 5.00\n  totalProjects: integer(\"total_projects\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Partner evaluations for projects\nexport const partnerEvaluations = pgTable(\"partner_evaluations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  projectId: varchar(\"project_id\").references(() => projects.id).notNull(),\n  partnerId: varchar(\"partner_id\").references(() => partners.id).notNull(),\n  evaluationType: varchar(\"evaluation_type\").notNull(), // \"cost\", \"design\", \"quality\", \"reliability\"\n  score: decimal(\"score\", { precision: 3, scale: 1 }), // 1.0 to 10.0\n  notes: text(\"notes\"),\n  evaluatedAt: timestamp(\"evaluated_at\").defaultNow(),\n});\n\n// Contract terms for selected partners\nexport const partnerContracts = pgTable(\"partner_contracts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  projectId: varchar(\"project_id\").references(() => projects.id).notNull(),\n  partnerId: varchar(\"partner_id\").references(() => partners.id).notNull(),\n  contractType: varchar(\"contract_type\").notNull(), // \"fabrication\", \"gc\", \"design\", \"consulting\"\n  contractValue: decimal(\"contract_value\", { precision: 12, scale: 2 }),\n  paymentTerms: text(\"payment_terms\"),\n  deliverySchedule: text(\"delivery_schedule\"),\n  qualityRequirements: text(\"quality_requirements\"),\n  penaltyClauses: text(\"penalty_clauses\"),\n  warrantyTerms: text(\"warranty_terms\"),\n  contractStatus: varchar(\"contract_status\").default(\"draft\"), // \"draft\", \"negotiating\", \"signed\", \"completed\"\n  signedAt: timestamp(\"signed_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport type Partner = typeof partners.$inferSelect;\nexport type InsertPartner = typeof partners.$inferInsert;\nexport type PartnerEvaluation = typeof partnerEvaluations.$inferSelect;\nexport type InsertPartnerEvaluation = typeof partnerEvaluations.$inferInsert;\nexport type PartnerContract = typeof partnerContracts.$inferSelect;\nexport type InsertPartnerContract = typeof partnerContracts.$inferInsert;\n\n// Design documents table for EasyDesign application\nexport const designDocuments = pgTable(\"design_documents\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  projectId: varchar(\"project_id\").references(() => projects.id).notNull(),\n  documentType: varchar(\"document_type\").notNull(), // \"room_design\", \"door_schedule\", \"hardware_schedule\", \"mep_detail\", \"structural_detail\", \"revit_library\", \"pdf_draft\", \"shop_drawing\"\n  documentCategory: varchar(\"document_category\").notNull(), // \"unit_design\", \"building_design\", \"factory_permit\", \"ahj_permit\"\n  title: varchar(\"title\").notNull(),\n  description: text(\"description\"),\n  filePath: varchar(\"file_path\"), // Object storage path\n  fileType: varchar(\"file_type\"), // \"pdf\", \"dwg\", \"rvt\", \"xlsx\", \"jpg\", \"png\"\n  fileSize: integer(\"file_size\"), // Size in bytes\n  stakeholder: varchar(\"stakeholder\"), // \"aor\", \"fabricator\", \"gc\", \"trades\", \"owner\"\n  status: varchar(\"status\").default(\"draft\"), // \"draft\", \"review\", \"approved\", \"final\"\n  createdBy: varchar(\"created_by\").references(() => users.id),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Material and finish specifications\nexport const materialSpecifications = pgTable(\"material_specifications\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  projectId: varchar(\"project_id\").references(() => projects.id).notNull(),\n  roomType: varchar(\"room_type\").notNull(), // \"living\", \"bedroom\", \"bathroom\", \"kitchen\", \"hallway\", \"exterior\"\n  unitType: varchar(\"unit_type\"), // \"studio\", \"1bed\", \"2bed\", \"3bed\" or null for common areas\n  materialCategory: varchar(\"material_category\").notNull(), // \"flooring\", \"wall_finish\", \"ceiling\", \"trim\", \"fixtures\", \"appliances\"\n  materialName: varchar(\"material_name\").notNull(),\n  manufacturer: varchar(\"manufacturer\"),\n  modelNumber: varchar(\"model_number\"),\n  color: varchar(\"color\"),\n  finish: varchar(\"finish\"),\n  specifications: text(\"specifications\"),\n  costPerUnit: decimal(\"cost_per_unit\", { precision: 8, scale: 2 }),\n  unitOfMeasure: varchar(\"unit_of_measure\"), // \"sqft\", \"lnft\", \"each\"\n  productSheetPath: varchar(\"product_sheet_path\"), // Object storage path to product sheet\n  installationNotes: text(\"installation_notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Door and hardware schedules\nexport const doorSchedule = pgTable(\"door_schedule\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  projectId: varchar(\"project_id\").references(() => projects.id).notNull(),\n  doorNumber: varchar(\"door_number\").notNull(), // \"D01\", \"D02\", etc.\n  unitType: varchar(\"unit_type\"), // \"studio\", \"1bed\", \"2bed\", \"3bed\" or null for common\n  location: varchar(\"location\").notNull(), // \"unit_entry\", \"bedroom\", \"bathroom\", \"closet\", \"mechanical\"\n  doorType: varchar(\"door_type\").notNull(), // \"hinged\", \"sliding\", \"bifold\", \"pocket\"\n  width: decimal(\"width\", { precision: 5, scale: 2 }), // In inches\n  height: decimal(\"height\", { precision: 5, scale: 2 }), // In inches\n  material: varchar(\"material\"), // \"solid_core\", \"hollow_core\", \"glass\", \"metal\"\n  finish: varchar(\"finish\"),\n  fireRating: varchar(\"fire_rating\"), // \"0\", \"20\", \"45\", \"60\", \"90\"\n  hardwareSet: varchar(\"hardware_set\"), // Reference to hardware specification\n  locksetType: varchar(\"lockset_type\"), // \"passage\", \"privacy\", \"entry\", \"dummy\"\n  hingetype: varchar(\"hinge_type\"),\n  threshold: varchar(\"threshold\"),\n  weatherstrip: boolean(\"weatherstrip\").default(false),\n  notes: text(\"notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Design workflows and tasks\nexport const designWorkflows = pgTable(\"design_workflows\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  projectId: varchar(\"project_id\").references(() => projects.id).notNull(),\n  workflowType: varchar(\"workflow_type\").notNull(), // \"aor_handoff\", \"fabricator_coordination\", \"gc_trades_coordination\"\n  taskName: varchar(\"task_name\").notNull(),\n  description: text(\"description\"),\n  assignedTo: varchar(\"assigned_to\"), // Stakeholder responsible\n  dueDate: timestamp(\"due_date\"),\n  status: varchar(\"status\").default(\"pending\"), // \"pending\", \"in_progress\", \"completed\", \"blocked\"\n  priority: varchar(\"priority\").default(\"medium\"), // \"low\", \"medium\", \"high\", \"critical\"\n  deliverables: text(\"deliverables\"), // JSON array of deliverable items\n  completionNotes: text(\"completion_notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// MEP and structural details\nexport const engineeringDetails = pgTable(\"engineering_details\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  projectId: varchar(\"project_id\").references(() => projects.id).notNull(),\n  system: varchar(\"system\").notNull(), // \"mechanical\", \"electrical\", \"plumbing\", \"structural\"\n  detailType: varchar(\"detail_type\").notNull(), // \"connection\", \"layout\", \"schedule\", \"specification\"\n  title: varchar(\"title\").notNull(),\n  description: text(\"description\"),\n  drawingNumber: varchar(\"drawing_number\"),\n  specification: text(\"specification\"),\n  designLoadNotes: text(\"design_load_notes\"),\n  installationNotes: text(\"installation_notes\"),\n  inspectionRequirements: text(\"inspection_requirements\"),\n  codeReferences: text(\"code_references\"),\n  detailDrawingPath: varchar(\"detail_drawing_path\"), // Object storage path\n  calculationPath: varchar(\"calculation_path\"), // Object storage path for engineering calcs\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport type DesignDocument = typeof designDocuments.$inferSelect;\nexport type InsertDesignDocument = typeof designDocuments.$inferInsert;\nexport type MaterialSpecification = typeof materialSpecifications.$inferSelect;\nexport type InsertMaterialSpecification = typeof materialSpecifications.$inferInsert;\nexport type DoorScheduleItem = typeof doorSchedule.$inferSelect;\nexport type InsertDoorScheduleItem = typeof doorSchedule.$inferInsert;\nexport type DesignWorkflow = typeof designWorkflows.$inferSelect;\nexport type InsertDesignWorkflow = typeof designWorkflows.$inferInsert;\nexport type EngineeringDetail = typeof engineeringDetails.$inferSelect;\nexport type InsertEngineeringDetail = typeof engineeringDetails.$inferInsert;\n\n","size_bytes":24858},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Landing from \"@/pages/Landing\";\nimport Dashboard from \"@/pages/Dashboard\";\nimport ProjectDetail from \"@/pages/ProjectDetail\";\nimport CreateProject from \"@/pages/CreateProject\";\nimport WorkflowOverview from \"@/pages/WorkflowOverview\";\nimport ModularFeasibility from \"@/pages/ModularFeasibility\";\nimport SmartStart from \"@/pages/SmartStart\";\nimport FabAssure from \"@/pages/FabAssure\";\nimport EasyDesign from \"@/pages/EasyDesign\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} />\n      <Route path=\"/landing\" component={Landing} />\n      <Route path=\"/projects/:id/workflow\" component={WorkflowOverview} />\n      <Route path=\"/projects/:id/modular-feasibility\" component={ModularFeasibility} />\n      <Route path=\"/projects/:id/smart-start\" component={SmartStart} />\n      <Route path=\"/projects/:id/fab-assure\" component={FabAssure} />\n      <Route path=\"/projects/:id/easy-design\" component={EasyDesign} />\n      <Route path=\"/projects/:id\" component={ProjectDetail} />\n      <Route path=\"/create-project\" component={CreateProject} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1663},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(210, 25%, 7.8431%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(210, 25%, 7.8431%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(210, 25%, 7.8431%);\n  --primary: hsl(140, 35.29%, 24.51%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(39.13%, 86.05%, 58.04%);\n  --secondary-foreground: hsl(210, 25%, 7.8431%);\n  --muted: hsl(240, 1.9608%, 90%);\n  --muted-foreground: hsl(210, 25%, 7.8431%);\n  --accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --accent-foreground: hsl(140, 35.29%, 24.51%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(201.4286, 30.4348%, 90.9804%);\n  --input: hsl(200, 23.0769%, 97.4510%);\n  --ring: hsl(140, 35.29%, 24.51%);\n  --chart-1: hsl(140, 35.29%, 24.51%);\n  --chart-2: hsl(39.13%, 86.05%, 58.04%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(0, 0%, 100%);\n  --sidebar-foreground: hsl(210, 25%, 7.8431%);\n  --sidebar-primary: hsl(140, 35.29%, 24.51%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --sidebar-accent-foreground: hsl(140, 35.29%, 24.51%);\n  --sidebar-border: hsl(205.0000, 25.0000%, 90.5882%);\n  --sidebar-ring: hsl(140, 35.29%, 24.51%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.5rem;\n  --raap-green: hsl(140, 35.29%, 24.51%);\n  --raap-mustard: hsl(39.13%, 86.05%, 58.04%);\n  --raap-dark: hsl(220, 19.05%, 22.35%);\n  --raap-light: hsl(216, 33.33%, 97.45%);\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(200, 6.6667%, 91.1765%);\n  --card: hsl(228, 9.8039%, 10%);\n  --card-foreground: hsl(0, 0%, 85.0980%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(200, 6.6667%, 91.1765%);\n  --primary: hsl(140, 35.29%, 24.51%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(39.13%, 86.05%, 58.04%);\n  --secondary-foreground: hsl(210, 25%, 7.8431%);\n  --muted: hsl(0, 0%, 9.4118%);\n  --muted-foreground: hsl(210, 3.3898%, 46.2745%);\n  --accent: hsl(205.7143, 70%, 7.8431%);\n  --accent-foreground: hsl(140, 35.29%, 24.51%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5.2632%, 14.9020%);\n  --input: hsl(207.6923, 27.6596%, 18.4314%);\n  --ring: hsl(140, 35.29%, 24.51%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: 'Inter', system-ui, sans-serif;\n  }\n}\n\n@layer utilities {\n  .raap-green {\n    color: var(--raap-green);\n  }\n  \n  .bg-raap-green {\n    background-color: var(--raap-green);\n  }\n  \n  .border-raap-green {\n    border-color: var(--raap-green);\n  }\n  \n  .raap-mustard {\n    color: var(--raap-mustard);\n  }\n  \n  .bg-raap-mustard {\n    background-color: var(--raap-mustard);\n  }\n  \n  .border-raap-mustard {\n    border-color: var(--raap-mustard);\n  }\n  \n  .raap-dark {\n    color: var(--raap-dark);\n  }\n  \n  .bg-raap-dark {\n    background-color: var(--raap-dark);\n  }\n}\n","size_bytes":3404},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/CostAnalysis.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport type { Project, CostBreakdown } from \"@shared/schema\";\nimport { useCostTotals, formatCurrency } from \"@/lib/useCostTotals\";\n\ninterface CostAnalysisProps {\n  project: Project;\n  costBreakdowns: CostBreakdown[];\n}\n\nexport default function CostAnalysis({ project, costBreakdowns }: CostAnalysisProps) {\n  // SINGLE SOURCE OF TRUTH: Use shared cost calculation utility\n  const costTotals = useCostTotals(project, costBreakdowns);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-raap-dark\">Cost Analysis</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-6\">\n          <div>\n            <h4 className=\"font-semibold text-raap-dark mb-4\">RaaP Modular Construction</h4>\n            <div className=\"bg-green-50 p-4 rounded-lg\">\n              <div className=\"text-3xl font-bold text-green-600\">\n                {formatCurrency(costTotals.modularTotal)}\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                ${Math.round(costTotals.modularCostPerSf)}/sf • \n                ${Math.round(costTotals.modularCostPerUnit).toLocaleString()}/unit\n              </div>\n              {costTotals.costSavingsPercent > 0 && (\n                <div className=\"text-sm text-green-600 font-medium mt-1\">\n                  {costTotals.costSavingsPercent.toFixed(1)}% savings over site-built\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold text-raap-dark mb-4\">Traditional Site-Built</h4>\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <div className=\"text-3xl font-bold text-gray-700\">\n                {formatCurrency(costTotals.siteBuiltTotal)}\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                ${Math.round(costTotals.siteBuiltCostPerSf)}/sf • \n                ${Math.round(costTotals.siteBuiltCostPerUnit).toLocaleString()}/unit\n              </div>\n              <div className=\"text-sm text-gray-500 mt-1\">\n                {project.siteBuiltTimelineMonths || 13} month timeline\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {costBreakdowns.length > 0 && (\n          <>\n            <h4 className=\"font-semibold text-raap-dark mb-4\">MasterFormat Cost Breakdown</h4>\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>MasterFormat Category</TableHead>\n                    <TableHead className=\"text-right\">Site Built</TableHead>\n                    <TableHead className=\"text-right\">RaaP GC</TableHead>\n                    <TableHead className=\"text-right\">RaaP Fab</TableHead>\n                    <TableHead className=\"text-right\">RaaP Total</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {costBreakdowns.map((breakdown) => (\n                    <TableRow key={breakdown.id}>\n                      <TableCell className=\"font-medium\">{breakdown.category}</TableCell>\n                      <TableCell className=\"text-right\">\n                        {formatCurrency(breakdown.siteBuiltCost || \"0\")}\n                      </TableCell>\n                      <TableCell className=\"text-right\">\n                        {formatCurrency(breakdown.raapGcCost || \"0\")}\n                      </TableCell>\n                      <TableCell className=\"text-right\">\n                        {formatCurrency(breakdown.raapFabCost || \"0\")}\n                      </TableCell>\n                      <TableCell className=\"text-right font-medium\">\n                        {formatCurrency(breakdown.raapTotalCost || \"0\")}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </>\n        )}\n\n        {costTotals.savings > 0 && (\n          <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatCurrency(costTotals.savings)} Total Savings\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                {costTotals.costSavingsPercent.toFixed(1)}% cost reduction with modular construction\n              </div>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":4742},"client/src/components/GoogleMaps.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport GoogleMapsLoader from '@/utils/googleMapsLoader';\n\n// Location interface\ninterface Location {\n  lat: number;\n  lng: number;\n  title: string;\n  type: 'project' | 'fabricator' | 'gc' | 'aor' | 'consultant' | 'transportation';\n  info?: string;\n}\n\n// Props interface\ninterface GoogleMapsProps {\n  locations: Location[];\n  center: { lat: number; lng: number };\n  zoom?: number;\n  height?: string;\n  className?: string;\n}\n\n// Custom marker colors for different partner types\nconst getMarkerColor = (type: string) => {\n  const colors = {\n    project: '#DC2626',      // Red\n    fabricator: '#F59E0B',   // Amber\n    gc: '#059669',           // Emerald\n    aor: '#2563EB',          // Blue\n    consultant: '#8B5CF6',   // Violet\n    transportation: '#EAB308' // Yellow\n  };\n  return colors[type as keyof typeof colors] || colors.fabricator;\n};\n\n// Create custom marker icon with clear partner type display\nconst createMarkerIcon = (type: string, isProject: boolean = false) => {\n  const size = isProject ? 40 : 24;\n  const color = getMarkerColor(type);\n  \n  if (isProject) {\n    // Project markers keep the original circle design\n    const svg = `<svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4\" fill=\"white\"/>\n    </svg>`;\n    return `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(svg)}`;\n  } else {\n    // Partner markers use colored dots for better visibility\n    const svg = `<svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"12\" cy=\"12\" r=\"8\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n    </svg>`;\n    return `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(svg)}`;\n  }\n};\n\nexport default function GoogleMaps({\n  locations,\n  center,\n  zoom = 10,\n  height = '400px',\n  className = ''\n}: GoogleMapsProps) {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const mapInstanceRef = useRef<any>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loadError, setLoadError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const initializeMap = () => {\n      if (!mapRef.current) return;\n\n      try {\n        const map = new (window as any).google.maps.Map(mapRef.current, {\n          center,\n          zoom,\n          mapTypeId: (window as any).google.maps.MapTypeId.ROADMAP,\n          styles: [\n            {\n              featureType: 'poi.business',\n              elementType: 'labels',\n              stylers: [{ visibility: 'off' }]\n            }\n          ],\n          mapTypeControl: true,\n          streetViewControl: true,\n          fullscreenControl: true,\n          zoomControl: true\n        });\n\n        mapInstanceRef.current = map;\n\n        // Add markers for each location\n        const infoWindow = new (window as any).google.maps.InfoWindow();\n        \n        locations.forEach((location) => {\n          const isProject = location.type === 'project';\n          \n          const marker = new (window as any).google.maps.Marker({\n            position: { lat: location.lat, lng: location.lng },\n            map: map,\n            title: location.title,\n            icon: {\n              url: createMarkerIcon(location.type, isProject),\n              scaledSize: new (window as any).google.maps.Size(isProject ? 40 : 32, isProject ? 40 : 32),\n              anchor: new (window as any).google.maps.Point(isProject ? 20 : 16, isProject ? 20 : 16)\n            }\n          });\n\n          // Add click listener for info window\n          marker.addListener('click', () => {\n            const content = `\n              <div style=\"max-width: 250px; font-family: 'Inter', sans-serif;\">\n                <h3 style=\"margin: 0 0 8px 0; color: #1f2937; font-size: 16px; font-weight: 600;\">${location.title}</h3>\n                <p style=\"margin: 0 0 8px 0; color: #6b7280; font-size: 14px; text-transform: capitalize;\">${location.type === 'aor' ? 'Architect of Record' : location.type === 'gc' ? 'General Contractor' : location.type}</p>\n                ${location.info ? `<p style=\"margin: 0; color: #4b5563; font-size: 13px;\">${location.info}</p>` : ''}\n              </div>\n            `;\n            \n            infoWindow.setContent(content);\n            infoWindow.open(map, marker);\n          });\n        });\n\n        // Adjust map bounds to show all markers\n        if (locations.length > 1) {\n          const bounds = new (window as any).google.maps.LatLngBounds();\n          locations.forEach(location => {\n            bounds.extend(new (window as any).google.maps.LatLng(location.lat, location.lng));\n          });\n          map.fitBounds(bounds);\n          \n          // Ensure minimum zoom level\n          const listener = (window as any).google.maps.event.addListener(map, 'idle', () => {\n            if (map.getZoom() > 15) map.setZoom(15);\n            (window as any).google.maps.event.removeListener(listener);\n          });\n        }\n\n      } catch (error) {\n        console.error('Error initializing Google Maps:', error);\n        setLoadError('Failed to initialize map');\n      }\n    };\n\n    const loadMap = async () => {\n      try {\n        setLoadError(null);\n        await GoogleMapsLoader.loadGoogleMaps();\n        setIsLoaded(true);\n        initializeMap();\n      } catch (error) {\n        console.error('Error loading Google Maps:', error);\n        setLoadError('Failed to load Google Maps. Please check your API key configuration.');\n      }\n    };\n\n    loadMap();\n  }, [locations, center, zoom]);\n\n  if (loadError) {\n    return (\n      <div \n        className={className}\n        style={{ \n          height, \n          width: '100%',\n          borderRadius: '8px',\n          border: '1px solid #e5e7eb',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#fef2f2'\n        }}\n      >\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n          <p style={{ margin: '0 0 8px 0', fontWeight: '600', color: '#dc2626' }}>Map Loading Error</p>\n          <p style={{ margin: 0, fontSize: '14px', color: '#7f1d1d' }}>{loadError}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <div \n        className={className}\n        style={{ \n          height, \n          width: '100%',\n          borderRadius: '8px',\n          border: '1px solid #e5e7eb',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#f9fafb'\n        }}\n      >\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n          <p style={{ margin: '0 0 8px 0', fontWeight: '600' }}>Loading Map...</p>\n          <p style={{ margin: 0, fontSize: '14px' }}>Initializing Google Maps</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      ref={mapRef} \n      className={className}\n      style={{ \n        height, \n        width: '100%',\n        borderRadius: '8px',\n        border: '1px solid #e5e7eb'\n      }}\n    />\n  );\n}","size_bytes":7165},"client/src/components/Header.tsx":{"content":"import { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport raapLogoPath from \"@assets/raap-logo-new.png\";\n\nexport default function Header() {\n  const [location, navigate] = useLocation();\n\n  const isActive = (path: string) => {\n    return location === path;\n  };\n\n  return (\n    <header className=\"bg-white shadow-sm border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-3\">\n              <img src={raapLogoPath} alt=\"RaaP Logo\" className=\"h-12 w-auto\" />\n              <div className=\"text-gray-400\">|</div>\n              <h1 \n                className=\"text-sm sm:text-lg font-medium text-raap-dark cursor-pointer hover:text-raap-green transition-colors\"\n                onClick={() => navigate(\"/\")}\n              >\n                <span className=\"sm:hidden\">RaaP Workflow</span>\n                <span className=\"hidden sm:inline\">Rooms as a Product Workflow</span>\n              </h1>\n            </div>\n          </div>\n          \n          <nav className=\"hidden md:flex space-x-8\">\n            <button \n              className={`${\n                isActive(\"/\") \n                  ? \"text-raap-green border-b-2 border-raap-green font-medium\" \n                  : \"text-gray-600 hover:text-raap-green\"\n              } transition-colors`}\n              onClick={() => navigate(\"/\")}\n            >\n              Dashboard\n            </button>\n            <button \n              className={`${\n                isActive(\"/create-project\") \n                  ? \"text-raap-green border-b-2 border-raap-green font-medium\" \n                  : \"text-gray-600 hover:text-raap-green\"\n              } transition-colors`}\n              onClick={() => navigate(\"/create-project\")}\n            >\n              New Project\n            </button>\n          </nav>\n          \n          <div className=\"flex items-center space-x-4\">\n            <Button \n              onClick={() => navigate('/landing')}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              About\n            </Button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":2318},"client/src/components/LogisticsAnalysis.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { MapPin, Truck, AlertTriangle, CheckCircle, Route, Factory } from \"lucide-react\";\nimport type { Project } from \"@shared/schema\";\n\ninterface LogisticsAnalysisProps {\n  project: Project;\n}\n\nexport default function LogisticsAnalysis({ project }: LogisticsAnalysisProps) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-raap-dark\">Logistics Assessment</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          <div>\n            <h4 className=\"font-semibold text-raap-dark mb-4\">Transportation & Access</h4>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-start space-x-3\">\n                <Factory className=\"h-5 w-5 text-raap-green mt-1\" />\n                <div>\n                  <div className=\"text-sm font-medium text-gray-700\">Factory Location</div>\n                  <div className=\"text-sm text-gray-600\">{project.factoryLocation || \"Tracy, CA\"}</div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start space-x-3\">\n                <Route className=\"h-5 w-5 text-raap-green mt-1\" />\n                <div>\n                  <div className=\"text-sm font-medium text-gray-700\">Highway Access</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {project.address.includes(\"Olivehurst\") \n                      ? \"Within 1/2 mile of Highway 70, Exit 18A\" \n                      : \"Highway access analysis required\"\n                    }\n                  </div>\n                </div>\n              </div>\n              \n              {project.transportationNotes && (\n                <div className=\"flex items-start space-x-3\">\n                  <AlertTriangle className=\"h-5 w-5 text-raap-mustard mt-1\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-700\">Transportation Notes</div>\n                    <div className=\"text-sm text-gray-600\">{project.transportationNotes}</div>\n                  </div>\n                </div>\n              )}\n              \n              {project.address.includes(\"Olivehurst\") && (\n                <div className=\"flex items-start space-x-3\">\n                  <AlertTriangle className=\"h-5 w-5 text-raap-mustard mt-1\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-700\">Site Considerations</div>\n                    <div className=\"text-sm text-gray-600\">\n                      Overhead powerline on Chestnut Rd may require crane logistics coordination\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold text-raap-dark mb-4\">Delivery Route</h4>\n            <img \n              src=\"https://images.unsplash.com/photo-1524661135-423995f22d0b?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=300\" \n              alt={`Highway route from ${project.factoryLocation || \"Tracy CA\"} to project site`} \n              className=\"w-full h-48 rounded-lg object-cover mb-4\"\n            />\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                <CheckCircle className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n                <div className=\"text-sm font-medium text-gray-700\">Staging</div>\n                <div className=\"text-xs text-gray-600\">\n                  {project.stagingNotes || \"Large open site available\"}\n                </div>\n              </div>\n              \n              <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                <Truck className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n                <div className=\"text-sm font-medium text-gray-700\">Delivery</div>\n                <div className=\"text-xs text-gray-600\">No major access restrictions</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Timeline comparison */}\n        <div className=\"mt-8\">\n          <h4 className=\"font-semibold text-raap-dark mb-4\">Build Timeline Comparison</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n              <h5 className=\"font-medium text-green-700 mb-2\">Modular Construction</h5>\n              <div className=\"text-2xl font-bold text-green-600 mb-1\">\n                {project.modularTimelineMonths || 9} months\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                Parallel design + fabrication + site construction\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n              <h5 className=\"font-medium text-gray-700 mb-2\">Site-Built Construction</h5>\n              <div className=\"text-2xl font-bold text-gray-600 mb-1\">\n                {project.siteBuiltTimelineMonths || 13} months\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                Sequential design + construction process\n              </div>\n            </div>\n          </div>\n          \n          {project.timeSavingsMonths && project.timeSavingsMonths > 0 && (\n            <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg text-center\">\n              <div className=\"text-lg font-bold text-blue-600\">\n                {project.timeSavingsMonths} Month Time Savings\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                Faster project delivery with modular construction\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5937},"client/src/components/ProjectCard.tsx":{"content":"import { useLocation } from \"wouter\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { MapPin, ChevronRight, Trash2, Building, FileText, Truck, Palette } from \"lucide-react\";\nimport type { Project } from \"@shared/schema\";\n// Removed calculateProjectScores import - using database values directly\nimport serenityBuildingImage from \"@assets/generated_images/Modern_multifamily_building_rendering_3456504f.png\";\nimport workforceBuildingImage from \"@assets/Building 2_1754894840186.jpg\";\nimport universityBuildingImage from \"@assets/Building 4_1754895114379.jpg\";\nimport mountainViewBuildingImage from \"@assets/Building 3_1754895186512.jpg\";\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nexport default function ProjectCard({ project }: ProjectCardProps) {\n  const [, navigate] = useLocation();\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Format large numbers as $xM for mobile display\n  const formatCostForMobile = (cost: string | null): string => {\n    if (!cost) return \"N/A\";\n    const numericValue = parseFloat(cost);\n    if (numericValue >= 1000000) {\n      return `$${(numericValue / 1000000).toFixed(1)}M`;\n    }\n    if (numericValue >= 1000) {\n      return `$${(numericValue / 1000).toFixed(0)}K`;\n    }\n    return `$${numericValue.toFixed(0)}`;\n  };\n\n  const totalUnits = (project.studioUnits || 0) + (project.oneBedUnits || 0) + \n                    (project.twoBedUnits || 0) + (project.threeBedUnits || 0);\n\n  // Use database score directly - single source of truth\n  const displayScore = project.overallScore || \"0.0\";\n\n  const getScoreColor = (score: string) => {\n    const numScore = parseFloat(score);\n    if (numScore >= 4) return \"text-raap-green\";\n    if (numScore >= 3) return \"text-raap-mustard\";\n    return \"text-red-600\";\n  };\n\n  // Application steps with icons (matching WorkflowOverview)\n  const applicationSteps = [\n    {\n      id: \"modular-feasibility\",\n      name: \"ModularFeasibility\",\n      icon: Building,\n      completedField: \"modularFeasibilityComplete\" as keyof Project,\n      color: \"blue\",\n    },\n    {\n      id: \"smart-start\", \n      name: \"SmartStart\",\n      icon: FileText,\n      completedField: \"smartStartComplete\" as keyof Project,\n      color: \"green\",\n    },\n    {\n      id: \"fab-assure\",\n      name: \"FabAssure\", \n      icon: Truck,\n      completedField: \"fabAssureComplete\" as keyof Project,\n      color: \"orange\",\n    },\n    {\n      id: \"easy-design\",\n      name: \"EasyDesign\",\n      icon: Palette,\n      completedField: \"easyDesignComplete\" as keyof Project,\n      color: \"purple\",\n    },\n  ];\n\n  // Get application status (simplified tri-state: completed, in_progress, not_started)\n  const getApplicationStatus = (step: typeof applicationSteps[0]) => {\n    // For sample projects, override FabAssure and EasyDesign status\n    if (project.isSample) {\n      if (step.id === \"fab-assure\" || step.id === \"easy-design\") {\n        return \"in_progress\";\n      }\n    }\n    \n    // Check if completed\n    if (project[step.completedField]) return \"completed\";\n    \n    // Everything else is not started (red)\n    return \"not_started\";\n  };\n\n  // Get icon color based on status (tri-state as requested)\n  const getIconColor = (status: string) => {\n    switch (status) {\n      case \"completed\": return \"text-green-600\";    // Green for complete\n      case \"in_progress\": return \"text-yellow-600\";  // Yellow for in progress\n      default: return \"text-red-600\";                // Red for not started\n    }\n  };\n\n  const getProjectTypeImage = (projectType: string) => {\n    // Use specific images for certain projects\n    if (project.name === \"Serenity Village\") {\n      return serenityBuildingImage;\n    }\n    if (project.name === \"Workforce Commons\") {\n      return workforceBuildingImage;\n    }\n    if (project.name === \"University Housing Complex\") {\n      return universityBuildingImage;\n    }\n    if (project.name === \"Mountain View Apartments\") {\n      return mountainViewBuildingImage;\n    }\n    \n    const images = {\n      affordable: \"https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=120\",\n      senior: \"https://images.unsplash.com/photo-1600585154340-be6161a56a0c?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=120\",\n      student: \"https://images.unsplash.com/photo-1564013799919-ab600027ffc6?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=120\",\n      workforce: \"https://images.unsplash.com/photo-1592595896551-12b371d546d5?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=120\",\n      hostel: \"https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=120\",\n      hotel: \"https://images.unsplash.com/photo-1445019980597-93fa8acb246c?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=120\",\n    };\n    return images[projectType as keyof typeof images] || images.affordable;\n  };\n\n  // Delete project mutation\n  const deleteProject = useMutation({\n    mutationFn: async () => {\n      await apiRequest(\"DELETE\", `/api/projects/${project.id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/projects\"] });\n      toast({\n        title: \"Project Deleted\",\n        description: `${project.name} has been successfully deleted.`,\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Delete Failed\",\n        description: \"Failed to delete the project. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  return (\n    <CardContent className=\"p-6\">\n      {/* Mobile-first responsive layout */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n        <div \n          className=\"flex items-center space-x-3 sm:space-x-4 cursor-pointer hover:bg-gray-50 -m-2 p-2 rounded-lg transition-colors flex-1\"\n          onClick={() => navigate(`/projects/${project.id}/workflow`)}\n        >\n          <img \n            src={getProjectTypeImage(project.projectType)} \n            alt={`${project.name} project`} \n            className=\"w-16 h-10 sm:w-20 sm:h-12 rounded-lg object-cover flex-shrink-0\"\n          />\n          <div className=\"min-w-0 flex-1\">\n            <h4 className=\"text-base sm:text-lg font-semibold text-raap-dark truncate\">{project.name}</h4>\n            <div className=\"flex items-center text-xs sm:text-sm text-gray-600 mb-1\">\n              <MapPin className=\"h-3 w-3 mr-1 flex-shrink-0\" />\n              <span className=\"truncate\">{project.address}</span>\n            </div>\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <Badge variant=\"secondary\" className=\"text-xs\">\n                {project.projectType.charAt(0).toUpperCase() + project.projectType.slice(1)}\n              </Badge>\n              <span className=\"text-xs text-gray-500\">\n                {totalUnits} Units • {project.targetFloors} Stories\n              </span>\n            </div>\n            \n            {/* Application Status Icons */}\n            <div className=\"flex items-center space-x-3\" data-testid={`app-status-${project.id}`}>\n              {applicationSteps.map((step) => {\n                const status = getApplicationStatus(step);\n                const IconComponent = step.icon;\n                return (\n                  <div \n                    key={step.id} \n                    className=\"flex items-center\" \n                    title={`${step.name}: ${status.replace('_', ' ')}`}\n                  >\n                    <IconComponent \n                      className={`h-4 w-4 ${getIconColor(status)}`} \n                      data-testid={`icon-${step.id}-${project.id}`}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center justify-end space-x-8\">\n          <div className=\"text-center min-w-[60px]\">\n            <div className={`text-lg sm:text-2xl font-bold ${getScoreColor(displayScore)}`} data-testid={`score-${project.id}`}>\n              <span className=\"sm:hidden\">{Math.round(parseFloat(displayScore))}</span>\n              <span className=\"hidden sm:inline\">{displayScore}</span>\n            </div>\n            <div className=\"text-xs text-gray-500\">Score</div>\n          </div>\n          \n          <div className=\"text-center min-w-[120px]\">\n            {project.modularTotalCost ? (\n              <>\n                <div className=\"text-sm sm:text-lg font-semibold text-raap-green\">\n                  <span className=\"sm:hidden\">{formatCostForMobile(project.modularTotalCost)}</span>\n                  <span className=\"hidden sm:inline\">${parseFloat(project.modularTotalCost).toLocaleString()}</span>\n                </div>\n                <div className=\"text-xs text-gray-500\">RaaP Cost</div>\n                {project.costSavingsPercent && parseFloat(project.costSavingsPercent) > 0 && (\n                  <div className=\"text-xs text-green-600\">\n                    ({Math.round(parseFloat(project.costSavingsPercent))}% savings)\n                  </div>\n                )}\n              </>\n            ) : (\n              <>\n                <div className=\"text-sm sm:text-lg font-semibold text-gray-400\">\n                  N/A\n                </div>\n                <div className=\"text-xs text-gray-500\">RaaP Cost</div>\n              </>\n            )}\n          </div>\n          \n          <div className=\"text-center min-w-[80px]\">\n            {project.modularTimelineMonths ? (\n              <>\n                <div className=\"text-sm sm:text-lg font-semibold text-blue-600\">\n                  {Math.round(parseFloat(project.modularTimelineMonths))} mo\n                </div>\n                <div className=\"text-xs text-gray-500\">Build Time</div>\n                {project.siteBuiltTimelineMonths && (\n                  <div className=\"text-xs text-blue-600\">\n                    ({Math.round(parseFloat(project.siteBuiltTimelineMonths) - parseFloat(project.modularTimelineMonths))} mo savings)\n                  </div>\n                )}\n              </>\n            ) : (\n              <>\n                <div className=\"text-sm sm:text-lg font-semibold text-gray-400\">\n                  N/A\n                </div>\n                <div className=\"text-xs text-gray-500\">Build Time</div>\n              </>\n            )}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <AlertDialog>\n              <AlertDialogTrigger asChild>\n                <Button\n                  variant=\"ghost\" \n                  size=\"sm\"\n                  className=\"text-red-600 hover:text-red-800 hover:bg-red-50\"\n                  data-testid={`button-delete-${project.id}`}\n                >\n                  <Trash2 className=\"h-4 w-4\" />\n                </Button>\n              </AlertDialogTrigger>\n              <AlertDialogContent>\n                <AlertDialogHeader>\n                  <AlertDialogTitle>Delete Project</AlertDialogTitle>\n                  <AlertDialogDescription>\n                    Are you sure you want to delete \"{project.name}\"? This action cannot be undone and will permanently remove all project data.\n                  </AlertDialogDescription>\n                </AlertDialogHeader>\n                <AlertDialogFooter>\n                  <AlertDialogCancel>Cancel</AlertDialogCancel>\n                  <AlertDialogAction\n                    onClick={() => deleteProject.mutate()}\n                    disabled={deleteProject.isPending}\n                    className=\"bg-red-600 hover:bg-red-700\"\n                    data-testid={`button-confirm-delete-${project.id}`}\n                  >\n                    {deleteProject.isPending ? \"Deleting...\" : \"Delete\"}\n                  </AlertDialogAction>\n                </AlertDialogFooter>\n              </AlertDialogContent>\n            </AlertDialog>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => navigate(`/projects/${project.id}/workflow`)}\n              data-testid={`button-view-${project.id}`}\n            >\n              <ChevronRight className=\"h-4 w-4 text-gray-400\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </CardContent>\n  );\n}\n","size_bytes":12790},"client/src/components/ProjectSiteMap.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport googleMapsLoader from '@/utils/googleMapsLoader';\n\ninterface ProjectSiteMapProps {\n  address: string;\n  projectName: string;\n  height?: string;\n  className?: string;\n  trigger?: number; // When this changes, it triggers a new map lookup\n}\n\nexport default function ProjectSiteMap({\n  address,\n  projectName,\n  height = '400px',\n  className = '',\n  trigger\n}: ProjectSiteMapProps) {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loadError, setLoadError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const initializeMap = async () => {\n      if (!mapRef.current) return;\n\n      try {\n        await googleMapsLoader.loadGoogleMaps();\n        \n        // Show US map if no address provided \n        if (!address || address.trim() === '') {\n          // Default center of the United States (approximately Kansas)\n          const defaultCenter = { lat: 39.8283, lng: -98.5795 };\n          \n          const map = new (window as any).google.maps.Map(mapRef.current, {\n            center: defaultCenter,\n            zoom: 4, // Show most of the US\n            mapTypeId: (window as any).google.maps.MapTypeId.ROADMAP,\n            styles: [\n              {\n                featureType: 'poi.business',\n                elementType: 'labels',\n                stylers: [{ visibility: 'off' }]\n              }\n            ],\n            mapTypeControl: true,\n            streetViewControl: true,\n            fullscreenControl: true,\n            zoomControl: true\n          });\n\n          setIsLoaded(true);\n          return;\n        }\n\n        // For CreateProject: only geocode when trigger > 0 (manual trigger system)\n        // For other components: geocode automatically when address exists (trigger undefined)\n        if (trigger !== undefined && trigger === 0) {\n          // This is from CreateProject with manual trigger system - show US map until triggered\n          const defaultCenter = { lat: 39.8283, lng: -98.5795 };\n          \n          const map = new (window as any).google.maps.Map(mapRef.current, {\n            center: defaultCenter,\n            zoom: 4,\n            mapTypeId: (window as any).google.maps.MapTypeId.ROADMAP,\n            mapTypeControl: true,\n            streetViewControl: true,\n            fullscreenControl: true,\n            zoomControl: true\n          });\n\n          setIsLoaded(true);\n          return;\n        }\n        \n        const geocoder = new (window as any).google.maps.Geocoder();\n        \n        geocoder.geocode({ address: address }, (results: any, status: any) => {\n          if (status === 'OK' && results[0]) {\n            const location = results[0].geometry.location;\n            \n            // Create the map\n            const map = new (window as any).google.maps.Map(mapRef.current, {\n              center: location,\n              zoom: 15,\n              mapTypeId: (window as any).google.maps.MapTypeId.ROADMAP,\n              styles: [\n                {\n                  featureType: 'poi.business',\n                  elementType: 'labels',\n                  stylers: [{ visibility: 'off' }]\n                }\n              ],\n              mapTypeControl: true,\n              streetViewControl: true,\n              fullscreenControl: true,\n              zoomControl: true\n            });\n\n            // Add a marker for the project site\n            const marker = new (window as any).google.maps.Marker({\n              position: location,\n              map: map,\n              title: projectName,\n              icon: {\n                url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n                  <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"#DC2626\" stroke=\"white\" stroke-width=\"2\"/>\n                    <circle cx=\"12\" cy=\"12\" r=\"4\" fill=\"white\"/>\n                  </svg>\n                `),\n                scaledSize: new (window as any).google.maps.Size(40, 40),\n                anchor: new (window as any).google.maps.Point(20, 20)\n              }\n            });\n\n            // Add info window with safe DOM manipulation\n            const infoWindowDiv = document.createElement('div');\n            infoWindowDiv.style.maxWidth = '250px';\n            infoWindowDiv.style.fontFamily = \"'Inter', sans-serif\";\n            \n            const heading = document.createElement('h3');\n            heading.style.margin = '0 0 8px 0';\n            heading.style.color = '#1f2937';\n            heading.style.fontSize = '16px';\n            heading.style.fontWeight = '600';\n            heading.textContent = projectName; // Safe text content\n            \n            const paragraph = document.createElement('p');\n            paragraph.style.margin = '0';\n            paragraph.style.color = '#4b5563';\n            paragraph.style.fontSize = '13px';\n            paragraph.textContent = address; // Safe text content\n            \n            infoWindowDiv.appendChild(heading);\n            infoWindowDiv.appendChild(paragraph);\n            \n            const infoWindow = new (window as any).google.maps.InfoWindow({\n              content: infoWindowDiv\n            });\n\n            marker.addListener('click', () => {\n              infoWindow.open(map, marker);\n            });\n\n            setIsLoaded(true);\n          } else {\n            setLoadError('Failed to geocode address: ' + address);\n          }\n        });\n      } catch (error) {\n        console.error('Error loading Google Maps:', error);\n        setLoadError('Failed to load Google Maps');\n      }\n    };\n\n    // Reset error state\n    setLoadError(null);\n    \n    // Only set loading state if we will actually geocode (not for manual trigger with trigger=0)\n    if (!(trigger !== undefined && trigger === 0)) {\n      setIsLoaded(false);\n    }\n    \n    initializeMap();\n  }, trigger !== undefined ? [trigger] : [trigger, address]); // In manual mode, only respond to trigger changes\n\n  if (loadError) {\n    return (\n      <div className={`border rounded-lg p-4 bg-gray-50 ${className}`} style={{ height }}>\n        <div className=\"flex items-center justify-center h-full text-gray-500\">\n          <div className=\"text-center\">\n            <p className=\"text-sm\">Unable to load map</p>\n            <p className=\"text-xs text-gray-400 mt-1\">{loadError}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`relative border rounded-lg overflow-hidden ${className}`} style={{ height }}>\n      <div \n        ref={mapRef} \n        style={{ width: '100%', height: '100%' }}\n        data-testid=\"project-site-map\"\n      />\n      {!isLoaded && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n            <p className=\"text-sm text-gray-500\">Loading map...</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":7114},"client/src/components/RouteMap.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport googleMapsLoader from '@/utils/googleMapsLoader';\n\ninterface RouteMapProps {\n  destinationAddress: string;\n  projectName: string;\n  factoryLocation?: string;\n  height?: string;\n  className?: string;\n}\n\nexport default function RouteMap({\n  destinationAddress,\n  projectName,\n  factoryLocation = \"Tracy, CA\",\n  height = '400px',\n  className = ''\n}: RouteMapProps) {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loadError, setLoadError] = useState<string | null>(null);\n  const [routeInfo, setRouteInfo] = useState<{\n    distance: string;\n    duration: string;\n  } | null>(null);\n\n  useEffect(() => {\n    const initializeMap = async () => {\n      if (!mapRef.current) return;\n\n      try {\n        await googleMapsLoader.loadGoogleMaps();\n        \n        // Create the map\n        const map = new (window as any).google.maps.Map(mapRef.current, {\n          zoom: 6,\n          mapTypeId: (window as any).google.maps.MapTypeId.ROADMAP,\n          styles: [\n            {\n              featureType: 'poi.business',\n              elementType: 'labels',\n              stylers: [{ visibility: 'off' }]\n            }\n          ],\n          mapTypeControl: true,\n          streetViewControl: true,\n          fullscreenControl: true,\n          zoomControl: true\n        });\n\n        // Create directions service and renderer\n        const directionsService = new (window as any).google.maps.DirectionsService();\n        const directionsRenderer = new (window as any).google.maps.DirectionsRenderer({\n          suppressMarkers: true,\n          polylineOptions: {\n            strokeColor: '#2563EB',\n            strokeWeight: 5,\n            strokeOpacity: 0.8\n          }\n        });\n        \n        directionsRenderer.setMap(map);\n\n        // Calculate route from factory to destination\n        const request = {\n          origin: `${factoryLocation}, USA`,\n          destination: destinationAddress,\n          travelMode: (window as any).google.maps.TravelMode.DRIVING,\n          unitSystem: (window as any).google.maps.UnitSystem.IMPERIAL,\n          avoidHighways: false,\n          avoidTolls: false\n        };\n\n        directionsService.route(request, (result: any, status: any) => {\n          if (status === 'OK') {\n            directionsRenderer.setDirections(result);\n            \n            // Extract route information\n            const route = result.routes[0];\n            const leg = route.legs[0];\n            \n            setRouteInfo({\n              distance: leg.distance.text,\n              duration: leg.duration.text\n            });\n\n            // Custom markers for start and end points\n            const startMarker = new (window as any).google.maps.Marker({\n              position: leg.start_location,\n              map: map,\n              title: factoryLocation,\n              icon: {\n                url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n                  <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"12\" cy=\"12\" r=\"8\" fill=\"#059669\" stroke=\"white\" stroke-width=\"2\"/>\n                    <text x=\"12\" y=\"16\" text-anchor=\"middle\" fill=\"white\" font-size=\"10\" font-weight=\"bold\">S</text>\n                  </svg>\n                `),\n                scaledSize: new (window as any).google.maps.Size(32, 32),\n                anchor: new (window as any).google.maps.Point(16, 16)\n              }\n            });\n\n            const endMarker = new (window as any).google.maps.Marker({\n              position: leg.end_location,\n              map: map,\n              title: projectName,\n              icon: {\n                url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n                  <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"12\" cy=\"12\" r=\"8\" fill=\"#DC2626\" stroke=\"white\" stroke-width=\"2\"/>\n                    <text x=\"12\" y=\"16\" text-anchor=\"middle\" fill=\"white\" font-size=\"10\" font-weight=\"bold\">E</text>\n                  </svg>\n                `),\n                scaledSize: new (window as any).google.maps.Size(32, 32),\n                anchor: new (window as any).google.maps.Point(16, 16)\n              }\n            });\n\n            // Info windows with safe DOM manipulation\n            const startInfoWindowDiv = document.createElement('div');\n            startInfoWindowDiv.style.maxWidth = '200px';\n            startInfoWindowDiv.style.fontFamily = \"'Inter', sans-serif\";\n            \n            const startHeading = document.createElement('h3');\n            startHeading.style.margin = '0 0 8px 0';\n            startHeading.style.color = '#1f2937';\n            startHeading.style.fontSize = '16px';\n            startHeading.style.fontWeight = '600';\n            startHeading.textContent = 'Starting Point'; // Safe text content\n            \n            const startParagraph = document.createElement('p');\n            startParagraph.style.margin = '0';\n            startParagraph.style.color = '#4b5563';\n            startParagraph.style.fontSize = '13px';\n            startParagraph.textContent = factoryLocation; // Safe text content\n            \n            startInfoWindowDiv.appendChild(startHeading);\n            startInfoWindowDiv.appendChild(startParagraph);\n            \n            const startInfoWindow = new (window as any).google.maps.InfoWindow({\n              content: startInfoWindowDiv\n            });\n\n            const endInfoWindowDiv = document.createElement('div');\n            endInfoWindowDiv.style.maxWidth = '250px';\n            endInfoWindowDiv.style.fontFamily = \"'Inter', sans-serif\";\n            \n            const endHeading = document.createElement('h3');\n            endHeading.style.margin = '0 0 8px 0';\n            endHeading.style.color = '#1f2937';\n            endHeading.style.fontSize = '16px';\n            endHeading.style.fontWeight = '600';\n            endHeading.textContent = projectName; // Safe text content\n            \n            const endParagraph = document.createElement('p');\n            endParagraph.style.margin = '0';\n            endParagraph.style.color = '#4b5563';\n            endParagraph.style.fontSize = '13px';\n            endParagraph.textContent = destinationAddress; // Safe text content\n            \n            endInfoWindowDiv.appendChild(endHeading);\n            endInfoWindowDiv.appendChild(endParagraph);\n            \n            const endInfoWindow = new (window as any).google.maps.InfoWindow({\n              content: endInfoWindowDiv\n            });\n\n            startMarker.addListener('click', () => {\n              endInfoWindow.close();\n              startInfoWindow.open(map, startMarker);\n            });\n\n            endMarker.addListener('click', () => {\n              startInfoWindow.close();\n              endInfoWindow.open(map, endMarker);\n            });\n\n            setIsLoaded(true);\n          } else {\n            setLoadError('Failed to calculate route: ' + status);\n          }\n        });\n\n      } catch (error) {\n        console.error('Error loading Google Maps:', error);\n        setLoadError('Failed to load Google Maps');\n      }\n    };\n\n    initializeMap();\n  }, [destinationAddress, projectName]);\n\n  if (loadError) {\n    return (\n      <div className={`border rounded-lg p-4 bg-gray-50 ${className}`} style={{ height }}>\n        <div className=\"flex items-center justify-center h-full text-gray-500\">\n          <div className=\"text-center\">\n            <p className=\"text-sm\">Unable to load route map</p>\n            <p className=\"text-xs text-gray-400 mt-1\">{loadError}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      <div className=\"border rounded-lg overflow-hidden\" style={{ height }}>\n        <div \n          ref={mapRef} \n          style={{ width: '100%', height: '100%' }}\n          data-testid=\"route-map\"\n        />\n        {!isLoaded && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50\">\n            <div className=\"text-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n              <p className=\"text-sm text-gray-500\">Loading route...</p>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {routeInfo && (\n        <div className=\"mt-4 grid grid-cols-2 gap-4\">\n          <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">{routeInfo.distance}</div>\n            <div className=\"font-semibold text-blue-600\">Distance</div>\n            <div className=\"text-gray-600 text-sm\">from {factoryLocation}</div>\n          </div>\n          <div className=\"bg-green-50 rounded-lg p-4 text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">{routeInfo.duration}</div>\n            <div className=\"font-semibold text-green-600\">Drive Time</div>\n            <div className=\"text-gray-600 text-sm\">estimated</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":9212},"client/src/components/ScoreCard.tsx":{"content":"import { Card, CardContent, CardHeader } from \"@/components/ui/card\";\n\ninterface ScoreCardProps {\n  title: string;\n  score: string;\n  weight: string;\n  justification: string;\n  details: string[];\n}\n\nexport default function ScoreCard({ title, score, weight, justification, details }: ScoreCardProps) {\n  const getScoreColor = (scoreValue: string) => {\n    const numScore = parseFloat(scoreValue);\n    if (numScore >= 4) return \"text-raap-green\";\n    if (numScore >= 3) return \"text-raap-mustard\";\n    return \"text-red-600\";\n  };\n\n  return (\n    <Card>\n      <CardContent className=\"p-6\">\n        <div className=\"flex justify-between items-start mb-3\">\n          <h4 className=\"font-semibold text-raap-dark\">{title}</h4>\n          <div className=\"text-right\">\n            <div className={`text-2xl font-bold ${getScoreColor(score)}`}>\n              {parseFloat(score).toFixed(1)}\n            </div>\n            <div className=\"text-xs text-gray-500\">{weight} Weight</div>\n          </div>\n        </div>\n        \n        <p className=\"text-sm text-gray-600 mb-3\">\n          {justification}\n        </p>\n        \n        <div className=\"space-y-1\">\n          {details.map((detail, index) => (\n            <div key={index} className=\"text-xs text-gray-500\">\n              {detail}\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":1365},"client/src/components/ZoningAnalysis.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { AlertTriangle, CheckCircle } from \"lucide-react\";\nimport type { Project } from \"@shared/schema\";\n\ninterface ZoningAnalysisProps {\n  project: Project;\n}\n\nexport default function ZoningAnalysis({ project }: ZoningAnalysisProps) {\n  const totalUnits = (project.studioUnits || 0) + (project.oneBedUnits || 0) + \n                    (project.twoBedUnits || 0) + (project.threeBedUnits || 0);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-raap-dark\">Zoning & Site Analysis</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          <div>\n            <h4 className=\"font-semibold text-raap-dark mb-4\">\n              Zoning District: {project.zoningDistrict || \"RM\"} (Residential Medium Density)\n            </h4>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-start space-x-3\">\n                <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                <div>\n                  <div className=\"text-sm font-medium text-gray-700\">Allowed Use</div>\n                  <div className=\"text-sm text-gray-600\">Multi-unit Development Permitted</div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start space-x-3\">\n                <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                <div>\n                  <div className=\"text-sm font-medium text-gray-700\">Density</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {project.densityBonusEligible \n                      ? \"34 DU/Acre Max (with AB 1287 density bonus)\" \n                      : \"17 DU/Acre Max (base density)\"\n                    }\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start space-x-3\">\n                <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                <div>\n                  <div className=\"text-sm font-medium text-gray-700\">Height</div>\n                  <div className=\"text-sm text-gray-600\">35' max Building Height</div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start space-x-3\">\n                <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                <div>\n                  <div className=\"text-sm font-medium text-gray-700\">Setbacks</div>\n                  <div className=\"text-sm text-gray-600\">15' Front, 5' Side, 10' Rear</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold text-raap-dark mb-4\">Analysis Results</h4>\n            <div className=\"space-y-3\">\n              {project.densityBonusEligible && (\n                <div className=\"bg-green-50 border border-green-200 rounded p-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    <Badge variant=\"secondary\" className=\"bg-green-100 text-green-700\">\n                      Density Bonus Eligible\n                    </Badge>\n                  </div>\n                  <div className=\"text-xs text-gray-600 mt-1\">\n                    Qualifies for AB 1287 affordability bonus\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"bg-raap-mustard/10 border border-raap-mustard rounded p-3\">\n                <div className=\"flex items-center space-x-2\">\n                  <AlertTriangle className=\"h-4 w-4 text-raap-mustard\" />\n                  <div className=\"text-sm font-medium text-raap-mustard\">Required Concessions</div>\n                </div>\n                <div className=\"text-xs text-gray-600 mt-1\">\n                  Open space and parking requirement reductions may be needed\n                </div>\n              </div>\n              \n              <div className=\"bg-blue-50 border border-blue-200 rounded p-3\">\n                <div className=\"text-sm font-medium text-blue-700\">Project Compatibility</div>\n                <div className=\"text-xs text-gray-600 mt-1\">\n                  {totalUnits} units planned for {project.targetFloors}-story development\n                </div>\n              </div>\n            </div>\n\n            {project.requiredWaivers && (\n              <div className=\"mt-4\">\n                <h5 className=\"font-medium text-gray-700 mb-2\">Required Waivers</h5>\n                <div className=\"text-sm text-gray-600\">\n                  {project.requiredWaivers}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Site visualization placeholder */}\n        <div className=\"mt-8\">\n          <h4 className=\"font-semibold text-raap-dark mb-4\">Site Context</h4>\n          <img \n            src=\"https://images.unsplash.com/photo-1503387762-592deb58ef4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\" \n            alt=\"Site plan and zoning context\" \n            className=\"w-full h-64 rounded-lg object-cover border border-gray-200\"\n          />\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5348},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useSimulator.ts":{"content":"import { useState, useCallback } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\n\nexport interface SimulatorState {\n  oneBedUnits: number;\n  twoBedUnits: number;\n  threeBedUnits: number;\n  floors: number;\n  buildingType: string;\n  parkingType: string;\n  location: string;\n  prevailingWage: boolean;\n  siteConditions: string;\n}\n\nexport interface CostResults {\n  totalCost: number;\n  costPerSF: number;\n  costPerUnit: number;\n  modularTotal: number;\n  siteBuiltTotal: number;\n  savings: number;\n  savingsPercent: number;\n  breakdown: {\n    sitePreparation: number;\n    foundation: number;\n    modularUnits: number;\n    siteAssembly: number;\n    mepConnections: number;\n    finishWork: number;\n    softCosts: number;\n  };\n}\n\nconst initialState: SimulatorState = {\n  oneBedUnits: 8,\n  twoBedUnits: 12,\n  threeBedUnits: 4,\n  floors: 3,\n  buildingType: 'stacked',\n  parkingType: 'surface',\n  location: 'vallejo',\n  prevailingWage: true,\n  siteConditions: 'standard',\n};\n\nconst initialResults: CostResults = {\n  totalCost: 10800000,\n  costPerSF: 411,\n  costPerUnit: 451000,\n  modularTotal: 10800000,\n  siteBuiltTotal: 10938000,\n  savings: 138000,\n  savingsPercent: 1.2,\n  breakdown: {\n    sitePreparation: 485000,\n    foundation: 780000,\n    modularUnits: 6200000,\n    siteAssembly: 920000,\n    mepConnections: 1100000,\n    finishWork: 830000,\n    softCosts: 485000,\n  },\n};\n\nexport function useSimulator() {\n  const [state, setState] = useState<SimulatorState>(initialState);\n  const [results, setResults] = useState<CostResults>(initialResults);\n\n  const calculateMutation = useMutation({\n    mutationFn: async (params: SimulatorState) => {\n      const response = await fetch('/api/simulator/calculate', {\n        method: 'POST',\n        body: JSON.stringify(params),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      return response.json();\n    },\n    onSuccess: (data: CostResults) => {\n      setResults(data);\n    },\n    onError: (error) => {\n      console.error('Error calculating costs:', error);\n      // Keep using current results on error\n    },\n  });\n\n  const updateParameter = useCallback((key: keyof SimulatorState, value: any) => {\n    setState(prevState => {\n      const newState = { ...prevState, [key]: value };\n      \n      // Automatically trigger calculation after state update\n      setTimeout(() => {\n        calculateMutation.mutate(newState);\n      }, 300); // Debounce to avoid too many requests\n      \n      return newState;\n    });\n  }, [calculateMutation]);\n\n  const getTotalUnits = useCallback(() => {\n    return state.oneBedUnits + state.twoBedUnits + state.threeBedUnits;\n  }, [state.oneBedUnits, state.twoBedUnits, state.threeBedUnits]);\n\n  const formatCurrency = useCallback((amount: number) => {\n    if (amount >= 1000000) {\n      return `$${(amount / 1000000).toFixed(1)}M`;\n    } else if (amount >= 1000) {\n      return `$${(amount / 1000).toFixed(0)}K`;\n    } else {\n      return `$${amount.toLocaleString()}`;\n    }\n  }, []);\n\n  const updateModel = useCallback(() => {\n    calculateMutation.mutate(state);\n  }, [calculateMutation, state]);\n\n  return {\n    state,\n    results,\n    updateParameter,\n    getTotalUnits,\n    formatCurrency,\n    updateModel,\n    isCalculating: calculateMutation.isPending,\n    hasError: calculateMutation.isError,\n  };\n}","size_bytes":3503},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"client/src/lib/pdfGenerator.ts":{"content":"// Temporarily disabled jspdf import to fix module resolution issue\n// import { jsPDF } from 'jspdf';\nimport type { Project, CostBreakdown } from '@shared/schema';\n\nexport function generateProjectPDF(project: Project, costBreakdowns: CostBreakdown[] = []) {\n  // Temporarily disabled PDF generation - will show download error\n  console.log('PDF generation temporarily disabled due to module import issue');\n  alert('PDF generation is temporarily unavailable. Please contact support.');\n  return;\n  \n  /* Disabled PDF generation code\n  const doc = new jsPDF();\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const pageHeight = doc.internal.pageSize.getHeight();\n  let yPosition = 20;\n\n  // Helper function to add text with automatic page breaks\n  const addText = (text: string, x: number, fontSize: number = 10, fontStyle: string = 'normal', maxWidth?: number) => {\n    if (yPosition > pageHeight - 20) {\n      doc.addPage();\n      yPosition = 20;\n    }\n    \n    doc.setFontSize(fontSize);\n    doc.setFont('helvetica', fontStyle as any);\n    \n    if (maxWidth) {\n      const lines = doc.splitTextToSize(text, maxWidth);\n      doc.text(lines, x, yPosition);\n      yPosition += (lines.length * fontSize * 0.35) + 5;\n    } else {\n      doc.text(text, x, yPosition);\n      yPosition += fontSize * 0.35 + 5;\n    }\n  };\n\n  // Header with RaaP branding\n  doc.setFillColor(53, 119, 66); // RaaP green\n  doc.rect(0, 0, pageWidth, 25, 'F');\n  \n  doc.setTextColor(255, 255, 255);\n  doc.setFontSize(18);\n  doc.setFont('helvetica', 'bold');\n  doc.text('RaaP', 10, 15);\n  \n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n  doc.text('ROOMS AS A PRODUCT', 35, 15);\n  \n  doc.text('ModularFeasibility Report', pageWidth - 80, 15);\n  \n  yPosition = 35;\n  doc.setTextColor(0, 0, 0);\n\n  // Project Title\n  addText(`Modular Feasibility Report`, 10, 20, 'bold');\n  addText(`${project.name}`, 10, 16, 'bold');\n  addText(`${project.address}`, 10, 12);\n  yPosition += 10;\n\n  // Project Overview\n  addText('Project Overview', 10, 14, 'bold');\n  \n  const totalUnits = (project.studioUnits || 0) + (project.oneBedUnits || 0) + \n                    (project.twoBedUnits || 0) + (project.threeBedUnits || 0);\n  \n  // Project Type and Details\n  addText(`Project Type: ${project.projectType?.charAt(0).toUpperCase() + project.projectType?.slice(1) || 'Mixed-Use'}`, 10, 11, 'bold');\n  \n  // Unit Mix\n  addText('Unit Mix:', 10, 11, 'bold');\n  if (project.studioUnits && project.studioUnits > 0) {\n    addText(`• ${project.studioUnits} Studio units`, 15, 10);\n  }\n  if (project.oneBedUnits && project.oneBedUnits > 0) {\n    addText(`• ${project.oneBedUnits} One-bedroom units`, 15, 10);\n  }\n  if (project.twoBedUnits && project.twoBedUnits > 0) {\n    addText(`• ${project.twoBedUnits} Two-bedroom units`, 15, 10);\n  }\n  if (project.threeBedUnits && project.threeBedUnits > 0) {\n    addText(`• ${project.threeBedUnits} Three-bedroom units`, 15, 10);\n  }\n  addText(`Total Units: ${totalUnits}`, 15, 10, 'bold');\n  \n  // Building Specifications\n  addText('Building Specifications:', 10, 11, 'bold');\n  addText(`• Stories: ${project.targetFloors} floors`, 15, 10);\n  if (project.buildingDimensions) {\n    addText(`• Dimensions: ${project.buildingDimensions}`, 15, 10);\n  }\n  if (project.constructionType) {\n    addText(`• Construction Type: ${project.constructionType}`, 15, 10);\n  }\n  addText(`• Parking Spaces: ${project.targetParkingSpaces}`, 15, 10);\n  \n  yPosition += 5;\n  \n  // Executive Summary\n  addText('Executive Summary', 10, 14, 'bold');\n  \n  const overallScore = parseFloat(project.overallScore || '0');\n  const fitAssessment = overallScore >= 3.5 ? 'Excellent' : overallScore >= 3.0 ? 'Good' : overallScore >= 2.5 ? 'Moderate' : 'Poor';\n  const scoreLevel = overallScore >= 4 ? 'high' : overallScore >= 3 ? 'moderate' : 'low';\n  \n  addText(`This project represents a ${fitAssessment.toLowerCase()} fit for modular construction with a ${scoreLevel} Modular Feasibility score of ${project.overallScore}/5.0 based on comprehensive analysis across six key criteria.`, \n           10, 10, 'normal', pageWidth - 20);\n  \n  if (project.costSavingsPercent && parseFloat(project.costSavingsPercent) > 0) {\n    addText(`The analysis indicates potential cost savings of ${project.costSavingsPercent}% compared to traditional site-built construction.`, \n             10, 10, 'normal', pageWidth - 20);\n  }\n  \n  if (project.timeSavingsMonths && project.timeSavingsMonths > 0) {\n    addText(`Additionally, modular construction could reduce project timeline by ${project.timeSavingsMonths} months compared to conventional methods.`, \n             10, 10, 'normal', pageWidth - 20);\n  }\n  \n  addText('This report includes comprehensive analysis supported by detailed visual documentation including site plans, 3D renderings, unit layouts, and timeline comparisons available in the digital project file.', \n           10, 10, 'normal', pageWidth - 20);\n  \n  yPosition += 10;\n\n  // Detailed Feasibility Scoring Analysis\n  if (yPosition > pageHeight - 80) {\n    doc.addPage();\n    yPosition = 20;\n  }\n\n  addText('Detailed Feasibility Scoring Analysis', 10, 14, 'bold');\n  addText(`Overall Modular Feasibility Score: ${project.overallScore}/5.0`, 10, 12, 'bold');\n  yPosition += 10;\n\n  const criteria = [\n    { \n      name: 'Zoning Compliance', \n      score: project.zoningScore, \n      weight: '20%', \n      justification: project.zoningJustification,\n      details: [\n        'Permitted use compliance',\n        'Density bonus eligibility',\n        'Height and setback requirements',\n        'Required waivers assessment'\n      ]\n    },\n    { \n      name: 'Massing & Design', \n      score: project.massingScore, \n      weight: '15%', \n      justification: project.massingJustification,\n      details: [\n        'Repetitive floor plan efficiency',\n        'Structural bay optimization',\n        'Building height suitability',\n        'Unit layout standardization'\n      ]\n    },\n    { \n      name: 'Cost Effectiveness', \n      score: project.costScore, \n      weight: '20%', \n      justification: project.costJustification,\n      details: [\n        'Construction cost comparison',\n        'Lifecycle cost benefits',\n        'Financing and timeline advantages',\n        'Market competitiveness'\n      ]\n    },\n    { \n      name: 'Sustainability Impact', \n      score: project.sustainabilityScore, \n      weight: '20%', \n      justification: project.sustainabilityJustification,\n      details: [\n        'Waste reduction potential',\n        'Energy performance improvements',\n        'Carbon footprint reduction',\n        'Material optimization'\n      ]\n    },\n    { \n      name: 'Logistics Feasibility', \n      score: project.logisticsScore, \n      weight: '15%', \n      justification: project.logisticsJustification,\n      details: [\n        'Transportation route analysis',\n        'Site access evaluation',\n        'Crane operation requirements',\n        'Staging area adequacy'\n      ]\n    },\n    { \n      name: 'Build Time Optimization', \n      score: project.buildTimeScore, \n      weight: '10%', \n      justification: project.buildTimeJustification,\n      details: [\n        'Schedule compression potential',\n        'Weather independence benefits',\n        'Parallel construction activities',\n        'Quality control improvements'\n      ]\n    },\n  ];\n\n  criteria.forEach(criterion => {\n    if (yPosition > pageHeight - 50) {\n      doc.addPage();\n      yPosition = 20;\n    }\n    \n    // Criterion header\n    const score = parseFloat(criterion.score || '0');\n    const scoreColor = score >= 4 ? 'excellent' : score >= 3 ? 'good' : 'moderate';\n    \n    addText(`${criterion.name} (${criterion.weight} weight)`, 10, 11, 'bold');\n    addText(`Score: ${score.toFixed(1)}/5.0 - ${scoreColor.charAt(0).toUpperCase() + scoreColor.slice(1)}`, 15, 10, 'bold');\n    \n    // Justification\n    if (criterion.justification) {\n      addText('Assessment:', 15, 10, 'bold');\n      addText(criterion.justification, 20, 9, 'normal', pageWidth - 25);\n    }\n    \n    // Key evaluation factors\n    addText('Key Evaluation Factors:', 15, 10, 'bold');\n    criterion.details.forEach(detail => {\n      addText(`• ${detail}`, 20, 9);\n    });\n    \n    yPosition += 8;\n  });\n\n  yPosition += 5;\n\n  // Enhanced Cost Analysis\n  if (yPosition > pageHeight - 80) {\n    doc.addPage();\n    yPosition = 20;\n  }\n\n  addText('Comprehensive Cost Analysis', 10, 14, 'bold');\n  \n  const formatCurrency = (amount: string | null) => {\n    if (!amount) return '$0';\n    const num = parseFloat(amount);\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    }).format(num);\n  };\n\n  // Cost Comparison Summary\n  addText('Construction Cost Comparison:', 10, 12, 'bold');\n  yPosition += 5;\n  \n  // RaaP Modular Cost Details\n  addText('RaaP Modular Construction:', 15, 11, 'bold');\n  addText(`• Total Project Cost: ${formatCurrency(project.modularTotalCost)}`, 20, 10, 'bold');\n  if (project.modularCostPerSf) {\n    addText(`• Cost per Square Foot: ${formatCurrency(project.modularCostPerSf)}`, 20, 9);\n  }\n  if (project.modularCostPerUnit) {\n    addText(`• Cost per Unit: ${formatCurrency(project.modularCostPerUnit)}`, 20, 9);\n  }\n  addText(`• Timeline: ${project.modularTimelineMonths || 9} months`, 20, 9);\n  \n  yPosition += 5;\n  \n  // Traditional Site-Built Cost Details\n  addText('Traditional Site-Built Construction:', 15, 11, 'bold');\n  addText(`• Total Project Cost: ${formatCurrency(project.siteBuiltTotalCost)}`, 20, 10);\n  if (project.siteBuiltCostPerSf) {\n    addText(`• Cost per Square Foot: ${formatCurrency(project.siteBuiltCostPerSf)}`, 20, 9);\n  }\n  if (project.siteBuiltCostPerUnit) {\n    addText(`• Cost per Unit: ${formatCurrency(project.siteBuiltCostPerUnit)}`, 20, 9);\n  }\n  addText(`• Timeline: ${project.siteBuiltTimelineMonths || 13} months`, 20, 9);\n  \n  yPosition += 5;\n\n  // Cost Savings Analysis\n  if (project.costSavingsPercent && parseFloat(project.costSavingsPercent) > 0) {\n    const modularTotal = parseFloat(project.modularTotalCost || \"0\");\n    const siteBuiltTotal = parseFloat(project.siteBuiltTotalCost || \"0\");\n    const totalSavings = siteBuiltTotal - modularTotal;\n    \n    addText('Cost Savings Analysis:', 15, 11, 'bold');\n    addText(`• Total Cost Savings: ${formatCurrency(totalSavings.toString())}`, 20, 10, 'bold');\n    addText(`• Percentage Savings: ${project.costSavingsPercent}% reduction`, 20, 10, 'bold');\n    \n    if (project.timeSavingsMonths && project.timeSavingsMonths > 0) {\n      addText(`• Time Savings: ${project.timeSavingsMonths} months faster delivery`, 20, 9);\n      addText(`• Reduced carrying costs and earlier revenue generation`, 20, 9);\n    }\n  }\n\n  yPosition += 5;\n\n  // MasterFormat Cost Breakdown\n  if (costBreakdowns.length > 0) {\n    if (yPosition > pageHeight - 100) {\n      doc.addPage();\n      yPosition = 20;\n    }\n\n    addText('MasterFormat Cost Breakdown', 10, 12, 'bold');\n    yPosition += 5;\n\n    // Table headers\n    doc.setFont('helvetica', 'bold');\n    doc.setFontSize(9);\n    doc.text('Category', 10, yPosition);\n    doc.text('Site Built', 80, yPosition);\n    doc.text('RaaP GC', 120, yPosition);\n    doc.text('RaaP Fab', 150, yPosition);\n    doc.text('RaaP Total', 180, yPosition);\n    yPosition += 8;\n\n    // Table data\n    doc.setFont('helvetica', 'normal');\n    costBreakdowns.forEach(breakdown => {\n      if (yPosition > pageHeight - 20) {\n        doc.addPage();\n        yPosition = 20;\n      }\n      \n      doc.text(breakdown.category, 10, yPosition);\n      doc.text(formatCurrency(breakdown.siteBuiltCost), 80, yPosition);\n      doc.text(formatCurrency(breakdown.raapGcCost), 120, yPosition);\n      doc.text(formatCurrency(breakdown.raapFabCost), 150, yPosition);\n      doc.text(formatCurrency(breakdown.raapTotalCost), 180, yPosition);\n      yPosition += 8;\n    });\n  }\n\n  // Detailed Zoning Analysis\n  if (yPosition > pageHeight - 80) {\n    doc.addPage();\n    yPosition = 20;\n  }\n\n  addText('Zoning & Site Analysis', 10, 14, 'bold');\n  \n  // Zoning District Information\n  addText(`Zoning District: ${project.zoningDistrict || 'RM'} (Residential Medium Density)`, 10, 12, 'bold');\n  yPosition += 5;\n  \n  // Compliance Analysis\n  addText('Zoning Compliance Analysis:', 10, 11, 'bold');\n  \n  const zoningCompliance = [\n    { category: 'Allowed Use', status: 'COMPLIANT', detail: 'Multi-unit residential development is permitted by right' },\n    { category: 'Density', status: 'COMPLIANT', \n      detail: project.densityBonusEligible \n        ? '34 DU/Acre maximum (with AB 1287 state density bonus)' \n        : '17 DU/Acre maximum (base zoning density)' },\n    { category: 'Height Limit', status: 'COMPLIANT', detail: `${project.targetFloors * 10}' proposed vs. 35' maximum allowed` },\n    { category: 'Setbacks', status: 'COMPLIANT', detail: 'Meets 15\\' front, 5\\' side, and 10\\' rear setback requirements' },\n    { category: 'Parking', status: 'COMPLIANT', detail: `${project.targetParkingSpaces} spaces provided meets minimum requirements` },\n  ];\n\n  zoningCompliance.forEach(item => {\n    addText(`✓ ${item.category}: ${item.status}`, 15, 10, 'bold');\n    addText(`  ${item.detail}`, 20, 9, 'normal', pageWidth - 25);\n    yPosition += 2;\n  });\n\n  yPosition += 5;\n\n  // Site Context Analysis\n  addText('Site Context Analysis:', 10, 11, 'bold');\n  \n  const siteAnalysis = [\n    'Site is located within an established residential neighborhood',\n    'Proposed building scale is compatible with surrounding development',\n    'Access from public street meets city engineering standards',\n    'Utilities (water, sewer, electric, gas) are available at the street',\n  ];\n\n  siteAnalysis.forEach(analysis => {\n    addText(`• ${analysis}`, 15, 9, 'normal', pageWidth - 20);\n  });\n\n  yPosition += 5;\n\n  // Development Incentives/Waivers\n  if (project.requiredWaivers || project.densityBonusEligible) {\n    addText('Development Incentives & Waivers:', 10, 11, 'bold');\n    \n    if (project.densityBonusEligible) {\n      addText('• State Density Bonus (AB 1287): Eligible for increased density and development incentives', 15, 9, 'normal', pageWidth - 20);\n    }\n    \n    if (project.requiredWaivers) {\n      addText('• Required Waivers/Concessions:', 15, 9, 'bold');\n      addText(project.requiredWaivers, 20, 9, 'normal', pageWidth - 25);\n    }\n  }\n  \n  yPosition += 5;\n\n  // Zoning Visual Documentation\n  addText('Zoning Documentation Available:', 10, 11, 'bold');\n  addText('• Detailed zoning map showing site context and surrounding districts', 15, 9);\n  addText('• Site location map with transportation routes and accessibility', 15, 9);\n  addText('• Comprehensive site analysis drawings', 15, 9);\n  addText('Note: Complete zoning and site documentation is available in the digital project file.', 15, 9, 'normal', pageWidth - 20);\n  \n  yPosition += 5;\n\n  // Massing Analysis\n  if (yPosition > pageHeight - 60) {\n    doc.addPage();\n    yPosition = 20;\n  }\n\n  addText('Massing & Design Analysis', 10, 14, 'bold');\n  \n  // Building Configuration\n  addText('Building Configuration:', 10, 11, 'bold');\n  addText(`• Building Height: ${project.targetFloors} stories (approximately ${project.targetFloors * 10}' tall)`, 15, 9);\n  if (project.buildingDimensions) {\n    addText(`• Building Dimensions: ${project.buildingDimensions}`, 15, 9);\n  }\n  addText(`• Total Units: ${totalUnits} residential units across ${project.targetFloors} floors`, 15, 9);\n  \n  yPosition += 5;\n  \n  // Modular Design Considerations\n  addText('Modular Design Optimization:', 10, 11, 'bold');\n  \n  const massingBenefits = [\n    'Repetitive floor plans maximize factory efficiency and reduce costs',\n    'Standardized structural bays optimize modular manufacturing process',\n    'Consistent unit layouts enable streamlined installation sequencing',\n    'Building height and configuration are well-suited for modular construction',\n    'Parking integration can be designed to accommodate crane access during installation',\n  ];\n\n  massingBenefits.forEach(benefit => {\n    addText(`• ${benefit}`, 15, 9, 'normal', pageWidth - 20);\n  });\n\n  yPosition += 5;\n\n  // Design Efficiency Analysis\n  addText('Design Efficiency Metrics:', 10, 11, 'bold');\n  const efficiency = Math.round((totalUnits / project.targetFloors) * 10) / 10;\n  addText(`• Units per Floor: ${efficiency} (${efficiency >= 4 ? 'Excellent' : efficiency >= 3 ? 'Good' : 'Moderate'} density for modular)`, 15, 9);\n  addText(`• Floor Plan Repetition: ${project.targetFloors - 1} typical floors (high manufacturing efficiency)`, 15, 9);\n  addText(`• Structural Regularity: Rectangular footprint optimizes modular bay sizing`, 15, 9);\n  \n  yPosition += 5;\n\n  // Visual Documentation Reference\n  addText('Design Documentation Available:', 10, 11, 'bold');\n  addText('• Site plan and building layout drawings', 15, 9);\n  addText('• 3D building renderings showing massing and context', 15, 9);\n  addText('• Individual unit floor plans (1BR, 2BR, 3BR layouts)', 15, 9);\n  addText('• Comprehensive unit plans showing spatial efficiency', 15, 9);\n  addText('Note: Complete visual documentation is available in the digital project file.', 15, 9, 'normal', pageWidth - 20);\n  \n  yPosition += 10;\n\n  // Sustainability Analysis\n  if (yPosition > pageHeight - 60) {\n    doc.addPage();\n    yPosition = 20;\n  }\n\n  addText('Sustainability Analysis', 10, 14, 'bold');\n  \n  // Environmental Benefits\n  addText('Environmental Benefits of Modular Construction:', 10, 11, 'bold');\n  \n  const sustainabilityBenefits = [\n    'Reduced construction waste: 90% less waste compared to site-built construction',\n    'Lower carbon emissions: Factory-controlled environment reduces material transportation',\n    'Energy efficiency: Tighter building envelope and quality control in factory setting',\n    'Material optimization: Precise cutting and standardized processes minimize waste',\n    'Reduced site disruption: Shorter on-site construction phase',\n    'Quality consistency: Factory QC processes ensure better insulation and air sealing',\n  ];\n\n  sustainabilityBenefits.forEach(benefit => {\n    addText(`• ${benefit}`, 15, 9, 'normal', pageWidth - 20);\n  });\n\n  yPosition += 5;\n\n  // Energy Performance\n  addText('Projected Energy Performance:', 10, 11, 'bold');\n  addText('• Modular construction typically achieves 15-20% better energy performance', 15, 9);\n  addText('• Improved air tightness from factory-controlled assembly', 15, 9);\n  addText('• Consistent insulation installation reduces thermal bridging', 15, 9);\n  addText('• Opportunity for integrated renewable energy systems', 15, 9);\n\n  yPosition += 10;\n\n  // Enhanced Logistics Analysis\n  addText('Logistics Assessment', 10, 14, 'bold');\n  \n  // Transportation & Access\n  addText('Transportation & Access:', 10, 11, 'bold');\n  addText(`• Factory Location: ${project.factoryLocation || 'Tracy, CA'}`, 15, 9);\n  \n  // Site-specific logistics for known projects\n  if (project.address.includes('Olivehurst')) {\n    addText('• Highway Access: Within 1/2 mile of Highway 70, Exit 18A', 15, 9);\n    addText('• Site Consideration: Overhead powerline on Chestnut Rd requires crane coordination', 15, 9, 'normal', pageWidth - 20);\n  } else {\n    addText('• Highway access analysis to be completed during detailed planning', 15, 9);\n  }\n\n  yPosition += 3;\n\n  if (project.transportationNotes) {\n    addText('Transportation Notes:', 10, 11, 'bold');\n    addText(project.transportationNotes, 15, 9, 'normal', pageWidth - 20);\n    yPosition += 3;\n  }\n\n  // Delivery & Installation Process\n  addText('Delivery & Installation Process:', 10, 11, 'bold');\n  \n  const logisticsProcess = [\n    'Pre-construction site preparation and foundation work',\n    'Staged delivery of modular units to minimize on-site storage requirements',\n    'Sequential crane installation following predetermined sequence',\n    'Mechanical, electrical, and plumbing connections between modules',\n    'Final exterior finishing and site work completion',\n  ];\n\n  logisticsProcess.forEach(step => {\n    addText(`• ${step}`, 15, 9, 'normal', pageWidth - 20);\n  });\n\n  yPosition += 3;\n\n  if (project.stagingNotes) {\n    addText('Site Staging Considerations:', 10, 11, 'bold');\n    addText(project.stagingNotes, 15, 9, 'normal', pageWidth - 20);\n  }\n\n  // Comprehensive Timeline Analysis\n  if (yPosition > pageHeight - 100) {\n    doc.addPage();\n    yPosition = 20;\n  }\n\n  addText('Comprehensive Project Timeline Analysis', 10, 14, 'bold');\n  addText('Detailed Phase-by-Phase Comparison:', 10, 12, 'bold');\n  yPosition += 5;\n\n  // RaaP Modular Timeline (30.5 months total)\n  addText('RaaP Modular Construction Timeline (30.5 months total):', 10, 11, 'bold');\n  \n  const modularPhases = [\n    { phase: 'SmartStart', duration: '2 months', type: 'RaaP Process' },\n    { phase: 'Entitlement Documents', duration: '2 months', type: 'AoR Work' },\n    { phase: 'Entitlement Process', duration: '6 months', type: 'AHJ Review' },\n    { phase: 'Permit Documents', duration: '4.5 months', type: 'AoR Work' },\n    { phase: 'Permitting Process', duration: '4 months', type: 'AHJ Review' },\n    { phase: 'Site Work', duration: '7 months', type: 'GC Work' },\n    { phase: 'Module Setting', duration: '1 month', type: 'RaaP Installation' },\n    { phase: 'Building Completion', duration: '4 months', type: 'GC Work' },\n  ];\n\n  modularPhases.forEach(phase => {\n    addText(`• ${phase.phase}: ${phase.duration} (${phase.type})`, 15, 9);\n  });\n\n  yPosition += 3;\n  addText('Design Time: 18.5 months (8.5 months design work)', 15, 9, 'bold');\n  addText('Construction Time: 12 months (6 months modular fabrication)', 15, 9, 'bold');\n  \n  yPosition += 5;\n\n  // Site-Built Timeline (41 months total)\n  addText('Traditional Site-Built Construction Timeline (41 months total):', 10, 11, 'bold');\n  \n  const siteBuiltPhases = [\n    { phase: 'Project Preparation', duration: '2 months', type: 'Initial Setup' },\n    { phase: 'Entitlement Documents', duration: '3 months', type: 'AoR Work' },\n    { phase: 'Entitlement Process', duration: '6 months', type: 'AHJ Review' },\n    { phase: 'Permit Documents', duration: '8 months', type: 'AoR Work' },\n    { phase: 'Permitting Process', duration: '4 months', type: 'AHJ Review' },\n    { phase: 'Site Work', duration: '8 months', type: 'GC Work' },\n    { phase: 'Building Construction', duration: '10 months', type: 'GC Work' },\n  ];\n\n  siteBuiltPhases.forEach(phase => {\n    addText(`• ${phase.phase}: ${phase.duration} (${phase.type})`, 15, 9);\n  });\n\n  yPosition += 3;\n  addText('Design Time: 23 months (13 months design work)', 15, 9, 'bold');\n  addText('Construction Time: 18 months (all on-site construction)', 15, 9, 'bold');\n  \n  yPosition += 5;\n\n  // Timeline Advantages Summary\n  addText('Timeline Advantages Analysis:', 10, 11, 'bold');\n  \n  const timelineAdvantages = [\n    'Total Time Savings: 10.5 months (25% faster project delivery)',\n    'Design Phase Efficiency: 4.5 months savings through streamlined RaaP process',\n    'Construction Phase Acceleration: 6 months savings through parallel fabrication',\n    'Weather Independence: Factory fabrication eliminates weather delays',\n    'Quality Control: Consistent factory environment reduces rework time',\n    'Parallel Activities: Site work occurs simultaneously with module fabrication',\n  ];\n\n  timelineAdvantages.forEach(advantage => {\n    addText(`• ${advantage}`, 15, 9, 'normal', pageWidth - 20);\n  });\n\n  yPosition += 5;\n\n  // Key Timeline Benefits\n  addText('Key Timeline Benefits:', 10, 11, 'bold');\n  addText('• Earlier Revenue Generation: 10.5 months faster occupancy and rent collection', 15, 9, 'normal', pageWidth - 20);\n  addText('• Reduced Carrying Costs: Shorter construction loans and development overhead', 15, 9, 'normal', pageWidth - 20);\n  addText('• Market Timing: Faster delivery reduces market risk and captures current demand', 15, 9, 'normal', pageWidth - 20);\n  addText('• Financing Advantages: Lenders favor predictable modular construction schedules', 15, 9, 'normal', pageWidth - 20);\n\n  yPosition += 5;\n\n  // Timeline Visualization Reference\n  addText('Timeline Visualization Available:', 10, 11, 'bold');\n  addText('A comprehensive timeline comparison diagram is included in the digital project file showing:', 15, 9, 'normal', pageWidth - 20);\n  addText('• Detailed phase-by-phase comparison between RaaP Modular and Site-Built timelines', 15, 9);\n  addText('• Color-coded task categories (RaaP tasks, AoR tasks, AHJ tasks, GC tasks, Fabrication)', 15, 9);\n  addText('• Design time breakdown: 18.5 months (RaaP) vs. 23 months (Site-Built)', 15, 9);\n  addText('• Construction time breakdown: 12 months (RaaP) vs. 18 months (Site-Built)', 15, 9);\n  addText('• Key milestone markers showing critical delivery points', 15, 9);\n  addText('Note: Complete timeline visualization is available in the digital project presentation.', 15, 9, 'normal', pageWidth - 20);\n\n  // Footer\n  const totalPages = doc.getNumberOfPages();\n  for (let i = 1; i <= totalPages; i++) {\n    doc.setPage(i);\n    doc.setFontSize(8);\n    doc.setTextColor(128, 128, 128);\n    doc.text(`Page ${i} of ${totalPages}`, pageWidth - 30, pageHeight - 10);\n    doc.text('© 2025 RaaP - ModularFeasibility Report', 10, pageHeight - 10);\n  }\n\n  // Generate filename and download\n  const fileName = `${project.name.replace(/[^a-zA-Z0-9]/g, '_')}_Feasibility_Report.pdf`;\n  doc.save(fileName);\n  */ // End disabled PDF generation code\n}\n","size_bytes":25539},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/sampleData.ts":{"content":"import type { Project } from '@shared/schema';\n\nexport const sampleProjects: Omit<Project, 'id' | 'userId' | 'createdAt' | 'updatedAt'>[] = [\n  {\n    name: \"Serenity Village\",\n    address: \"5224 Chestnut Road, Olivehurst, CA\",\n    projectType: \"affordable\",\n    targetFloors: 3,\n    studioUnits: 0,\n    oneBedUnits: 6,\n    twoBedUnits: 12,\n    threeBedUnits: 6,\n    targetParkingSpaces: 24,\n    buildingDimensions: \"146' X 66'\",\n    constructionType: \"Type V-A\",\n    \n    // Feasibility scoring - Serenity Village from the document\n    zoningScore: \"4.0\",\n    zoningJustification: \"Score of 4/5 as concessions are required to reduce open space and parking requirements. Modular construction does not introduce any additional waivers or restrictions for this site.\",\n    massingScore: \"5.0\",\n    massingJustification: \"Score of 5/5 since we can achieve the goal of 24 units and unit mix as the traditional original design.\",\n    costScore: \"4.0\",\n    costJustification: \"$10.8M ($411/sf; $451K/unit). Prevailing Wage: 6% savings over site-built. Score of 4/5 since modular is cheaper than site-built.\",\n    sustainabilityScore: \"5.0\",\n    sustainabilityJustification: \"Score of 5/5 due to strong alignment with PHIUS and Net Zero Energy goals through modular design. Will require enhancements to foundation, walls, roof, windows, HVAC & lighting in addition to the investment in batteries & solar power.\",\n    logisticsScore: \"5.0\",\n    logisticsJustification: \"Score of 5/5 due to easy access from the highway and available open space for the staging site.\",\n    buildTimeScore: \"4.0\",\n    buildTimeJustification: \"9 months design + construction using modular approach vs 13 months for site built. Score of 4/5 due to savings of 8 months.\",\n    overallScore: \"4.4\",\n    \n    // Cost analysis - from the document\n    modularTotalCost: \"10821565\",\n    modularCostPerSf: \"411\",\n    modularCostPerUnit: \"450899\",\n    siteBuiltTotalCost: \"10960303\",\n    siteBuiltCostPerSf: \"422\",\n    siteBuiltCostPerUnit: \"456679\",\n    costSavingsPercent: \"6\",\n    \n    // Timeline analysis\n    modularTimelineMonths: \"9\",\n    siteBuiltTimelineMonths: \"13\",\n    timeSavingsMonths: \"8\",\n    \n    // Zoning details\n    zoningDistrict: \"RM\",\n    densityBonusEligible: true,\n    requiredWaivers: \"Concession for Open Space Reduction. Concessions can be used to lower parking requirement.\",\n    \n    // Logistics details\n    factoryLocation: \"Tracy, CA\",\n    transportationNotes: \"Within 1/2 mile of highway 70 and exit 18A to Olivehurst Ave and Chestnut Rd with no bridge or access issues observed for factory delivery.\",\n    stagingNotes: \"Large open site, with no visible restrictions for staging. Overhead powerline on Chestnut Rd could cause some crane logistics concerns.\",\n  },\n  \n  {\n    name: \"Mountain View Apartments\",\n    address: \"1425 Castro Street, Mountain View, CA\",\n    projectType: \"senior\",\n    targetFloors: 4,\n    studioUnits: 8,\n    oneBedUnits: 20,\n    twoBedUnits: 8,\n    threeBedUnits: 0,\n    targetParkingSpaces: 36,\n    buildingDimensions: \"180' X 75'\",\n    constructionType: \"Type V-A\",\n    \n    // Feasibility scoring\n    zoningScore: \"4.2\",\n    zoningJustification: \"Strong zoning compatibility for senior housing with minor concessions needed for parking requirements.\",\n    massingScore: \"4.8\",\n    massingJustification: \"Excellent unit configuration for modular construction with efficient repetitive layouts.\",\n    costScore: \"4.5\",\n    costJustification: \"4.56% cost savings over site-built construction due to factory efficiencies and reduced labor costs.\",\n    sustainabilityScore: \"4.5\",\n    sustainabilityJustification: \"Good sustainability potential with modular design supporting energy efficiency goals.\",\n    logisticsScore: \"4.0\",\n    logisticsJustification: \"Urban location with some transportation constraints but adequate staging area.\",\n    buildTimeScore: \"4.8\",\n    buildTimeJustification: \"5 months time savings through parallel construction and factory efficiency.\",\n    overallScore: \"4.5\",\n    \n    // Cost analysis\n    modularTotalCost: \"18540000\",\n    modularCostPerSf: \"485\",\n    modularCostPerUnit: \"515000\",\n    siteBuiltTotalCost: \"19425817\",\n    siteBuiltCostPerSf: \"501\",\n    siteBuiltCostPerUnit: \"539606\",\n    costSavingsPercent: \"4.56\",\n    \n    // Timeline analysis\n    modularTimelineMonths: \"8\",\n    siteBuiltTimelineMonths: \"14\",\n    timeSavingsMonths: \"6\",\n    \n    // Zoning details\n    zoningDistrict: \"R4\",\n    densityBonusEligible: false,\n    requiredWaivers: \"Parking reduction for senior housing requirements.\",\n    \n    // Logistics details\n    factoryLocation: \"Tracy, CA\",\n    transportationNotes: \"Highway 101 access with urban delivery considerations. Route planning required for oversize loads.\",\n    stagingNotes: \"Limited staging area requires careful logistics coordination. Street closures may be needed.\",\n  },\n  \n  {\n    name: \"University Housing Complex\",\n    address: \"2100 17th Street, Boulder, CO\",\n    projectType: \"student\",\n    targetFloors: 4,\n    studioUnits: 24,\n    oneBedUnits: 24,\n    twoBedUnits: 0,\n    threeBedUnits: 0,\n    targetParkingSpaces: 24,\n    buildingDimensions: \"200' X 60'\",\n    constructionType: \"Type III-A\",\n    \n    // Feasibility scoring\n    zoningScore: \"3.5\",\n    zoningJustification: \"Zoning allows student housing but height restrictions and setback requirements create some constraints.\",\n    massingScore: \"4.2\",\n    massingJustification: \"Good modular efficiency with repetitive unit layouts, 4-story construction well-suited for modular.\",\n    costScore: \"3.8\",\n    costJustification: \"4.65% cost savings over site-built. Good modular economics for student housing scale.\",\n    sustainabilityScore: \"4.0\",\n    sustainabilityJustification: \"Moderate sustainability benefits with modular construction supporting campus sustainability goals.\",\n    logisticsScore: \"3.5\",\n    logisticsJustification: \"Mountain location creates transportation challenges. Limited factory options in region.\",\n    buildTimeScore: \"4.5\",\n    buildTimeJustification: \"5 months time savings important for academic calendar timing.\",\n    overallScore: \"4.4\",\n    \n    // Cost analysis\n    modularTotalCost: \"24576000\",\n    modularCostPerSf: \"512\",\n    modularCostPerUnit: \"512000\",\n    siteBuiltTotalCost: \"25774515\",\n    siteBuiltCostPerSf: \"521\",\n    siteBuiltCostPerUnit: \"536969\",\n    costSavingsPercent: \"4.65\",\n    \n    // Timeline analysis\n    modularTimelineMonths: \"11\",\n    siteBuiltTimelineMonths: \"16\",\n    timeSavingsMonths: \"5\",\n    \n    // Zoning details\n    zoningDistrict: \"MU-2\",\n    densityBonusEligible: false,\n    requiredWaivers: \"Height variance for 5-story construction. Reduced parking for student housing.\",\n    \n    // Logistics details\n    factoryLocation: \"Denver, CO\",\n    transportationNotes: \"Mountain highway transport from Denver factory. Weather considerations for winter delivery.\",\n    stagingNotes: \"Campus location with restrictions on construction hours and staging area access.\",\n  },\n  \n  {\n    name: \"Workforce Commons\",\n    address: \"875 Elm Avenue, Denver, CO\",\n    projectType: \"workforce\",\n    targetFloors: 4,\n    studioUnits: 0,\n    oneBedUnits: 16,\n    twoBedUnits: 16,\n    threeBedUnits: 0,\n    targetParkingSpaces: 40,\n    buildingDimensions: \"165' X 70'\",\n    constructionType: \"Type V-A\",\n    \n    // Feasibility scoring\n    zoningScore: \"4.8\",\n    zoningJustification: \"Excellent zoning compatibility for workforce housing with city incentives and streamlined approval process.\",\n    massingScore: \"4.5\",\n    massingJustification: \"Very good modular fit with 32 units (16 1-bed, 16 2-bed) and optimal building configuration.\",\n    costScore: \"4.8\",\n    costJustification: \"8.23% cost savings over site-built construction. Strong modular economics for this project scale.\",\n    sustainabilityScore: \"4.7\",\n    sustainabilityJustification: \"Excellent sustainability alignment with city green building requirements and modular efficiency.\",\n    logisticsScore: \"4.8\",\n    logisticsJustification: \"Optimal logistics with nearby factory, excellent highway access, and ample staging space.\",\n    buildTimeScore: \"5.0\",\n    buildTimeJustification: \"7 months time savings crucial for workforce housing delivery timeline.\",\n    overallScore: \"4.6\",\n    \n    // Cost analysis\n    modularTotalCost: \"17323946\",\n    modularCostPerSf: \"448\",\n    modularCostPerUnit: \"541373\",\n    siteBuiltTotalCost: \"18877570\",\n    siteBuiltCostPerSf: \"469\",\n    siteBuiltCostPerUnit: \"589924\",\n    costSavingsPercent: \"8.23\",\n    \n    // Timeline analysis\n    modularTimelineMonths: \"7\",\n    siteBuiltTimelineMonths: \"14\",\n    timeSavingsMonths: \"7\",\n    \n    // Zoning details\n    zoningDistrict: \"MX-3\",\n    densityBonusEligible: true,\n    requiredWaivers: \"None required. Project fully compliant with workforce housing incentives.\",\n    \n    // Logistics details\n    factoryLocation: \"Denver, CO\",\n    transportationNotes: \"Excellent highway access from local factory. Urban delivery route well-established.\",\n    stagingNotes: \"Large development site with excellent staging area and no access restrictions.\",\n  }\n];\n\nexport const sampleCostBreakdowns = [\n  // Shadey Village cost breakdowns - updated with actual housing project data\n  {\n    category: \"03 Concrete\",\n    siteBuiltCost: \"2533115\",\n    raapGcCost: \"1373299\",\n    raapFabCost: \"625628\",\n    raapTotalCost: \"1998927\"\n  },\n  {\n    category: \"04 Masonry\",\n    siteBuiltCost: \"916443\",\n    raapGcCost: \"845392\",\n    raapFabCost: \"0\",\n    raapTotalCost: \"845392\"\n  },\n  {\n    category: \"05 Metal\",\n    siteBuiltCost: \"3103653\",\n    raapGcCost: \"2572095\",\n    raapFabCost: \"241556\",\n    raapTotalCost: \"2813651\"\n  },\n  {\n    category: \"06 Wood & Plastics\",\n    siteBuiltCost: \"8643831\",\n    raapGcCost: \"41318\",\n    raapFabCost: \"6378393\",\n    raapTotalCost: \"6419712\"\n  },\n  {\n    category: \"07 Thermal & Moisture Protection\",\n    siteBuiltCost: \"2325482\",\n    raapGcCost: \"1129942\",\n    raapFabCost: \"960368\",\n    raapTotalCost: \"2090309\"\n  },\n  {\n    category: \"08 Openings\",\n    siteBuiltCost: \"1393966\",\n    raapGcCost: \"440895\",\n    raapFabCost: \"792909\",\n    raapTotalCost: \"1233804\"\n  },\n  {\n    category: \"09 Finishes\",\n    siteBuiltCost: \"5329218\",\n    raapGcCost: \"59288\",\n    raapFabCost: \"2906204\",\n    raapTotalCost: \"2965492\"\n  },\n  {\n    category: \"10 Specialties\",\n    siteBuiltCost: \"200836\",\n    raapGcCost: \"0\",\n    raapFabCost: \"161890\",\n    raapTotalCost: \"161890\"\n  },\n  {\n    category: \"11 Equipment\",\n    siteBuiltCost: \"29531\",\n    raapGcCost: \"29531\",\n    raapFabCost: \"0\",\n    raapTotalCost: \"29531\"\n  },\n  {\n    category: \"12 Furnishing\",\n    siteBuiltCost: \"374255\",\n    raapGcCost: \"18284\",\n    raapFabCost: \"324648\",\n    raapTotalCost: \"342932\"\n  },\n  {\n    category: \"13 Special Construction\",\n    siteBuiltCost: \"51729\",\n    raapGcCost: \"51729\",\n    raapFabCost: \"0\",\n    raapTotalCost: \"51729\"\n  },\n  {\n    category: \"21 Fire Suppression\",\n    siteBuiltCost: \"982245\",\n    raapGcCost: \"346948\",\n    raapFabCost: \"351524\",\n    raapTotalCost: \"698472\"\n  },\n  {\n    category: \"22 Plumbing\",\n    siteBuiltCost: \"2403740\",\n    raapGcCost: \"1124362\",\n    raapFabCost: \"1023475\",\n    raapTotalCost: \"2147838\"\n  },\n  {\n    category: \"23 HVAC\",\n    siteBuiltCost: \"2505408\",\n    raapGcCost: \"183153\",\n    raapFabCost: \"1297260\",\n    raapTotalCost: \"1480413\"\n  },\n  {\n    category: \"26 Electrical\",\n    siteBuiltCost: \"3960944\",\n    raapGcCost: \"2811655\",\n    raapFabCost: \"876365\",\n    raapTotalCost: \"3688021\"\n  },\n  {\n    category: \"31 Earthwork\",\n    siteBuiltCost: \"1146618\",\n    raapGcCost: \"1152469\",\n    raapFabCost: \"0\",\n    raapTotalCost: \"1152469\"\n  },\n  {\n    category: \"32 Exterior Improvements\",\n    siteBuiltCost: \"1521663\",\n    raapGcCost: \"1521663\",\n    raapFabCost: \"0\",\n    raapTotalCost: \"1521663\"\n  },\n  {\n    category: \"33 Utilities\",\n    siteBuiltCost: \"1565388\",\n    raapGcCost: \"1565388\",\n    raapFabCost: \"0\",\n    raapTotalCost: \"1565388\"\n  },\n  {\n    category: \"01 General Requirements\",\n    siteBuiltCost: \"2443868\",\n    raapGcCost: \"959509\",\n    raapFabCost: \"1012388\",\n    raapTotalCost: \"1971897\"\n  },\n  {\n    category: \"00 Fees\",\n    siteBuiltCost: \"4789073\",\n    raapGcCost: \"1864865\",\n    raapFabCost: \"640485\",\n    raapTotalCost: \"2505350\"\n  }\n];\n\nexport function calculateFeasibilityScores(projectData: any) {\n  const totalUnits = (projectData.studioUnits || 0) + (projectData.oneBedUnits || 0) + \n                    (projectData.twoBedUnits || 0) + (projectData.threeBedUnits || 0);\n  \n  // Scoring based on project characteristics\n  let zoningScore = 3.5;\n  let massingScore = 4.0;\n  let costScore = 4.0;\n  let sustainabilityScore = 4.0;\n  let logisticsScore = 4.0;\n  let buildTimeScore = 4.0;\n\n  // Adjust scores based on project type\n  if (projectData.projectType === 'affordable') {\n    zoningScore = 4.0; // Better zoning for affordable housing\n    sustainabilityScore = 5.0; // High sustainability focus\n  } else if (projectData.projectType === 'senior') {\n    zoningScore = 4.2; // Good zoning for senior housing\n    costScore = 4.5; // Higher cost efficiency\n  } else if (projectData.projectType === 'workforce') {\n    zoningScore = 4.8; // Excellent zoning incentives\n    costScore = 4.8; // Strong economics\n    buildTimeScore = 5.0; // Time critical\n  } else if (projectData.projectType === 'student') {\n    zoningScore = 3.5; // More zoning constraints\n    logisticsScore = 3.5; // Campus logistics challenges\n  }\n\n  // Adjust for unit count\n  if (totalUnits >= 30) {\n    massingScore = Math.min(5.0, massingScore + 0.5);\n    costScore = Math.min(5.0, costScore + 0.3);\n  } else if (totalUnits < 20) {\n    costScore = Math.max(3.0, costScore - 0.3);\n  }\n\n  // Adjust for floors\n  if (projectData.targetFloors >= 5) {\n    massingScore = Math.max(3.5, massingScore - 0.3);\n    logisticsScore = Math.max(3.5, logisticsScore - 0.3);\n  } else if (projectData.targetFloors <= 3) {\n    sustainabilityScore = Math.min(5.0, sustainabilityScore + 0.3);\n  }\n\n  // Calculate weighted overall score\n  const overallScore = (\n    zoningScore * 0.20 +\n    massingScore * 0.15 +\n    costScore * 0.20 +\n    sustainabilityScore * 0.20 +\n    logisticsScore * 0.15 +\n    buildTimeScore * 0.10\n  );\n\n  // Calculate cost estimates\n  const baseCostPerUnit = projectData.projectType === 'affordable' ? 321621 : \n                         projectData.projectType === 'senior' ? 365000 :\n                         projectData.projectType === 'workforce' ? 340000 : 350000;\n  \n  const modularTotalCost = totalUnits * baseCostPerUnit;\n  const costSavingsPercent = 30.0; // 30% savings consistently\n  const siteBuiltTotalCost = modularTotalCost / (1 - costSavingsPercent / 100);\n  \n  // Timeline estimates - fixed targets\n  const modularTime = 30.5; // Fixed modular timeline\n  const timeSavings = 10.5; // Fixed time savings (25% of 41 months)\n  const siteBuiltTime = 41.0; // Fixed site-built timeline\n\n  return {\n    zoningScore: zoningScore.toFixed(1),\n    zoningJustification: getZoningJustification(zoningScore, projectData.projectType),\n    massingScore: massingScore.toFixed(1),\n    massingJustification: getMassingJustification(massingScore, totalUnits),\n    costScore: costScore.toFixed(1),\n    costJustification: getCostJustification(costScore, costSavingsPercent),\n    sustainabilityScore: sustainabilityScore.toFixed(1),\n    sustainabilityJustification: getSustainabilityJustification(sustainabilityScore),\n    logisticsScore: logisticsScore.toFixed(1),\n    logisticsJustification: getLogisticsJustification(logisticsScore),\n    buildTimeScore: buildTimeScore.toFixed(1),\n    buildTimeJustification: getBuildTimeJustification(buildTimeScore, timeSavings),\n    overallScore: overallScore.toFixed(1),\n    modularTotalCost: modularTotalCost.toString(),\n    modularCostPerUnit: baseCostPerUnit.toString(),\n    siteBuiltTotalCost: siteBuiltTotalCost.toString(),\n    siteBuiltCostPerUnit: (siteBuiltTotalCost / totalUnits).toString(),\n    costSavingsPercent: costSavingsPercent.toFixed(1),\n    modularTimelineMonths: modularTime,\n    siteBuiltTimelineMonths: siteBuiltTime,\n    timeSavingsMonths: timeSavings,\n    factoryLocation: \"Tracy, CA\",\n    zoningDistrict: \"RM\",\n    densityBonusEligible: projectData.projectType === 'affordable' || projectData.projectType === 'workforce',\n  };\n}\n\nfunction getZoningJustification(score: number, projectType: string): string {\n  if (score >= 4.5) return \"Excellent zoning compatibility with streamlined approval process and favorable regulations.\";\n  if (score >= 4.0) return \"Good zoning fit with minor concessions required for optimal project configuration.\";\n  if (score >= 3.5) return \"Moderate zoning compatibility with some restrictions and waiver requirements.\";\n  return \"Challenging zoning situation requiring significant variances and concessions.\";\n}\n\nfunction getMassingJustification(score: number, totalUnits: number): string {\n  if (score >= 4.5) return `Excellent modular efficiency with ${totalUnits} units configured for optimal factory construction.`;\n  if (score >= 4.0) return `Good modular fit achieving target unit count with efficient repetitive layouts.`;\n  if (score >= 3.5) return `Moderate modular compatibility with some design adaptations needed.`;\n  return \"Challenging massing configuration requiring significant modular design modifications.\";\n}\n\nfunction getCostJustification(score: number, savings: number): string {\n  if (score >= 4.5) return `Strong cost advantages with ${savings.toFixed(1)}% savings over site-built construction.`;\n  if (score >= 4.0) return `Cost competitive with ${savings.toFixed(1)}% savings through modular efficiencies.`;\n  if (score >= 3.5) return `Moderate cost benefits with minimal savings over traditional construction.`;\n  return \"Cost neutral or slightly higher than site-built construction.\";\n}\n\nfunction getSustainabilityJustification(score: number): string {\n  if (score >= 4.5) return \"Excellent sustainability alignment with Net Zero Energy and PHIUS certification potential.\";\n  if (score >= 4.0) return \"Good sustainability benefits through modular construction waste reduction and efficiency.\";\n  if (score >= 3.5) return \"Moderate sustainability improvements over traditional construction methods.\";\n  return \"Limited sustainability advantages with modular construction approach.\";\n}\n\nfunction getLogisticsJustification(score: number): string {\n  if (score >= 4.5) return \"Excellent logistics with optimal factory proximity, highway access, and staging capabilities.\";\n  if (score >= 4.0) return \"Good logistics setup with reasonable transportation routes and adequate staging space.\";\n  if (score >= 3.5) return \"Moderate logistics challenges with some transportation or staging constraints.\";\n  return \"Significant logistics obstacles requiring careful planning and coordination.\";\n}\n\nfunction getBuildTimeJustification(score: number, savings: number): string {\n  if (score >= 4.5) return `Excellent time savings of ${savings} months through parallel construction and factory efficiency.`;\n  if (score >= 4.0) return `Good time advantages with ${savings} months savings over traditional construction timeline.`;\n  if (score >= 3.5) return `Moderate time benefits with ${savings} months reduction in project schedule.`;\n  return \"Minimal time advantages over site-built construction methods.\";\n}\n","size_bytes":19331},"client/src/lib/scoring.ts":{"content":"// Shared scoring utilities for consistent score generation across components\n\n// Seeded random number generator (mulberry32) for deterministic score generation\nfunction mulberry32(seed: number) {\n  return function() {\n    let t = seed += 0x6D2B79F5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n  }\n}\n\n// Create a seed from project ID for consistent scores\nfunction createSeed(projectId: number): number {\n  return Math.abs(projectId * 31415927) % 2147483647;\n}\n\n// Sample project detection - centralized logic\nexport function isSampleProject(projectName: string): boolean {\n  const sampleProjectNames = [\"Serenity Village\", \"Mountain View Apartments\", \"University Housing Complex\", \"Workforce Commons\"];\n  return sampleProjectNames.includes(projectName);\n}\n\n// Generate deterministic random score for NEW projects\nexport function generateDeterministicScore(projectId: number): string {\n  const rng = mulberry32(createSeed(projectId));\n  return (rng() * 0.6 + 4.4).toFixed(1);\n}\n\n// Calculate feasibility scores for a project (deterministic for NEW projects)\nexport function calculateProjectScores(projectId: number, projectName: string, storedOverallScore?: string, projectData?: any) {\n  if (isSampleProject(projectName)) {\n    // Use stored scores from database if available, otherwise fallback to defaults\n    const individualScores = {\n      zoning: projectData?.zoningScore || \"4.0\",\n      massing: projectData?.massingScore || \"4.0\", \n      sustainability: projectData?.sustainabilityScore || \"4.0\",\n      cost: projectData?.costScore || \"4.0\",\n      logistics: projectData?.logisticsScore || \"4.0\",\n      buildTime: projectData?.buildTimeScore || \"4.0\"\n    };\n    \n    // Calculate weighted overall score from individual scores\n    const overall = ((parseFloat(individualScores.zoning) * 0.2) + \n                    (parseFloat(individualScores.massing) * 0.15) + \n                    (parseFloat(individualScores.sustainability) * 0.2) + \n                    (parseFloat(individualScores.cost) * 0.2) + \n                    (parseFloat(individualScores.logistics) * 0.15) + \n                    (parseFloat(individualScores.buildTime) * 0.1)).toFixed(1);\n    \n    return {\n      overall,\n      individual: individualScores\n    };\n  } else {\n    // Generate deterministic scores for NEW projects using seeded random\n    const rng = mulberry32(createSeed(projectId));\n    const scores = {\n      zoning: (rng() * 0.6 + 4.4).toFixed(1),\n      massing: (rng() * 0.6 + 4.4).toFixed(1),\n      sustainability: (rng() * 0.6 + 4.4).toFixed(1),\n      cost: (rng() * 0.6 + 4.4).toFixed(1),\n      logistics: (rng() * 0.6 + 4.4).toFixed(1),\n      buildTime: (rng() * 0.6 + 4.4).toFixed(1)\n    };\n    \n    // Calculate weighted overall score\n    const overall = ((parseFloat(scores.zoning) * 0.2) + \n                    (parseFloat(scores.massing) * 0.15) + \n                    (parseFloat(scores.sustainability) * 0.2) + \n                    (parseFloat(scores.cost) * 0.2) + \n                    (parseFloat(scores.logistics) * 0.15) + \n                    (parseFloat(scores.buildTime) * 0.1)).toFixed(1);\n    \n    return {\n      overall,\n      individual: scores\n    };\n  }\n}","size_bytes":3263},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/CreateProject.tsx":{"content":"import { useState } from \"react\";\nimport { useForm, useWatch } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { z } from \"zod\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Header from \"@/components/Header\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Label } from \"@/components/ui/label\";\nimport { ArrowLeft, MapPin } from \"lucide-react\";\nimport { insertProjectSchema } from \"@shared/schema\";\nimport ProjectSiteMap from \"@/components/ProjectSiteMap\";\n\n// Schema with proper numeric coercion\nconst numOpt = z.preprocess(v => {\n  if (v === '' || v == null || v === undefined) return undefined;\n  const num = Number(v);\n  return isNaN(num) ? undefined : num;\n}, z.number().min(0)).optional();\nconst numRequired = z.preprocess(v => {\n  if (v === '' || v == null || v === undefined) return 1;\n  const num = Number(v);\n  return isNaN(num) ? 1 : Math.max(1, num);\n}, z.number().min(1));\nconst adaPercent = z.preprocess(v => {\n  if (v === '' || v == null || v === undefined) return undefined;\n  const num = Number(v);\n  return isNaN(num) ? undefined : String(Math.min(100, Math.max(0, num)));\n}, z.string()).optional();\n\nconst createProjectSchema = insertProjectSchema.extend({\n  name: z.string().min(1, \"Project name is required\"),\n  address: z.string().min(1, \"Site address is required\"),\n  projectType: z.string().min(1, \"Project type is required\"),\n  targetFloors: numRequired,\n  targetParkingSpaces: numOpt,\n  factoryLocation: z.string().min(1, \"Factory location is required\"),\n  // Hotel/Hostel specific fields\n  queenUnits: numOpt,\n  kingUnits: numOpt,\n  oneBedUnits: numOpt,\n  adaPercent: adaPercent,\n  // Standard unit fields\n  studioUnits: numOpt,\n  twoBedUnits: numOpt,\n  threeBedUnits: numOpt,\n});\n\ntype CreateProjectForm = z.infer<typeof createProjectSchema>;\n\n// Form input type that accepts strings for numeric fields during input\ntype CreateProjectFormInput = Omit<CreateProjectForm, 'targetFloors' | 'studioUnits' | 'oneBedUnits' | 'twoBedUnits' | 'threeBedUnits' | 'queenUnits' | 'kingUnits' | 'adaPercent' | 'targetParkingSpaces'> & {\n  targetFloors: number;\n  factoryLocation: string;\n  studioUnits?: string | number;\n  oneBedUnits?: string | number;\n  twoBedUnits?: string | number;\n  threeBedUnits?: string | number;\n  queenUnits?: string | number;\n  kingUnits?: string | number;\n  adaPercent?: string | number;\n  targetParkingSpaces?: string | number;\n};\n\nexport default function CreateProject() {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const [mapTrigger, setMapTrigger] = useState(0); // Used to trigger map lookup\n\n  const form = useForm<CreateProjectFormInput>({\n    resolver: zodResolver(createProjectSchema),\n    shouldUnregister: true,\n    defaultValues: {\n      name: \"\",\n      address: \"\",\n      projectType: \"\",\n      targetFloors: 3,\n      factoryLocation: \"\",\n      studioUnits: \"\",\n      oneBedUnits: \"\",\n      twoBedUnits: \"\",\n      threeBedUnits: \"\",\n      queenUnits: \"\",\n      kingUnits: \"\",\n      adaPercent: \"\",\n      targetParkingSpaces: \"\",\n    },\n  });\n\n  const projectType = useWatch({ control: form.control, name: \"projectType\" });\n\n  const createProject = useMutation({\n    mutationFn: async (data: CreateProjectForm) => {\n      const response = await apiRequest(\"POST\", \"/api/projects\", data);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/projects\"] });\n      toast({\n        title: \"Project Created\",\n        description: \"Your project has been created and assessed for modular feasibility.\",\n      });\n      navigate(`/projects/${data.project.id}/workflow`);\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: \"Failed to create project. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: CreateProjectFormInput) => {\n    // Transform the data through our schema for proper validation and type conversion\n    const result = createProjectSchema.safeParse(data);\n    \n    if (result.success) {\n      createProject.mutate(result.data);\n    } else {\n      console.error(\"Validation errors:\", result.error.errors);\n      const errorMessages = result.error.errors.map(err => `${err.path.join('.')}: ${err.message}`).join('; ');\n      toast({\n        title: \"Validation Error\",\n        description: errorMessages || \"Please check your input values and try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleMapLookup = () => {\n    const address = form.getValues(\"address\");\n    if (address && address.trim()) {\n      setMapTrigger(prev => prev + 1); // Increment to trigger map update\n    } else {\n      toast({\n        title: \"Address Required\",\n        description: \"Please enter an address before looking up the location.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleAddressKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleMapLookup();\n    }\n  };\n\n  const projectTypes = [\n    { value: \"affordable\", label: \"Affordable Multifamily\" },\n    { value: \"senior\", label: \"Senior Living\" },\n    { value: \"workforce\", label: \"Workforce Housing\" },\n    { value: \"student\", label: \"Student Housing\" },\n    { value: \"hostel\", label: \"Hostel\" },\n    { value: \"hotel\", label: \"Hotel\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate(\"/\")}\n            className=\"text-raap-green hover:text-green-700 mb-4 p-0\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Dashboard\n          </Button>\n          <h2 className=\"text-2xl font-bold text-raap-dark mb-2\">Create New Project</h2>\n          <p className=\"text-gray-600\">Enter project details to assess modular construction feasibility</p>\n        </div>\n\n        <Card className=\"max-w-4xl\">\n          <CardHeader>\n            <CardTitle className=\"text-raap-dark\">Project Information</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n                {/* Basic Information */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-raap-dark mb-4\">Basic Information</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Project Name</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"Enter project name\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"address\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Site Address</FormLabel>\n                          <FormControl>\n                            <div className=\"flex gap-2\">\n                              <Input \n                                placeholder=\"Enter full address\" \n                                {...field} \n                                onKeyDown={handleAddressKeyDown}\n                                data-testid=\"input-address\"\n                              />\n                              <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={handleMapLookup}\n                                className=\"flex items-center gap-2 whitespace-nowrap\"\n                                data-testid=\"button-map-lookup\"\n                              >\n                                <MapPin className=\"h-4 w-4\" />\n                                Locate\n                              </Button>\n                            </div>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  \n                  {/* Site Preview Map */}\n                  <div className=\"mt-6\">\n                    <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Site Preview</h4>\n                    <ProjectSiteMap \n                      address={form.watch(\"address\") || \"\"}\n                      projectName={form.watch(\"name\") || \"Project Site\"}\n                      height=\"300px\"\n                      className=\"border rounded-lg\"\n                      trigger={mapTrigger}\n                    />\n                  </div>\n                </div>\n\n                {/* Project Type */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-raap-dark mb-4\">Project Type</h3>\n                  <FormField\n                    control={form.control}\n                    name=\"projectType\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormControl>\n                          <RadioGroup \n                            defaultValue={form.getValues(\"projectType\")}\n                            onValueChange={(value) => form.setValue(\"projectType\", value, { shouldDirty: true, shouldTouch: true })}\n                            className=\"grid grid-cols-2 md:grid-cols-3 gap-4\"\n                          >\n                            {projectTypes.map((type) => (\n                              <div key={type.value}>\n                                <RadioGroupItem\n                                  value={type.value}\n                                  id={type.value}\n                                  className=\"peer sr-only\"\n                                />\n                                <Label\n                                  htmlFor={type.value}\n                                  className=\"flex items-center p-4 border border-gray-300 rounded-lg cursor-pointer hover:border-raap-green transition-colors peer-data-[state=checked]:border-raap-green peer-data-[state=checked]:bg-raap-green peer-data-[state=checked]:text-white\"\n                                  onClick={() => form.setValue(\"projectType\", type.value, { shouldDirty: true, shouldTouch: true })}\n                                >\n                                  <span className=\"text-sm font-medium\">{type.label}</span>\n                                </Label>\n                              </div>\n                            ))}\n                          </RadioGroup>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                {/* Building Details */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-raap-dark mb-4\">Building Details</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"targetFloors\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Target # of Floors</FormLabel>\n                          <FormControl>\n                            <Select\n                              value={field.value?.toString()}\n                              onValueChange={(value) => field.onChange(parseInt(value))}\n                            >\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Select floors\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"1\">1 Floor</SelectItem>\n                                <SelectItem value=\"2\">2 Floors</SelectItem>\n                                <SelectItem value=\"3\">3 Floors</SelectItem>\n                                <SelectItem value=\"4\">4 Floors</SelectItem>\n                                <SelectItem value=\"5\">5 Floors</SelectItem>\n                                <SelectItem value=\"6\">6 Floors</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"targetParkingSpaces\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Target Parking Spaces</FormLabel>\n                          <FormControl>\n                            <Input\n                              type=\"number\"\n                              min=\"0\"\n                              value={field.value ?? \"\"}\n                              onChange={(e) => field.onChange(e.target.value)}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"factoryLocation\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Factory Location (City, ST)</FormLabel>\n                          <FormControl>\n                            <Input\n                              {...field}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                </div>\n\n                {/* Unit Mix */}\n                <div key={`mix-${projectType ?? 'none'}`}>\n                  <h3 className=\"text-lg font-semibold text-raap-dark mb-4\">\n                    {projectType === \"hostel\" || projectType === \"hotel\" ? \"Target Room Mix\" : \"Target Unit Mix\"}\n                  </h3>\n                  {projectType === \"hostel\" || projectType === \"hotel\" ? (\n                    // Hotel/Hostel Unit Mix\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"queenUnits\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Queen Rooms</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                value={field.value ?? \"\"}\n                                onChange={(e) => field.onChange(e.target.value)}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"kingUnits\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>King Rooms</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                value={field.value ?? \"\"}\n                                onChange={(e) => field.onChange(e.target.value)}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"oneBedUnits\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>One Bedroom</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                value={field.value ?? \"\"}\n                                onChange={(e) => field.onChange(e.target.value)}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"adaPercent\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>% ADA</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                max=\"100\"\n                                step=\"0.1\"\n                                value={field.value ?? \"\"}\n                                onChange={(e) => field.onChange(e.target.value)}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n                  ) : (\n                    // Traditional Multifamily Unit Mix\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"studioUnits\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Studio Units</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                value={field.value ?? \"\"}\n                                onChange={(e) => field.onChange(e.target.value)}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"oneBedUnits\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>1 Bedroom Units</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                value={field.value ?? \"\"}\n                                onChange={(e) => field.onChange(e.target.value)}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"twoBedUnits\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>2 Bedroom Units</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                value={field.value ?? \"\"}\n                                onChange={(e) => field.onChange(e.target.value)}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"threeBedUnits\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>3 Bedroom Units</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                value={field.value ?? \"\"}\n                                onChange={(e) => field.onChange(e.target.value)}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"flex justify-end space-x-4 pt-6\">\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    onClick={() => navigate(\"/\")}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    className=\"bg-raap-green hover:bg-green-700\"\n                    disabled={createProject.isPending}\n                  >\n                    {createProject.isPending ? \"Creating...\" : \"Create Project & Assess Feasibility\"}\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}\n","size_bytes":23085},"client/src/pages/Dashboard.tsx":{"content":"import { useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Header from \"@/components/Header\";\nimport ProjectCard from \"@/components/ProjectCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Building, Plus } from \"lucide-react\";\nimport type { Project } from \"@shared/schema\";\n\nexport default function Dashboard() {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n\n  const { data: projects, isLoading, error } = useQuery<Project[]>({\n    queryKey: [\"/api/projects\"],\n  });\n\n  // Handle authentication errors\n  if (error && isUnauthorizedError(error)) {\n    toast({\n      title: \"Unauthorized\", \n      description: \"You are logged out. Logging in again...\",\n      variant: \"destructive\",\n    });\n    setTimeout(() => {\n      window.location.href = \"/api/login\";\n    }, 500);\n  }\n\n  const initializeSampleProjects = useMutation({\n    mutationFn: async () => {\n      await apiRequest(\"POST\", \"/api/initialize-sample-projects\");\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/projects\"] });\n      toast({\n        title: \"Sample Projects Created\",\n        description: \"Four sample projects have been added to your dashboard.\",\n      });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n      }\n    },\n  });\n\n  // Initialize sample projects for new users\n  useEffect(() => {\n    if (projects && (projects as Project[]).length === 0) {\n      initializeSampleProjects.mutate();\n    }\n  }, [projects]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse space-y-8\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"h-32 bg-gray-200 rounded-lg\"></div>\n              ))}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  const projectsData = (projects as Project[]) || [];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <h2 className=\"text-2xl font-bold text-raap-dark mb-2\">Project Dashboard</h2>\n          <p className=\"text-gray-600\">Complete workflow system for modular construction development</p>\n        </div>\n\n\n\n        {/* Projects List */}\n        <Card>\n          <CardHeader>\n            <div className=\"flex justify-between items-center\">\n              <CardTitle className=\"text-raap-dark\">Your Projects</CardTitle>\n              <Button \n                onClick={() => navigate(\"/create-project\")}\n                className=\"bg-raap-green hover:bg-green-700\"\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                New Project\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            {projectsData.length === 0 ? (\n              <div className=\"p-8 text-center text-gray-500\">\n                <Building className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                <p>No projects yet. Create your first project to get started.</p>\n              </div>\n            ) : (\n              <div className=\"divide-y divide-gray-200\">\n                {projectsData.map((project: Project) => (\n                  <ProjectCard key={project.id} project={project} />\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}\n","size_bytes":4258},"client/src/pages/EasyDesign.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useRoute, Link, useLocation } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { FileText, Building, Users, Wrench, Clock, CheckCircle, AlertCircle, Upload, Download, ArrowLeft } from \"lucide-react\";\nimport type {\n  Project,\n  DesignDocument,\n  MaterialSpecification,\n  DoorScheduleItem,\n  DesignWorkflow,\n  EngineeringDetail\n} from \"@shared/schema\";\n\nfunction EasyDesign() {\n  const [match, params] = useRoute(\"/projects/:id/easy-design\");\n  const [activeTab, setActiveTab] = useState(\"prototype\");\n  const queryClient = useQueryClient();\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n\n  // Fetch project data\n  const { data: project, isLoading: projectLoading } = useQuery<Project>({\n    queryKey: [\"/api/projects\", params?.id],\n    enabled: !!params?.id,\n  });\n\n  // Fetch design data\n  const { data: designDocuments = [] } = useQuery<DesignDocument[]>({\n    queryKey: [\"/api/projects\", params?.id, \"design-documents\"],\n    enabled: !!params?.id,\n  });\n\n  const { data: materialSpecs = [] } = useQuery<MaterialSpecification[]>({\n    queryKey: [\"/api/projects\", params?.id, \"material-specifications\"],\n    enabled: !!params?.id,\n  });\n\n  const { data: doorSchedule = [] } = useQuery<DoorScheduleItem[]>({\n    queryKey: [\"/api/projects\", params?.id, \"door-schedule\"],\n    enabled: !!params?.id,\n  });\n\n  const { data: workflows = [] } = useQuery<DesignWorkflow[]>({\n    queryKey: [\"/api/projects\", params?.id, \"design-workflows\"],\n    enabled: !!params?.id,\n  });\n\n  const { data: engineeringDetails = [] } = useQuery<EngineeringDetail[]>({\n    queryKey: [\"/api/projects\", params?.id, \"engineering-details\"],\n    enabled: !!params?.id,\n  });\n\n  // Complete workflow mutation\n  const markAsComplete = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"PATCH\", `/api/projects/${params?.id}`, {\n        easyDesignComplete: true\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/projects\", params?.id] });\n      toast({\n        title: \"EasyDesign Complete\",\n        description: \"Your design workflow is complete. All design components have been finalized.\",\n      });\n      navigate(`/projects/${params?.id}/workflow`);\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to complete the workflow. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (projectLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading EasyDesign...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <Card>\n          <CardContent className=\"p-8 text-center\">\n            <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n            <h2 className=\"text-xl font-semibold mb-2\">Project Not Found</h2>\n            <p className=\"text-gray-600\">The project you're looking for doesn't exist.</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        {/* Back to Workflow Link */}\n        <div className=\"mb-4\">\n          <Link \n            href={`/projects/${params?.id}/workflow`}\n            className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 font-medium\"\n            data-testid=\"link-back-workflow\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            Back to Workflow\n          </Link>\n        </div>\n        \n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n          EasyDesign - {project.name}\n        </h1>\n        <p className=\"text-lg text-gray-600 mb-4\">\n          Detailed design prototypes and comprehensive workflow coordination\n        </p>\n        <div className=\"flex items-center gap-4 mb-6\">\n          <Badge variant=\"outline\" className=\"px-3 py-1\">\n            <Building className=\"h-4 w-4 mr-2\" />\n            {project.projectType} housing\n          </Badge>\n          <Badge variant=\"outline\" className=\"px-3 py-1\">\n            <Users className=\"h-4 w-4 mr-2\" />\n            {(project.studioUnits || 0) + (project.oneBedUnits || 0) + (project.twoBedUnits || 0) + (project.threeBedUnits || 0)} units\n          </Badge>\n          <Badge variant=\"outline\" className=\"px-3 py-1\">\n            <CheckCircle className=\"h-4 w-4 mr-2\" />\n            Design Phase\n          </Badge>\n        </div>\n        \n        {/* Progress Overview */}\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Design Progress Overview</CardTitle>\n            <CardDescription>\n              Track progress across all design components and stakeholder workflows\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600 mb-1\">80%</div>\n                <div className=\"text-sm text-gray-600\">Factory Permit Ready</div>\n                <Progress value={80} className=\"mt-2\" />\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-amber-600 mb-1\">60%</div>\n                <div className=\"text-sm text-gray-600\">AHJ Permit Ready</div>\n                <Progress value={60} className=\"mt-2\" />\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600 mb-1\">{workflows.length}</div>\n                <div className=\"text-sm text-gray-600\">Active Workflows</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600 mb-1\">{designDocuments.length}</div>\n                <div className=\"text-sm text-gray-600\">Design Documents</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4 mb-6\">\n          <TabsTrigger value=\"prototype\" className=\"flex items-center gap-2\">\n            <Building className=\"h-4 w-4\" />\n            Design Prototype\n          </TabsTrigger>\n          <TabsTrigger value=\"aor\" className=\"flex items-center gap-2\">\n            <FileText className=\"h-4 w-4\" />\n            AOR Workflows\n          </TabsTrigger>\n          <TabsTrigger value=\"fabricator\" className=\"flex items-center gap-2\">\n            <Wrench className=\"h-4 w-4\" />\n            Fabricator Workflows\n          </TabsTrigger>\n          <TabsTrigger value=\"gc-trades\" className=\"flex items-center gap-2\">\n            <Users className=\"h-4 w-4\" />\n            GC/Trades Workflows\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Design Prototype Tab */}\n        <TabsContent value=\"prototype\" className=\"space-y-6\">\n          <DesignPrototypeSection \n            project={project}\n            designDocuments={designDocuments}\n            materialSpecs={materialSpecs}\n            doorSchedule={doorSchedule}\n            engineeringDetails={engineeringDetails}\n          />\n        </TabsContent>\n\n        {/* AOR Workflows Tab */}\n        <TabsContent value=\"aor\" className=\"space-y-6\">\n          <AORWorkflowsSection \n            project={project}\n            workflows={workflows.filter(w => w.workflowType === 'aor')}\n          />\n        </TabsContent>\n\n        {/* Fabricator Workflows Tab */}\n        <TabsContent value=\"fabricator\" className=\"space-y-6\">\n          <FabricatorWorkflowsSection \n            project={project}\n            workflows={workflows.filter(w => w.workflowType === 'fabricator')}\n          />\n        </TabsContent>\n\n        {/* GC/Trades Workflows Tab */}\n        <TabsContent value=\"gc-trades\" className=\"space-y-6\">\n          <GCTradesWorkflowsSection \n            project={project}\n            workflows={workflows.filter(w => w.workflowType === 'gc')}\n          />\n        </TabsContent>\n      </Tabs>\n\n      {/* Complete Workflow Button */}\n      {!project.easyDesignComplete && (\n        <Card className=\"mt-8\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"font-semibold text-gray-900 mb-1\">Complete EasyDesign Workflow</h3>\n                <p className=\"text-gray-600\">\n                  Finalize all design components and mark this workflow as complete to proceed with your project.\n                </p>\n              </div>\n              <Button\n                onClick={() => markAsComplete.mutate()}\n                disabled={markAsComplete.isPending}\n                className=\"bg-green-600 hover:bg-green-700 text-white\"\n                data-testid=\"button-complete-workflow\"\n              >\n                {markAsComplete.isPending ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Completing...\n                  </>\n                ) : (\n                  <>\n                    <CheckCircle className=\"h-4 w-4 mr-2\" />\n                    Complete Workflow\n                  </>\n                )}\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n\n// Design Prototype Section Component\nfunction DesignPrototypeSection({ \n  project, \n  designDocuments, \n  materialSpecs, \n  doorSchedule, \n  engineeringDetails \n}: {\n  project: Project;\n  designDocuments: DesignDocument[];\n  materialSpecs: MaterialSpecification[];\n  doorSchedule: DoorScheduleItem[];\n  engineeringDetails: EngineeringDetail[];\n}) {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      {/* Room Designs */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Building className=\"h-5 w-5\" />\n            Room Designs & Layouts\n          </CardTitle>\n          <CardDescription>\n            Detailed room configurations with optimized layouts for factory production\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold text-blue-800\">Studio Units</h4>\n                <p className=\"text-2xl font-bold text-blue-600\">{project.studioUnits || 0}</p>\n                <p className=\"text-sm text-blue-600\">450-500 sq ft layouts</p>\n              </div>\n              <div className=\"bg-green-50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold text-green-800\">1-Bedroom</h4>\n                <p className=\"text-2xl font-bold text-green-600\">{project.oneBedUnits || 0}</p>\n                <p className=\"text-sm text-green-600\">650-750 sq ft layouts</p>\n              </div>\n              <div className=\"bg-amber-50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold text-amber-800\">2-Bedroom</h4>\n                <p className=\"text-2xl font-bold text-amber-600\">{project.twoBedUnits || 0}</p>\n                <p className=\"text-sm text-amber-600\">900-1100 sq ft layouts</p>\n              </div>\n              <div className=\"bg-purple-50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold text-purple-800\">3-Bedroom</h4>\n                <p className=\"text-2xl font-bold text-purple-600\">{project.threeBedUnits || 0}</p>\n                <p className=\"text-sm text-purple-600\">1200-1400 sq ft layouts</p>\n              </div>\n            </div>\n            <Button className=\"w-full\">\n              <Upload className=\"h-4 w-4 mr-2\" />\n              Upload Room Design Files\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Materials & Finishes */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Wrench className=\"h-5 w-5\" />\n            Materials & Finishes\n          </CardTitle>\n          <CardDescription>\n            Comprehensive material specifications for all room types and common areas\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {materialSpecs.length > 0 ? (\n              <div className=\"space-y-3\">\n                {materialSpecs.slice(0, 3).map((spec, index) => (\n                  <div key={index} className=\"border rounded-lg p-3\">\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <h4 className=\"font-medium\">{spec.roomType}</h4>\n                        <p className=\"text-sm text-gray-600\">{spec.materialCategory}</p>\n                      </div>\n                      <Badge variant=\"outline\">Pending Review</Badge>\n                    </div>\n                    <p className=\"text-sm mt-1\">{spec.specifications}</p>\n                  </div>\n                ))}\n                {materialSpecs.length > 3 && (\n                  <p className=\"text-sm text-gray-600 text-center\">\n                    +{materialSpecs.length - 3} more specifications\n                  </p>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-6 text-gray-500\">\n                <Wrench className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                <p>No material specifications yet</p>\n              </div>\n            )}\n            <Button className=\"w-full\" variant=\"outline\">\n              <FileText className=\"h-4 w-4 mr-2\" />\n              Manage Material Specifications\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Door & Hardware Schedule */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <FileText className=\"h-5 w-5\" />\n            Door & Hardware Schedule\n          </CardTitle>\n          <CardDescription>\n            Complete door schedule with hardware specifications and installation details\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {doorSchedule.length > 0 ? (\n              <div className=\"space-y-2\">\n                {doorSchedule.slice(0, 4).map((door, index) => (\n                  <div key={index} className=\"flex justify-between items-center py-2 border-b\">\n                    <div>\n                      <span className=\"font-medium\">{door.doorNumber}</span>\n                      <span className=\"text-sm text-gray-600 ml-2\">{door.doorType}</span>\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      {door.width}\" x {door.height}\"\n                    </div>\n                  </div>\n                ))}\n                {doorSchedule.length > 4 && (\n                  <p className=\"text-sm text-gray-600 text-center\">\n                    +{doorSchedule.length - 4} more doors\n                  </p>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-6 text-gray-500\">\n                <FileText className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                <p>No door schedule items yet</p>\n              </div>\n            )}\n            <Button className=\"w-full\" variant=\"outline\">\n              <FileText className=\"h-4 w-4 mr-2\" />\n              Edit Door Schedule\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* MEP & Structural Details */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Wrench className=\"h-5 w-5\" />\n            MEP & Structural Details\n          </CardTitle>\n          <CardDescription>\n            Engineering details for mechanical, electrical, plumbing, and structural systems\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {engineeringDetails.length > 0 ? (\n              <div className=\"space-y-3\">\n                {engineeringDetails.slice(0, 3).map((detail, index) => (\n                  <div key={index} className=\"border rounded-lg p-3\">\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <h4 className=\"font-medium\">{detail.system}</h4>\n                        <p className=\"text-sm text-gray-600\">{detail.detailType}</p>\n                      </div>\n                      <Badge variant=\"secondary\">\n                        Review Required\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm mt-1\">{detail.description}</p>\n                  </div>\n                ))}\n                {engineeringDetails.length > 3 && (\n                  <p className=\"text-sm text-gray-600 text-center\">\n                    +{engineeringDetails.length - 3} more details\n                  </p>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-6 text-gray-500\">\n                <Wrench className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                <p>No engineering details yet</p>\n              </div>\n            )}\n            <Button className=\"w-full\" variant=\"outline\">\n              <Wrench className=\"h-4 w-4 mr-2\" />\n              Manage Engineering Details\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n// AOR Workflows Section Component\nfunction AORWorkflowsSection({ project, workflows }: { project: Project; workflows: DesignWorkflow[] }) {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      {/* Revit Libraries */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <FileText className=\"h-5 w-5\" />\n            Revit Libraries & BIM Models\n          </CardTitle>\n          <CardDescription>\n            Standardized Revit families and BIM components for modular construction\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                <h4 className=\"font-semibold text-blue-800 mb-2\">Wall Systems</h4>\n                <p className=\"text-lg font-bold text-blue-600\">12</p>\n                <p className=\"text-xs text-blue-600\">Revit families</p>\n              </div>\n              <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                <h4 className=\"font-semibold text-green-800 mb-2\">MEP Components</h4>\n                <p className=\"text-lg font-bold text-green-600\">28</p>\n                <p className=\"text-xs text-green-600\">Revit families</p>\n              </div>\n            </div>\n            <Button className=\"w-full\">\n              <Download className=\"h-4 w-4 mr-2\" />\n              Download Revit Library Package\n            </Button>\n            <Button className=\"w-full\" variant=\"outline\">\n              <Upload className=\"h-4 w-4 mr-2\" />\n              Upload Custom Components\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Design Files & Documentation */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Building className=\"h-5 w-5\" />\n            Design Files & Documentation\n          </CardTitle>\n          <CardDescription>\n            Architectural drawings, specifications, and project documentation\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FileText className=\"h-4 w-4 text-blue-600\" />\n                  <span className=\"font-medium\">Architectural Plans.rvt</span>\n                </div>\n                <Badge variant=\"outline\">Current</Badge>\n              </div>\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FileText className=\"h-4 w-4 text-green-600\" />\n                  <span className=\"font-medium\">Design Specifications.pdf</span>\n                </div>\n                <Badge variant=\"secondary\">v2.1</Badge>\n              </div>\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FileText className=\"h-4 w-4 text-amber-600\" />\n                  <span className=\"font-medium\">Module Connections.dwg</span>\n                </div>\n                <Badge variant=\"outline\">Draft</Badge>\n              </div>\n            </div>\n            <Button className=\"w-full\" variant=\"outline\">\n              <Upload className=\"h-4 w-4 mr-2\" />\n              Upload Design Files\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Scope Clarification Workflows */}\n      <Card className=\"lg:col-span-2\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Users className=\"h-5 w-5\" />\n            Scope Clarification & AOR Coordination\n          </CardTitle>\n          <CardDescription>\n            Active workflows for scope clarification, design reviews, and AOR coordination tasks\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {workflows.length > 0 ? (\n              workflows.map((workflow, index) => (\n                <div key={index} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h4 className=\"font-semibold\">{workflow.taskName}</h4>\n                      <p className=\"text-sm text-gray-600\">{workflow.description}</p>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant={workflow.status === 'completed' ? 'default' : \n                                   workflow.status === 'in_progress' ? 'secondary' : 'outline'}>\n                        {workflow.status?.replace('_', ' ') || 'pending'}\n                      </Badge>\n                      <Badge variant={workflow.priority === 'high' ? 'destructive' : \n                                   workflow.priority === 'medium' ? 'default' : 'secondary'}>\n                        {workflow.priority}\n                      </Badge>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                    <span className=\"flex items-center gap-1\">\n                      <Clock className=\"h-4 w-4\" />\n                      Due: {workflow.dueDate ? new Date(workflow.dueDate).toLocaleDateString() : 'TBD'}\n                    </span>\n                    <span>Assigned to: {workflow.assignedTo || 'Unassigned'}</span>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                <Users className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <h3 className=\"font-medium mb-2\">No AOR Workflows Yet</h3>\n                <p className=\"text-sm mb-4\">Create workflows to coordinate with your Architect of Record</p>\n                <Button>\n                  <Users className=\"h-4 w-4 mr-2\" />\n                  Create AOR Workflow\n                </Button>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n// Fabricator Workflows Section Component\nfunction FabricatorWorkflowsSection({ project, workflows }: { project: Project; workflows: DesignWorkflow[] }) {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      {/* Shop Drawings Coordination */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Wrench className=\"h-5 w-5\" />\n            Shop Drawings Coordination\n          </CardTitle>\n          <CardDescription>\n            Coordinate shop drawings development and approval with fabrication partners\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-amber-50 p-4 rounded-lg text-center\">\n                <h4 className=\"font-semibold text-amber-800 mb-2\">In Progress</h4>\n                <p className=\"text-2xl font-bold text-amber-600\">3</p>\n                <p className=\"text-xs text-amber-600\">Shop drawing sets</p>\n              </div>\n              <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                <h4 className=\"font-semibold text-green-800 mb-2\">Approved</h4>\n                <p className=\"text-2xl font-bold text-green-600\">8</p>\n                <p className=\"text-xs text-green-600\">Shop drawing sets</p>\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <span className=\"font-medium\">Bathroom Module - SD-001</span>\n                <Badge variant=\"default\">Approved</Badge>\n              </div>\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <span className=\"font-medium\">Kitchen Module - SD-002</span>\n                <Badge variant=\"secondary\">Under Review</Badge>\n              </div>\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <span className=\"font-medium\">MEP Connections - SD-003</span>\n                <Badge variant=\"outline\">Pending</Badge>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Material Schedules & Production */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Building className=\"h-5 w-5\" />\n            Material Schedules & Production\n          </CardTitle>\n          <CardDescription>\n            Material procurement schedules and production timeline coordination\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"space-y-3\">\n              <div className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <h4 className=\"font-medium\">Lumber & Framing</h4>\n                  <Badge variant=\"default\">Ordered</Badge>\n                </div>\n                <div className=\"flex justify-between text-sm text-gray-600\">\n                  <span>Delivery: Feb 15, 2024</span>\n                  <span>Lead time: 2 weeks</span>\n                </div>\n              </div>\n              <div className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <h4 className=\"font-medium\">MEP Components</h4>\n                  <Badge variant=\"secondary\">Sourcing</Badge>\n                </div>\n                <div className=\"flex justify-between text-sm text-gray-600\">\n                  <span>Est. Delivery: Feb 28, 2024</span>\n                  <span>Lead time: 4 weeks</span>\n                </div>\n              </div>\n              <div className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <h4 className=\"font-medium\">Finish Materials</h4>\n                  <Badge variant=\"outline\">Pending</Badge>\n                </div>\n                <div className=\"flex justify-between text-sm text-gray-600\">\n                  <span>Est. Delivery: Mar 10, 2024</span>\n                  <span>Lead time: 6 weeks</span>\n                </div>\n              </div>\n            </div>\n            <Button className=\"w-full\" variant=\"outline\">\n              <FileText className=\"h-4 w-4 mr-2\" />\n              Update Material Schedule\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Active Fabricator Workflows */}\n      <Card className=\"lg:col-span-2\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Wrench className=\"h-5 w-5\" />\n            Active Fabricator Workflows\n          </CardTitle>\n          <CardDescription>\n            Coordinate production schedules, quality control, and delivery logistics with fabricators\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {workflows.length > 0 ? (\n              workflows.map((workflow, index) => (\n                <div key={index} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h4 className=\"font-semibold\">{workflow.taskName}</h4>\n                      <p className=\"text-sm text-gray-600\">{workflow.description}</p>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant={workflow.status === 'completed' ? 'default' : \n                                   workflow.status === 'in_progress' ? 'secondary' : 'outline'}>\n                        {workflow.status?.replace('_', ' ') || 'pending'}\n                      </Badge>\n                      <Badge variant={workflow.priority === 'high' ? 'destructive' : \n                                   workflow.priority === 'medium' ? 'default' : 'secondary'}>\n                        {workflow.priority}\n                      </Badge>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                    <span className=\"flex items-center gap-1\">\n                      <Clock className=\"h-4 w-4\" />\n                      Due: {workflow.dueDate ? new Date(workflow.dueDate).toLocaleDateString() : 'TBD'}\n                    </span>\n                    <span>Assigned to: {workflow.assignedTo || 'Unassigned'}</span>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                <Wrench className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <h3 className=\"font-medium mb-2\">No Fabricator Workflows Yet</h3>\n                <p className=\"text-sm mb-4\">Create workflows to coordinate with your fabrication partners</p>\n                <Button>\n                  <Wrench className=\"h-4 w-4 mr-2\" />\n                  Create Fabricator Workflow\n                </Button>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n// GC/Trades Workflows Section Component\nfunction GCTradesWorkflowsSection({ project, workflows }: { project: Project; workflows: DesignWorkflow[] }) {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      {/* Trade-Specific File Packages */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Users className=\"h-5 w-5\" />\n            Trade-Specific File Packages\n          </CardTitle>\n          <CardDescription>\n            Customized documentation packages for different trades and on-site requirements\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"space-y-3\">\n              <div className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <h4 className=\"font-medium\">Electrical Trade Package</h4>\n                  <Badge variant=\"default\">Ready</Badge>\n                </div>\n                <p className=\"text-sm text-gray-600 mb-2\">Module wiring diagrams, junction details, panel schedules</p>\n                <Button size=\"sm\" variant=\"outline\">\n                  <Download className=\"h-4 w-4 mr-1\" />\n                  Download\n                </Button>\n              </div>\n              <div className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <h4 className=\"font-medium\">Plumbing Trade Package</h4>\n                  <Badge variant=\"secondary\">In Progress</Badge>\n                </div>\n                <p className=\"text-sm text-gray-600 mb-2\">Rough-in plans, fixture schedules, connection details</p>\n                <Button size=\"sm\" variant=\"outline\" disabled>\n                  <Clock className=\"h-4 w-4 mr-1\" />\n                  Pending\n                </Button>\n              </div>\n              <div className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <h4 className=\"font-medium\">HVAC Trade Package</h4>\n                  <Badge variant=\"default\">Ready</Badge>\n                </div>\n                <p className=\"text-sm text-gray-600 mb-2\">Ductwork layouts, equipment specs, installation guides</p>\n                <Button size=\"sm\" variant=\"outline\">\n                  <Download className=\"h-4 w-4 mr-1\" />\n                  Download\n                </Button>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Product Sheets & Documentation */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <FileText className=\"h-5 w-5\" />\n            Product Sheets & Documentation\n          </CardTitle>\n          <CardDescription>\n            Technical specifications, installation guides, and product documentation\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FileText className=\"h-4 w-4 text-blue-600\" />\n                  <span className=\"font-medium\">Window Installation Guide.pdf</span>\n                </div>\n                <Button size=\"sm\" variant=\"outline\">\n                  <Download className=\"h-4 w-4\" />\n                </Button>\n              </div>\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FileText className=\"h-4 w-4 text-green-600\" />\n                  <span className=\"font-medium\">MEP Connection Specs.pdf</span>\n                </div>\n                <Button size=\"sm\" variant=\"outline\">\n                  <Download className=\"h-4 w-4\" />\n                </Button>\n              </div>\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FileText className=\"h-4 w-4 text-amber-600\" />\n                  <span className=\"font-medium\">Assembly Instructions.pdf</span>\n                </div>\n                <Button size=\"sm\" variant=\"outline\">\n                  <Download className=\"h-4 w-4\" />\n                </Button>\n              </div>\n              <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FileText className=\"h-4 w-4 text-purple-600\" />\n                  <span className=\"font-medium\">Quality Control Checklist.pdf</span>\n                </div>\n                <Button size=\"sm\" variant=\"outline\">\n                  <Download className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n            <Button className=\"w-full\" variant=\"outline\">\n              <Upload className=\"h-4 w-4 mr-2\" />\n              Upload Additional Documentation\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* GC/Trades Coordination Workflows */}\n      <Card className=\"lg:col-span-2\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Users className=\"h-5 w-5\" />\n            GC/Trades Coordination Workflows\n          </CardTitle>\n          <CardDescription>\n            Coordinate on-site work requirements, sequencing, and quality control with general contractors and trades\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {workflows.length > 0 ? (\n              workflows.map((workflow, index) => (\n                <div key={index} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h4 className=\"font-semibold\">{workflow.taskName}</h4>\n                      <p className=\"text-sm text-gray-600\">{workflow.description}</p>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant={workflow.status === 'completed' ? 'default' : \n                                   workflow.status === 'in_progress' ? 'secondary' : 'outline'}>\n                        {workflow.status?.replace('_', ' ') || 'pending'}\n                      </Badge>\n                      <Badge variant={workflow.priority === 'high' ? 'destructive' : \n                                   workflow.priority === 'medium' ? 'default' : 'secondary'}>\n                        {workflow.priority}\n                      </Badge>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                    <span className=\"flex items-center gap-1\">\n                      <Clock className=\"h-4 w-4\" />\n                      Due: {workflow.dueDate ? new Date(workflow.dueDate).toLocaleDateString() : 'TBD'}\n                    </span>\n                    <span>Assigned to: {workflow.assignedTo || 'Unassigned'}</span>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                <Users className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <h3 className=\"font-medium mb-2\">No GC/Trades Workflows Yet</h3>\n                <p className=\"text-sm mb-4\">Create workflows to coordinate with general contractors and trades</p>\n                <Button>\n                  <Users className=\"h-4 w-4 mr-2\" />\n                  Create GC/Trades Workflow\n                </Button>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default EasyDesign;","size_bytes":39981},"client/src/pages/FabAssure.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Header from \"@/components/Header\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { \n  ArrowLeft, \n  ArrowRight,\n  MapPin, \n  Search,\n  Building,\n  Users,\n  Truck,\n  Shield,\n  CheckCircle,\n  Star,\n  Phone,\n  Mail,\n  Globe,\n  Calendar,\n  AlertCircle,\n  Factory,\n  FileText,\n  DollarSign,\n  TrendingUp,\n  Award,\n  Settings\n} from \"lucide-react\";\nimport GoogleMaps from \"@/components/GoogleMaps\";\nimport type { Project, Partner } from \"@shared/schema\";\n\nexport default function FabAssure() {\n  const [, params] = useRoute(\"/projects/:id/fab-assure\");\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const projectId = params?.id;\n  const [activeTab, setActiveTab] = useState(\"identify\");\n  const [selectedPartnerTab, setSelectedPartnerTab] = useState(\"fabricator\");\n  const [selectedPartner, setSelectedPartner] = useState<Partner | null>(null);\n\n  const { data: project, isLoading, error } = useQuery<Project>({\n    queryKey: [\"/api/projects\", projectId],\n    enabled: !!projectId,\n  });\n\n  const { data: allPartners = [] } = useQuery<Partner[]>({\n    queryKey: [\"/api/partners\"],\n    enabled: !!projectId,\n  });\n\n  // Get partners by type for the selected tab\n  const getPartnersByType = (type: string) => {\n    return allPartners.filter(partner => partner.partnerType === type);\n  };\n\n  const currentTabPartners = getPartnersByType(selectedPartnerTab);\n\n  // Handle authentication errors\n  if (error && isUnauthorizedError(error)) {\n    toast({\n      title: \"Unauthorized\",\n      description: \"You are logged out. Logging in again...\",\n      variant: \"destructive\",\n    });\n    setTimeout(() => {\n      window.location.href = \"/api/login\";\n    }, 500);\n  }\n\n  const markAsComplete = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"PATCH\", `/api/projects/${projectId}`, {\n        fabAssureComplete: true\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n      toast({\n        title: \"FabAssure Complete\",\n        description: \"Your partner identification, evaluation, and contracting process is complete. You can now proceed to EasyDesign.\",\n      });\n      navigate(`/projects/${projectId}/workflow`);\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n      }\n    },\n  });\n\n  const seedPartners = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"POST\", \"/api/seed-partners\", {});\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/partners\"] });\n      toast({\n        title: \"Partners Seeded\",\n        description: \"Sample partners have been added to the marketplace.\",\n      });\n    },\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse space-y-8\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"h-64 bg-gray-200 rounded-lg\"></div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"h-48 bg-gray-200 rounded-lg\"></div>\n              ))}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Project not found</h2>\n            <Button onClick={() => navigate(\"/\")} className=\"mt-4\">\n              Back to Dashboard\n            </Button>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  // Check if user can access this application\n  if (!project.smartStartComplete) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"h-12 w-12 mx-auto mb-4 text-orange-500\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Complete SmartStart First</h2>\n            <p className=\"text-gray-600 mb-4\">\n              You need to complete the SmartStart application before accessing FabAssure.\n            </p>\n            <Button onClick={() => navigate(`/projects/${projectId}/workflow`)} className=\"mr-2\">\n              Back to Workflow\n            </Button>\n            <Button \n              onClick={() => navigate(`/projects/${projectId}/smart-start`)}\n              className=\"bg-raap-green hover:bg-green-700\"\n            >\n              Complete SmartStart\n            </Button>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  const partnerTypes = [\n    { value: \"fabricator\", label: \"Fabricators\", icon: Factory },\n    { value: \"gc\", label: \"General Contractors\", icon: Building },\n    { value: \"aor\", label: \"Architects of Record\", icon: FileText },\n    { value: \"consultant\", label: \"Consultants\", icon: Users },\n    { value: \"transportation\", label: \"Transportation\", icon: Truck },\n    { value: \"engineering\", label: \"Engineering\", icon: Settings },\n  ];\n\n  const getPartnerTypeIcon = (type: string) => {\n    const partnerType = partnerTypes.find(pt => pt.value === type);\n    return partnerType ? partnerType.icon : Building;\n  };\n\n  const getPartnerTypeLabel = (type: string) => {\n    const partnerType = partnerTypes.find(pt => pt.value === type);\n    return partnerType ? partnerType.label : type;\n  };\n\n  const getPartnerTypeColor = (type: string) => {\n    const colors = {\n      fabricator: 'text-amber-500',\n      gc: 'text-emerald-600',\n      aor: 'text-blue-600',\n      consultant: 'text-violet-600',\n      transportation: 'text-yellow-600',\n      engineering: 'text-gray-600',\n    };\n    return colors[type as keyof typeof colors] || 'text-gray-600';\n  };\n\n  // Generate map locations for Google Maps\n  const getMapLocations = () => {\n    const locations = [];\n    \n    // Add project location (Serenity Village)\n    locations.push({\n      lat: 39.0825,\n      lng: -121.5644,\n      title: project?.name || 'Serenity Village',\n      type: 'project' as const,\n      info: project?.address || '5224 Chestnut Road, Olivehurst CA'\n    });\n\n    // Add all partner locations to map regardless of selected tab\n    allPartners.forEach(partner => {\n      if (partner.latitude && partner.longitude) {\n        locations.push({\n          lat: parseFloat(partner.latitude),\n          lng: parseFloat(partner.longitude),\n          title: partner.name,\n          type: partner.partnerType as any,\n          info: `${partner.location} • ${partner.totalProjects} projects • ${partner.rating}★`\n        });\n      }\n    });\n\n    return locations;\n  };\n\n\n  const renderPartnerCard = (partner: Partner) => {\n    const Icon = getPartnerTypeIcon(partner.partnerType);\n    return (\n      <Card \n        key={partner.id} \n        className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n        onClick={() => setSelectedPartner(partner)}\n        data-testid={`card-partner-${partner.id}`}\n      >\n        <CardHeader className=\"pb-2\">\n          <div className=\"flex items-start justify-between\">\n            <div>\n              <CardTitle className=\"text-lg\">{partner.name}</CardTitle>\n              <div className=\"flex items-center text-sm text-gray-600 mt-1\">\n                <MapPin className=\"h-4 w-4 mr-1\" />\n                {partner.location}\n              </div>\n            </div>\n            <Icon className=\"h-6 w-6 text-blue-600\" />\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-gray-600\">Established</span>\n              <span className=\"font-medium\">{partner.yearEstablished}</span>\n            </div>\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-gray-600\">Focus</span>\n              <Badge variant=\"secondary\">{partner.buildingTypeFocus}</Badge>\n            </div>\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-gray-600\">Rating</span>\n              <div className=\"flex items-center\">\n                <Star className=\"h-4 w-4 text-yellow-500 mr-1\" />\n                <span className=\"font-medium\">{partner.rating}</span>\n              </div>\n            </div>\n            <div className=\"text-sm text-gray-700 line-clamp-2\">\n              {partner.description}\n            </div>\n            <div className=\"text-xs text-blue-600 font-medium\">\n              {partner.totalProjects} completed projects\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8 flex justify-between items-start\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              onClick={() => navigate(`/projects/${projectId}/workflow`)}\n              className=\"text-raap-green hover:text-green-700 mb-4 p-0\"\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back to Workflow\n            </Button>\n            <h1 className=\"text-3xl font-bold text-raap-dark mb-2\">FabAssure Application</h1>\n            <h2 className=\"text-xl text-gray-700 mb-2\">{project.name}</h2>\n            <div className=\"flex items-center text-gray-600 mb-2\">\n              <MapPin className=\"h-4 w-4 mr-1\" />\n              {project.address}\n            </div>\n            <p className=\"text-gray-600\">\n              Identify, evaluate, contract, and manage key fabrication partners and service providers\n            </p>\n          </div>\n          <div className=\"text-right\">\n            {allPartners.length === 0 && (\n              <Button\n                onClick={() => seedPartners.mutate()}\n                disabled={seedPartners.isPending}\n                className=\"bg-blue-600 hover:bg-blue-700 mb-4\"\n                data-testid=\"button-seed-partners\"\n              >\n                {seedPartners.isPending ? \"Seeding...\" : \"Seed Sample Partners\"}\n              </Button>\n            )}\n            {project.fabAssureComplete && (\n              <Badge className=\"bg-green-500 text-white\">\n                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                Complete\n              </Badge>\n            )}\n          </div>\n        </div>\n\n        {/* Tab Interface */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <TabsList className=\"grid grid-cols-4 w-full mb-8\">\n            <TabsTrigger value=\"identify\" className=\"flex items-center space-x-1\">\n              <Search className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Identify</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"evaluate\" className=\"flex items-center space-x-1\">\n              <TrendingUp className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Evaluate</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"contract\" className=\"flex items-center space-x-1\">\n              <FileText className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Contract</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"management\" className=\"flex items-center space-x-1\">\n              <Settings className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Management</span>\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Identify Tab - Marketplace */}\n          <TabsContent value=\"identify\">\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Search className=\"h-5 w-5\" />\n                    <span>Partner Marketplace</span>\n                  </CardTitle>\n                  <p className=\"text-gray-600\">\n                    Discover and identify qualified partners for your modular construction project based on location, capacity, and specialties.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  {/* Google Maps with Project and Partner Locations */}\n                  <div className=\"mb-6\">\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Project & Partner Locations</h4>\n                    <GoogleMaps \n                      locations={getMapLocations()}\n                      center={{ lat: 39.0825, lng: -121.5644 }}\n                      zoom={9}\n                      height=\"300px\"\n                      className=\"w-full\"\n                    />\n                    <div className=\"mt-3 flex flex-wrap gap-4 text-xs\">\n                      <div className=\"flex items-center gap-1\">\n                        <div className=\"w-4 h-4 bg-red-600 rounded-full flex items-center justify-center\">\n                          <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        </div>\n                        <span>Project Location</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-3 h-3 rounded-full bg-amber-500 border border-white\"></div>\n                        <span>Fabricators</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-3 h-3 rounded-full bg-emerald-600 border border-white\"></div>\n                        <span>General Contractors</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-3 h-3 rounded-full bg-blue-600 border border-white\"></div>\n                        <span>Architects of Record</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-3 h-3 rounded-full bg-violet-600 border border-white\"></div>\n                        <span>Consultants</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-3 h-3 rounded-full bg-yellow-600 border border-white\"></div>\n                        <span>Transportation</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-3 h-3 rounded-full bg-gray-600 border border-white\"></div>\n                        <span>Engineering</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Partner Type Tabs */}\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-4\">Partners by Type</h3>\n                    <Tabs value={selectedPartnerTab} onValueChange={setSelectedPartnerTab} className=\"w-full\">\n                      <TabsList className=\"grid grid-cols-3 lg:grid-cols-6 w-full mb-6\">\n                        {partnerTypes.map((type) => {\n                          const Icon = type.icon;\n                          const count = getPartnersByType(type.value).length;\n                          const colorClass = getPartnerTypeColor(type.value);\n                          return (\n                            <TabsTrigger key={type.value} value={type.value} className=\"flex items-center space-x-1\">\n                              <Icon className={`h-4 w-4 ${colorClass}`} />\n                              <span className=\"hidden sm:inline\">{type.label.split(' ')[0]}</span>\n                              <Badge variant=\"secondary\" className=\"ml-1 text-xs\">{count}</Badge>\n                            </TabsTrigger>\n                          );\n                        })}\n                      </TabsList>\n                      \n                      {partnerTypes.map((type) => {\n                        const typePartners = getPartnersByType(type.value);\n                        return (\n                          <TabsContent key={type.value} value={type.value}>\n                            <div className=\"space-y-4\">\n                              <h4 className=\"text-md font-medium text-gray-700\">\n                                {type.label} ({typePartners.length})\n                              </h4>\n                              {typePartners.length > 0 ? (\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                                  {typePartners.map(renderPartnerCard)}\n                                </div>\n                              ) : (\n                                <div className=\"text-center py-8 text-gray-500\">\n                                  No {type.label.toLowerCase()} found. \n                                  {allPartners.length === 0 && (\n                                    <span> Click \"Seed Sample Partners\" to add demo data.</span>\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                          </TabsContent>\n                        );\n                      })}\n                    </Tabs>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Evaluate Tab */}\n          <TabsContent value=\"evaluate\">\n            <div className=\"space-y-6\">\n              {/* Overview Section */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <TrendingUp className=\"h-5 w-5\" />\n                    <span>Fabricator Evaluation Framework</span>\n                  </CardTitle>\n                  <p className=\"text-gray-600\">\n                    Comprehensive assessment based on four critical evaluation criteria: Cost, Design, Quality, and Commercial Strength.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n                    <div className=\"text-center p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                      <DollarSign className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\n                      <div className=\"font-semibold text-blue-700\">Cost (25%)</div>\n                      <div className=\"text-sm text-blue-600\">Lowest overall cost</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-green-50 border border-green-200 rounded-lg\">\n                      <Building className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n                      <div className=\"font-semibold text-green-700\">Design (25%)</div>\n                      <div className=\"text-sm text-green-600\">Vendor-agnostic approach</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                      <Shield className=\"h-8 w-8 text-yellow-600 mx-auto mb-2\" />\n                      <div className=\"font-semibold text-yellow-700\">Quality (25%)</div>\n                      <div className=\"text-sm text-yellow-600\">Assembly & logistics risk</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-purple-50 border border-purple-200 rounded-lg\">\n                      <Award className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n                      <div className=\"font-semibold text-purple-700\">Commercial (25%)</div>\n                      <div className=\"text-sm text-purple-600\">Viability & reliability</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Fabricator Selection */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Select Fabricator to Evaluate</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {allPartners.filter(p => p.partnerType === 'fabricator').map((fabricator) => (\n                      <Card key={fabricator.id} className=\"cursor-pointer hover:bg-blue-50 border-2 hover:border-blue-200 transition-colors\">\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h4 className=\"font-medium\">{fabricator.name}</h4>\n                            <Badge variant=\"outline\">{fabricator.location}</Badge>\n                          </div>\n                          <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                            <span>Est. {fabricator.yearEstablished}</span>\n                            <div className=\"flex items-center\">\n                              <Star className=\"h-4 w-4 text-yellow-500 mr-1\" />\n                              <span>{fabricator.rating}</span>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Selected Fabricator Display */}\n              <Card className=\"border-2 border-blue-200 bg-blue-50\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-blue-800\">Currently Evaluating: Modular Solutions Inc.</h3>\n                      <p className=\"text-sm text-blue-600\">Located in Tracy, CA | Selected for Serenity Village Project</p>\n                      <p className=\"text-sm text-blue-600\">Total Fabrication Cost: $3,072,915 (28.4% of project)</p>\n                    </div>\n                    <Badge className=\"bg-blue-200 text-blue-800\">Primary Fabricator</Badge>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Design Assessment - Key Assemblies */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Building className=\"h-5 w-5\" />\n                    <span>Design Assessment - Key Assemblies (100 Points)</span>\n                  </CardTitle>\n                  <p className=\"text-gray-600\">\n                    Score fabricator's design approach focusing on vendor-agnostic systems, minimizing RFIs, and controlling schedule/cost risks.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <Tabs defaultValue=\"structural\" className=\"w-full\">\n                    <TabsList className=\"grid grid-cols-4 lg:grid-cols-8 w-full mb-6\">\n                      <TabsTrigger value=\"structural\" className=\"text-xs\">Structural</TabsTrigger>\n                      <TabsTrigger value=\"fire\" className=\"text-xs\">Fire/Acoustic</TabsTrigger>\n                      <TabsTrigger value=\"hvac\" className=\"text-xs\">HVAC/MEP</TabsTrigger>\n                      <TabsTrigger value=\"envelope\" className=\"text-xs\">Envelope</TabsTrigger>\n                      <TabsTrigger value=\"geometry\" className=\"text-xs\">Geometry</TabsTrigger>\n                      <TabsTrigger value=\"logistics\" className=\"text-xs\">Logistics</TabsTrigger>\n                      <TabsTrigger value=\"bim\" className=\"text-xs\">BIM/Shop</TabsTrigger>\n                      <TabsTrigger value=\"regulatory\" className=\"text-xs\">Regulatory</TabsTrigger>\n                    </TabsList>\n\n                    {/* Structural + Vertical Connections (15 pts) */}\n                    <TabsContent value=\"structural\" className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">Structural + Vertical Connections (15 points)</h4>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Evaluate repeatable corner/shear-wall strategy, stacking grid flexibility, and non-proprietary connectors.\n                        </p>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label className=\"text-sm font-medium\">Diagnostic Question:</Label>\n                            <p className=\"text-sm text-blue-700 italic bg-blue-50 p-2 rounded mt-1\">\n                              \"Provide standard corner/edge details and allowable alternates. What are vertical/horizontal tolerances?\"\n                            </p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                            <div>\n                              <Label className=\"text-sm font-medium text-green-700\">✓ What Good Looks Like:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Repeatable corner strategy with published load tables</li>\n                                <li>• Clear stacking grid + step changes allowed</li>\n                                <li>• Non-proprietary connectors with alternates</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <Label className=\"text-sm font-medium text-red-700\">⚠ Red Flags:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Proprietary corner posts with no alternates</li>\n                                <li>• Fixed module dimensions requiring redesign</li>\n                                <li>• Ambiguous erection tolerances</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"mt-4\">\n                            <Label className=\"text-sm font-medium\">Score (0-5 scale):</Label>\n                            <div className=\"flex items-center space-x-2 mt-2\">\n                              {[1,2,3,4,5].map(score => (\n                                <button key={score} className={`flex-1 h-10 rounded cursor-pointer transition-colors flex items-center justify-center text-sm font-medium ${score === 4 ? 'bg-green-500 text-white' : 'bg-gray-200 hover:bg-green-300'}`}>\n                                  {score}\n                                </button>\n                              ))}\n                            </div>\n                            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                              <span>Proprietary system</span>\n                              <span>Open, documented system</span>\n                            </div>\n                            <div className=\"mt-2 p-2 bg-green-50 rounded text-sm\">\n                              <strong>Score: 4/5</strong> - Good open system with documented alternates, minor proprietary elements\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Fire & Acoustics (15 pts) */}\n                    <TabsContent value=\"fire\" className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">Floor/Ceiling Fire & Acoustics at Penetrations (15 points)</h4>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Assess UL-listed assemblies, penetration details, and clear firestop responsibility.\n                        </p>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label className=\"text-sm font-medium\">Diagnostic Question:</Label>\n                            <p className=\"text-sm text-blue-700 italic bg-blue-50 p-2 rounded mt-1\">\n                              \"Submit tested assemblies + penetration details; who owns field firestop?\"\n                            </p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                            <div>\n                              <Label className=\"text-sm font-medium text-green-700\">✓ What Good Looks Like:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• UL-listed assemblies with pre-engineered details</li>\n                                <li>• Clear 1-hr rating maintenance at matelines</li>\n                                <li>• Acoustic flanking control included</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <Label className=\"text-sm font-medium text-red-700\">⚠ Red Flags:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• \"To be engineered by others\" for penetrations</li>\n                                <li>• Site-applied firestop without details</li>\n                                <li>• Non-standard field fixes after install</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"mt-4\">\n                            <Label className=\"text-sm font-medium\">Score (0-5 scale):</Label>\n                            <div className=\"flex items-center space-x-2 mt-2\">\n                              {[1,2,3,4,5].map(score => (\n                                <button key={score} className=\"flex-1 h-10 bg-gray-200 rounded cursor-pointer hover:bg-green-300 transition-colors flex items-center justify-center text-sm font-medium\">\n                                  {score}\n                                </button>\n                              ))}\n                            </div>\n                            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                              <span>No tested details</span>\n                              <span>Complete detail library</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* HVAC & MEP Integration (15 pts) */}\n                    <TabsContent value=\"hvac\" className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">HVAC & MEP Integration Strategy (15 points)</h4>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Evaluate vendor-agnostic HVAC routing and coordinated MEP integration.\n                        </p>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label className=\"text-sm font-medium\">Diagnostic Question:</Label>\n                            <p className=\"text-sm text-blue-700 italic bg-blue-50 p-2 rounded mt-1\">\n                              \"Show two viable duct routing schemes (outside-module vs open-web). Where are wet stacks?\"\n                            </p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                            <div>\n                              <Label className=\"text-sm font-medium text-green-700\">✓ What Good Looks Like:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Multiple workable routing options</li>\n                                <li>• Standard open-web strategy with soffits</li>\n                                <li>• Documented riser/shaft conventions</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <Label className=\"text-sm font-medium text-red-700\">⚠ Red Flags:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Unique components forcing single fabricator</li>\n                                <li>• MEP clashes deferred to shop stage</li>\n                                <li>• No coordination rules for vertical systems</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"mt-4\">\n                            <Label className=\"text-sm font-medium\">Score (0-5 scale):</Label>\n                            <div className=\"flex items-center space-x-2 mt-2\">\n                              {[1,2,3,4,5].map(score => (\n                                <button key={score} className=\"flex-1 h-10 bg-gray-200 rounded cursor-pointer hover:bg-green-300 transition-colors flex items-center justify-center text-sm font-medium\">\n                                  {score}\n                                </button>\n                              ))}\n                            </div>\n                            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                              <span>Custom components</span>\n                              <span>Multiple routing options</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Mateline Waterproofing (15 pts) */}\n                    <TabsContent value=\"envelope\" className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">Mateline Waterproofing & Envelope Continuity (15 points)</h4>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Assess standard mateline details and air/water continuity systems.\n                        </p>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label className=\"text-sm font-medium\">Diagnostic Question:</Label>\n                            <p className=\"text-sm text-blue-700 italic bg-blue-50 p-2 rounded mt-1\">\n                              \"Provide WRB/air barrier continuity details and set sequence; how are seams protected during transport?\"\n                            </p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                            <div>\n                              <Label className=\"text-sm font-medium text-green-700\">✓ What Good Looks Like:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Standard mateline joint details with tested sequences</li>\n                                <li>• Clear air/water continuity factory to field</li>\n                                <li>• Temporary protection during transport</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <Label className=\"text-sm font-medium text-red-700\">⚠ Red Flags:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Site-invented flashing at set</li>\n                                <li>• WRB continuity not defined over matelines</li>\n                                <li>• No transport weather protection spec</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"mt-4\">\n                            <Label className=\"text-sm font-medium\">Score (0-5 scale):</Label>\n                            <div className=\"flex items-center space-x-2 mt-2\">\n                              {[1,2,3,4,5].map(score => (\n                                <button key={score} className=\"flex-1 h-10 bg-gray-200 rounded cursor-pointer hover:bg-green-300 transition-colors flex items-center justify-center text-sm font-medium\">\n                                  {score}\n                                </button>\n                              ))}\n                            </div>\n                            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                              <span>Undefined details</span>\n                              <span>Proven detail library</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Geometry & Tolerances (15 pts) */}\n                    <TabsContent value=\"geometry\" className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">Geometry & Tolerances (15 points)</h4>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Evaluate dimensional flexibility and published tolerance standards.\n                        </p>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label className=\"text-sm font-medium\">Diagnostic Question:</Label>\n                            <p className=\"text-sm text-blue-700 italic bg-blue-50 p-2 rounded mt-1\">\n                              \"List dimension step options that don't trigger chassis redesign.\"\n                            </p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                            <div>\n                              <Label className=\"text-sm font-medium text-green-700\">✓ What Good Looks Like:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Step-function flexibility (±12\" increments)</li>\n                                <li>• Published stacking and alignment tolerances</li>\n                                <li>• Fit-up allowance at matelines</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <Label className=\"text-sm font-medium text-red-700\">⚠ Red Flags:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Any deviation triggers full redesign</li>\n                                <li>• No published tolerances</li>\n                                <li>• \"Confirm in shop drawings\" pattern</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"mt-4\">\n                            <Label className=\"text-sm font-medium\">Score (0-5 scale):</Label>\n                            <div className=\"flex items-center space-x-2 mt-2\">\n                              {[1,2,3,4,5].map(score => (\n                                <button key={score} className=\"flex-1 h-10 bg-gray-200 rounded cursor-pointer hover:bg-green-300 transition-colors flex items-center justify-center text-sm font-medium\">\n                                  {score}\n                                </button>\n                              ))}\n                            </div>\n                            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                              <span>No flexibility</span>\n                              <span>Multiple step options</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Logistics & Lifting (10 pts) */}\n                    <TabsContent value=\"logistics\" className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">Logistics & Lifting (10 points)</h4>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Assess transport-ready design and damage prevention protocols.\n                        </p>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label className=\"text-sm font-medium\">Diagnostic Question:</Label>\n                            <p className=\"text-sm text-blue-700 italic bg-blue-50 p-2 rounded mt-1\">\n                              \"Share standard pick drawings, max module envelope, escort requirements, and damage rate last 3 jobs.\"\n                            </p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                            <div>\n                              <Label className=\"text-sm font-medium text-green-700\">✓ What Good Looks Like:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Modules sized for route permits</li>\n                                <li>• Standard lift points and rigging calcs</li>\n                                <li>• Edge and finish protection specs</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <Label className=\"text-sm font-medium text-red-700\">⚠ Red Flags:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Over-width/height requiring escorts</li>\n                                <li>• No standard rigging drawings</li>\n                                <li>• Cribbing improvised on-site</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"mt-4\">\n                            <Label className=\"text-sm font-medium\">Score (0-5 scale):</Label>\n                            <div className=\"flex items-center space-x-2 mt-2\">\n                              {[1,2,3,4,5].map(score => (\n                                <button key={score} className=\"flex-1 h-10 bg-gray-200 rounded cursor-pointer hover:bg-green-300 transition-colors flex items-center justify-center text-sm font-medium\">\n                                  {score}\n                                </button>\n                              ))}\n                            </div>\n                            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                              <span>Frequent damage</span>\n                              <span>Packaged logistics kit</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Shop-Drawing/BIM (10 pts) */}\n                    <TabsContent value=\"bim\" className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">Shop-Drawing Conversion & BIM Protocols (10 points)</h4>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Evaluate LOD targets, approval workflow, and design-freeze gates.\n                        </p>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label className=\"text-sm font-medium\">Diagnostic Question:</Label>\n                            <p className=\"text-sm text-blue-700 italic bg-blue-50 p-2 rounded mt-1\">\n                              \"State LOD by discipline, approval workflow, and design-freeze gates; RFI/submittal metrics from last 3 jobs.\"\n                            </p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                            <div>\n                              <Label className=\"text-sm font-medium text-green-700\">✓ What Good Looks Like:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Clear LOD targets and model exchanges</li>\n                                <li>• Defined design-freeze gates</li>\n                                <li>• Proven turnaround SLAs</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <Label className=\"text-sm font-medium text-red-700\">⚠ Red Flags:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Ambiguous LOD requirements</li>\n                                <li>• Late design freeze timing</li>\n                                <li>• \"Figure it out in shop\" culture</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"mt-4\">\n                            <Label className=\"text-sm font-medium\">Score (0-5 scale):</Label>\n                            <div className=\"flex items-center space-x-2 mt-2\">\n                              {[1,2,3,4,5].map(score => (\n                                <button key={score} className=\"flex-1 h-10 bg-gray-200 rounded cursor-pointer hover:bg-green-300 transition-colors flex items-center justify-center text-sm font-medium\">\n                                  {score}\n                                </button>\n                              ))}\n                            </div>\n                            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                              <span>Chronic late changes</span>\n                              <span>Low-RFI pipeline</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Regulatory Strategy (5 pts) */}\n                    <TabsContent value=\"regulatory\" className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">Regulatory Strategy (5 points)</h4>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Assess pre-checked designs and AHJ approval strategies.\n                        </p>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label className=\"text-sm font-medium\">Diagnostic Question:</Label>\n                            <p className=\"text-sm text-blue-700 italic bg-blue-50 p-2 rounded mt-1\">\n                              \"Prior PC approvals? Plan for AHJ interface and inspection regimen.\"\n                            </p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                            <div>\n                              <Label className=\"text-sm font-medium text-green-700\">✓ What Good Looks Like:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• Pre-checked (PC) designs available</li>\n                                <li>• Prior approvals with AHJs</li>\n                                <li>• Mapped delta list for deviations</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <Label className=\"text-sm font-medium text-red-700\">⚠ Red Flags:</Label>\n                              <ul className=\"text-sm text-gray-600 mt-1 space-y-1\">\n                                <li>• AHJ engagement left to late phase</li>\n                                <li>• PC criteria not understood</li>\n                                <li>• Starting from scratch with regulators</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"mt-4\">\n                            <Label className=\"text-sm font-medium\">Score (0-5 scale):</Label>\n                            <div className=\"flex items-center space-x-2 mt-2\">\n                              {[1,2,3,4,5].map(score => (\n                                <button key={score} className=\"flex-1 h-10 bg-gray-200 rounded cursor-pointer hover:bg-green-300 transition-colors flex items-center justify-center text-sm font-medium\">\n                                  {score}\n                                </button>\n                              ))}\n                            </div>\n                            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                              <span>Starting from scratch</span>\n                              <span>PC-ready library</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n                  </Tabs>\n                </CardContent>\n              </Card>\n\n              {/* Risk Assessment & Scoring Summary */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Assessment Summary & Risk Indicators</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                    {/* Key Assembly Score */}\n                    <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                      <h4 className=\"font-semibold text-green-800 mb-2\">Key Assemblies Score</h4>\n                      <div className=\"text-3xl font-bold text-green-700\">82/100</div>\n                      <div className=\"text-sm text-green-600 mt-2\">\n                        <div className=\"flex justify-between\">\n                          <span>85-100: Green (Low Risk)</span>\n                        </div>\n                        <div className=\"flex justify-between font-medium\">\n                          <span>► 65-84: Yellow (Med Risk)</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>&lt;65: Red (High Risk)</span>\n                        </div>\n                      </div>\n                      <div className=\"mt-2 text-xs text-green-700\">\n                        <p>Structural: 12/15 | Fire: 14/15 | HVAC: 13/15 | Envelope: 12/15</p>\n                        <p>Geometry: 12/15 | Logistics: 8/10 | BIM: 7/10 | Regulatory: 4/5</p>\n                      </div>\n                    </div>\n\n                    {/* Lock-In Risk Meter */}\n                    <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                      <h4 className=\"font-semibold text-yellow-800 mb-2\">Lock-In Risk Meter</h4>\n                      <div className=\"flex items-center space-x-2 mb-2\">\n                        <div className=\"flex-1 bg-gray-200 rounded-full h-3\">\n                          <div className=\"bg-yellow-500 h-3 rounded-full\" style={{width: '40%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">Low-Medium</span>\n                      </div>\n                      <ul className=\"text-sm text-yellow-700 space-y-1\">\n                        <li>• Standard connector system with approved alternates</li>\n                        <li>• Multiple MEP routing options available</li>\n                        <li>• Good dimensional flexibility (±12\" increments)</li>\n                      </ul>\n                    </div>\n\n                    {/* RFI/Submittal Risk */}\n                    <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                      <h4 className=\"font-semibold text-green-800 mb-2\">RFI/Submittal Risk</h4>\n                      <div className=\"flex items-center space-x-2 mb-2\">\n                        <div className=\"flex-1 bg-gray-200 rounded-full h-3\">\n                          <div className=\"bg-green-500 h-3 rounded-full\" style={{width: '30%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">Low</span>\n                      </div>\n                      <ul className=\"text-sm text-green-700 space-y-1\">\n                        <li>• Tested firestop details provided</li>\n                        <li>• Clear LOD standards and design-freeze gates</li>\n                        <li>• Average 8 RFIs per project (industry avg: 25)</li>\n                      </ul>\n                    </div>\n                  </div>\n\n                  {/* Action Pack */}\n                  <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-blue-800 mb-3\">Action Pack - Recommended Next Steps</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <h5 className=\"font-medium text-blue-700 mb-2\">Immediate Actions:</h5>\n                        <ul className=\"text-sm text-blue-600 space-y-1\">\n                          <li className=\"flex items-start\"><span className=\"mr-2\">□</span>Add alternate connector specifications</li>\n                          <li className=\"flex items-start\"><span className=\"mr-2\">□</span>Confirm WRB continuity mock-up</li>\n                          <li className=\"flex items-start\"><span className=\"mr-2\">□</span>Set design-freeze gate before shop MEP</li>\n                        </ul>\n                      </div>\n                      <div>\n                        <h5 className=\"font-medium text-blue-700 mb-2\">Documentation Required:</h5>\n                        <ul className=\"text-sm text-blue-600 space-y-1\">\n                          <li className=\"flex items-start\"><span className=\"mr-2\">□</span>Request tolerance table and examples</li>\n                          <li className=\"flex items-start\"><span className=\"mr-2\">□</span>Obtain RFI metrics from recent projects</li>\n                          <li className=\"flex items-start\"><span className=\"mr-2\">□</span>Review transportation damage rates</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Overall Evaluation Summary */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>4-Criteria Overall Evaluation</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                    <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                      <DollarSign className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\n                      <div className=\"text-2xl font-bold text-blue-600\">86</div>\n                      <div className=\"text-sm text-blue-600\">Cost Score (25%)</div>\n                      <div className=\"text-xs text-blue-500 mt-1\">$3.07M fabrication cost</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                      <Building className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n                      <div className=\"text-2xl font-bold text-green-600\">82</div>\n                      <div className=\"text-sm text-green-600\">Design Score (25%)</div>\n                      <div className=\"text-xs text-green-500 mt-1\">Key assemblies rated</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\n                      <Shield className=\"h-8 w-8 text-yellow-600 mx-auto mb-2\" />\n                      <div className=\"text-2xl font-bold text-yellow-600\">89</div>\n                      <div className=\"text-sm text-yellow-600\">Quality Score (25%)</div>\n                      <div className=\"text-xs text-yellow-500 mt-1\">ISO 9001 certified</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                      <Award className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n                      <div className=\"text-2xl font-bold text-purple-600\">84</div>\n                      <div className=\"text-sm text-purple-600\">Commercial Score (25%)</div>\n                      <div className=\"text-xs text-purple-500 mt-1\">15 years experience</div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-center p-6 bg-green-100 rounded-lg border-2 border-green-300\">\n                    <div className=\"text-3xl font-bold text-green-800\">Overall Score: 85/100</div>\n                    <div className=\"text-green-700 mt-2 font-medium\">RECOMMENDED - Low Risk Fabricator</div>\n                    <div className=\"text-sm text-green-600 mt-1\">Weighted average: (86×25% + 82×25% + 89×25% + 84×25%) = 85.25</div>\n                  </div>\n                  \n                  <div className=\"mt-6\">\n                    <Label htmlFor=\"evaluationNotes\">Comprehensive Evaluation Notes</Label>\n                    <Textarea\n                      id=\"evaluationNotes\"\n                      placeholder=\"Document detailed findings, risk factors, and recommendations for this fabricator evaluation...\"\n                      rows={4}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Contract Tab */}\n          <TabsContent value=\"contract\">\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <FileText className=\"h-5 w-5\" />\n                    <span>Contract Terms Management</span>\n                  </CardTitle>\n                  <p className=\"text-gray-600\">\n                    Define and manage key contractual terms for selected partners based on evaluation results and project requirements.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  {/* Selected Partners from Evaluation */}\n                  <div className=\"mb-6\">\n                    <h3 className=\"text-lg font-semibold mb-4\">Selected Partners from Evaluation Process</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <Card className=\"bg-blue-50 border-blue-200\">\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h4 className=\"font-medium\">Primary Fabricator</h4>\n                            <Factory className=\"h-5 w-5 text-blue-600\" />\n                          </div>\n                          <p className=\"font-semibold\">Modular Solutions Inc.</p>\n                          <p className=\"text-sm text-gray-600\">Total Fabrication Cost: $3,072,915</p>\n                          <p className=\"text-sm text-gray-600\">Location: Tracy, CA</p>\n                          <div className=\"mt-2\">\n                            <Badge className=\"bg-green-200 text-green-800\">Overall Score: 85/100</Badge>\n                          </div>\n                        </CardContent>\n                      </Card>\n                      <Card className=\"bg-green-50 border-green-200\">\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h4 className=\"font-medium\">General Contractor</h4>\n                            <Building className=\"h-5 w-5 text-green-600\" />\n                          </div>\n                          <p className=\"font-semibold\">Pacific Coast Builders</p>\n                          <p className=\"text-sm text-gray-600\">Site & Assembly Cost: $7,748,650</p>\n                          <p className=\"text-sm text-gray-600\">Location: Sacramento, CA</p>\n                          <div className=\"mt-2\">\n                            <Badge className=\"bg-blue-200 text-blue-800\">Selected Partner</Badge>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </div>\n\n                  {/* Contract Forms */}\n                  <div className=\"space-y-6\">\n                    {/* Fabrication Contract */}\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg\">Fabrication Contract Terms - Modular Solutions Inc.</CardTitle>\n                        <p className=\"text-sm text-gray-600\">Comprehensive contract terms based on evaluation results and risk assessment</p>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"fabContractValue\">Contract Value</Label>\n                            <Input\n                              id=\"fabContractValue\"\n                              type=\"text\"\n                              defaultValue=\"$3,072,915\"\n                              className=\"font-medium\"\n                              readOnly\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"fabContractStatus\">Contract Status</Label>\n                            <Select defaultValue=\"negotiating\">\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Select status\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"draft\">Draft</SelectItem>\n                                <SelectItem value=\"negotiating\">Negotiating</SelectItem>\n                                <SelectItem value=\"signed\">Signed</SelectItem>\n                                <SelectItem value=\"completed\">Completed</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"fabPaymentTerms\">Payment Terms</Label>\n                          <Textarea\n                            id=\"fabPaymentTerms\"\n                            defaultValue=\"25% ($768,229) upon contract signing and design approval\n30% ($921,875) at 50% factory completion milestone  \n30% ($921,875) upon completed modules ready for shipment\n15% ($460,937) final payment upon successful site installation and acceptance\n\nPayment terms: Net 15 days. Late payment penalty: 1.5% per month.\"\n                            rows={6}\n                          />\n                        </div>\n\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"fabDeliverySchedule\">Delivery Schedule</Label>\n                          <Textarea\n                            id=\"fabDeliverySchedule\"\n                            defaultValue=\"Factory Production Timeline:\n- Design finalization and shop drawings: Weeks 1-3\n- Material procurement and fabrication start: Week 4\n- First module completion: Week 8\n- All 24 modules completed: Week 14\n- Transportation to site: Weeks 15-16\n\nKey Milestones:\n- 25% design freeze gate: Week 2\n- First module inspection: Week 8  \n- Final quality inspection: Week 14\n- Site delivery coordination: Week 15\"\n                            rows={8}\n                          />\n                        </div>\n\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"fabQualityRequirements\">Quality Requirements & Standards</Label>\n                          <Textarea\n                            id=\"fabQualityRequirements\"\n                            defaultValue=\"Quality Standards:\n- ISO 9001:2015 certification maintained throughout project\n- All modules must pass third-party inspection before shipment\n- UL-listed fire assemblies with tested penetration details required\n- California DSA pre-check approval for structural connections\n- Weather protection during transport per specification\n\nInspection Requirements:\n- Weekly progress inspections by owner's representative\n- Hold points at: framing completion, MEP rough-in, finish installation\n- Final acceptance inspection before shipment authorization\n- Compliance with CA prevailing wage requirements and documentation\"\n                            rows={8}\n                          />\n                        </div>\n\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"fabWarrantyTerms\">Warranty Terms</Label>\n                          <Textarea\n                            id=\"fabWarrantyTerms\"\n                            defaultValue=\"Warranty Coverage:\n- 2-year comprehensive warranty on all factory work and materials\n- 10-year structural warranty on modular frame and connections\n- 1-year warranty on MEP systems and installations\n- Workmanship defects covered for 2 years from substantial completion\n- Transportation damage coverage and remediation at no cost to owner\"\n                            rows={5}\n                          />\n                        </div>\n\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"fabPenaltyClauses\">Penalty & Performance Clauses</Label>\n                          <Textarea\n                            id=\"fabPenaltyClauses\"\n                            defaultValue=\"Performance Requirements:\n- Late delivery penalty: $2,000 per day per module after agreed delivery date\n- Quality defect penalty: Cost of remediation plus 10% administrative fee\n- Early delivery bonus: $1,000 per day for each day ahead of schedule\n- Zero RFI bonus: $25,000 if project completed with fewer than 5 RFIs\n- Liquidated damages cap: 10% of total contract value\n\nPerformance guarantees backed by 10% performance bond from approved surety.\"\n                            rows={6}\n                          />\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    {/* GC Contract */}\n                    {project.finalSelectedGc && (\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg\">General Contractor Agreement</CardTitle>\n                          <p className=\"text-sm text-gray-600\">Define key terms for the general contracting agreement</p>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div className=\"space-y-2\">\n                              <Label htmlFor=\"gcContractValue\">Contract Value</Label>\n                              <Input\n                                id=\"gcContractValue\"\n                                type=\"number\"\n                                step=\"0.01\"\n                                placeholder=\"Enter total contract value\"\n                                defaultValue={project.finalGcCost || \"\"}\n                              />\n                            </div>\n                            <div className=\"space-y-2\">\n                              <Label htmlFor=\"gcContractStatus\">Contract Status</Label>\n                              <Select defaultValue=\"draft\">\n                                <SelectTrigger>\n                                  <SelectValue placeholder=\"Select status\" />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  <SelectItem value=\"draft\">Draft</SelectItem>\n                                  <SelectItem value=\"negotiating\">Negotiating</SelectItem>\n                                  <SelectItem value=\"signed\">Signed</SelectItem>\n                                  <SelectItem value=\"completed\">Completed</SelectItem>\n                                </SelectContent>\n                              </Select>\n                            </div>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"gcPaymentTerms\">Payment Terms</Label>\n                            <Textarea\n                              id=\"gcPaymentTerms\"\n                              placeholder=\"Define payment schedule for site preparation, assembly, and completion phases\"\n                              rows={3}\n                            />\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"gcDeliverySchedule\">Project Schedule</Label>\n                            <Textarea\n                              id=\"gcDeliverySchedule\"\n                              placeholder=\"Specify site preparation timeline, module delivery coordination, and completion schedule\"\n                              rows={3}\n                            />\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"gcQualityRequirements\">Quality Requirements & Standards</Label>\n                            <Textarea\n                              id=\"gcQualityRequirements\"\n                              placeholder=\"Define construction standards, inspection protocols, and final acceptance criteria\"\n                              rows={3}\n                            />\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"gcWarrantyTerms\">Warranty Terms</Label>\n                            <Textarea\n                              id=\"gcWarrantyTerms\"\n                              placeholder=\"Specify warranty period for construction work and system installations\"\n                              rows={2}\n                            />\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"gcPenaltyClauses\">Penalty & Performance Clauses</Label>\n                            <Textarea\n                              id=\"gcPenaltyClauses\"\n                              placeholder=\"Define penalties for delays, coordination issues, and performance bonuses\"\n                              rows={3}\n                            />\n                          </div>\n                        </CardContent>\n                      </Card>\n                    )}\n\n                    {/* Additional Partner Contracts */}\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg\">Additional Partner Contracts</CardTitle>\n                        <p className=\"text-sm text-gray-600\">Manage contracts for transportation, engineering, and consulting partners</p>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-4\">\n                          <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                            <div>\n                              <h4 className=\"font-medium\">Transportation & Setting</h4>\n                              <p className=\"text-sm text-gray-600\">Modular transport and crane services</p>\n                            </div>\n                            <Button variant=\"outline\" size=\"sm\">\n                              <FileText className=\"h-4 w-4 mr-2\" />\n                              Add Contract\n                            </Button>\n                          </div>\n                          <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                            <div>\n                              <h4 className=\"font-medium\">Engineering Services</h4>\n                              <p className=\"text-sm text-gray-600\">Structural and MEP engineering support</p>\n                            </div>\n                            <Button variant=\"outline\" size=\"sm\">\n                              <FileText className=\"h-4 w-4 mr-2\" />\n                              Add Contract\n                            </Button>\n                          </div>\n                          <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                            <div>\n                              <h4 className=\"font-medium\">Implementation Partners</h4>\n                              <p className=\"text-sm text-gray-600\">Specialized installation and coordination services</p>\n                            </div>\n                            <Button variant=\"outline\" size=\"sm\">\n                              <FileText className=\"h-4 w-4 mr-2\" />\n                              Add Contract\n                            </Button>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    {/* Contract Summary */}\n                    <Card className=\"bg-blue-50 border-blue-200\">\n                      <CardHeader>\n                        <CardTitle className=\"text-lg\">Contract Portfolio Summary</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-blue-600\">\n                              ${((Number(project.finalFabricatorCost) || 0) + (Number(project.finalGcCost) || 0)).toLocaleString()}\n                            </div>\n                            <div className=\"text-sm text-blue-600\">Total Contract Value</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-green-600\">2</div>\n                            <div className=\"text-sm text-green-600\">Active Contracts</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-orange-600\">0</div>\n                            <div className=\"text-sm text-orange-600\">Pending Signatures</div>\n                          </div>\n                        </div>\n                        \n                        <div className=\"mt-4 p-3 bg-white rounded-lg\">\n                          <h4 className=\"font-medium mb-2\">Next Steps</h4>\n                          <ul className=\"text-sm text-gray-700 space-y-1\">\n                            <li>• Finalize payment terms with fabricator</li>\n                            <li>• Review quality requirements with GC</li>\n                            <li>• Schedule contract signing meetings</li>\n                            <li>• Establish project communication protocols</li>\n                          </ul>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Management Tab */}\n          <TabsContent value=\"management\">\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Settings className=\"h-5 w-5\" />\n                    <span>Partner Management & Workflows</span>\n                  </CardTitle>\n                  <p className=\"text-gray-600\">\n                    Coordinate ongoing workflows, track progress, and manage communication with all project partners.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  {/* Project Timeline */}\n                  <div className=\"mb-6\">\n                    <h3 className=\"text-lg font-semibold mb-4\">Project Timeline & Milestones</h3>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center p-4 bg-green-50 border border-green-200 rounded-lg\">\n                        <CheckCircle className=\"h-5 w-5 text-green-600 mr-3\" />\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium\">Design Package Complete</h4>\n                          <p className=\"text-sm text-gray-600\">Conceptual designs and entitlement package finalized</p>\n                        </div>\n                        <Badge className=\"bg-green-500 text-white\">Complete</Badge>\n                      </div>\n                      \n                      <div className=\"flex items-center p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                        <Calendar className=\"h-5 w-5 text-blue-600 mr-3\" />\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium\">Fabrication Start</h4>\n                          <p className=\"text-sm text-gray-600\">Module production begins at selected fabricator</p>\n                        </div>\n                        <Badge className=\"bg-blue-500 text-white\">In Progress</Badge>\n                      </div>\n                      \n                      <div className=\"flex items-center p-4 bg-gray-50 border border-gray-200 rounded-lg\">\n                        <Calendar className=\"h-5 w-5 text-gray-600 mr-3\" />\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium\">Site Preparation</h4>\n                          <p className=\"text-sm text-gray-600\">Foundation and utility installation by GC</p>\n                        </div>\n                        <Badge variant=\"secondary\">Upcoming</Badge>\n                      </div>\n                      \n                      <div className=\"flex items-center p-4 bg-gray-50 border border-gray-200 rounded-lg\">\n                        <Calendar className=\"h-5 w-5 text-gray-600 mr-3\" />\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium\">Module Delivery & Assembly</h4>\n                          <p className=\"text-sm text-gray-600\">Transportation and on-site assembly coordination</p>\n                        </div>\n                        <Badge variant=\"secondary\">Upcoming</Badge>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Active Partners Dashboard */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg flex items-center space-x-2\">\n                          <Factory className=\"h-5 w-5\" />\n                          <span>Modular Solutions Inc. - Fabricator</span>\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-4\">\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-sm font-medium\">Current Status</span>\n                            <Badge className=\"bg-green-500 text-white\">Shop Drawings Review</Badge>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-sm font-medium\">Design Progress</span>\n                            <span className=\"text-sm\">Week 2 of 3 (67%)</span>\n                          </div>\n                          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                            <div className=\"bg-green-600 h-2 rounded-full\" style={{width: '67%'}}></div>\n                          </div>\n                          \n                          <div className=\"space-y-2 text-sm\">\n                            <div className=\"flex items-center justify-between\">\n                              <span>Contract Value</span>\n                              <span className=\"font-medium\">$3,072,915</span>\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                              <span>Performance Score</span>\n                              <span className=\"text-green-600 font-medium\">85/100</span>\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                              <span>RFI Count</span>\n                              <span className=\"text-green-600 font-medium\">2 (Target: &lt;5)</span>\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                              <span>Next Milestone</span>\n                              <span className=\"text-gray-600\">Design Freeze - Week 3</span>\n                            </div>\n                          </div>\n                          \n                          <div className=\"pt-2 border-t\">\n                            <div className=\"grid grid-cols-2 gap-2\">\n                              <Button size=\"sm\" className=\"text-xs\">\n                                <Phone className=\"h-3 w-3 mr-1\" />\n                                Call Team\n                              </Button>\n                              <Button size=\"sm\" variant=\"outline\" className=\"text-xs\">\n                                <FileText className=\"h-3 w-3 mr-1\" />\n                                Reports\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg flex items-center space-x-2\">\n                          <Building className=\"h-5 w-5\" />\n                          <span>Pacific Coast Builders - GC</span>\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-4\">\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-sm font-medium\">Current Status</span>\n                            <Badge className=\"bg-blue-500 text-white\">Foundation Design</Badge>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-sm font-medium\">Site Prep Progress</span>\n                            <span className=\"text-sm\">Planning Phase (25%)</span>\n                          </div>\n                          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                            <div className=\"bg-blue-600 h-2 rounded-full\" style={{width: '25%'}}></div>\n                          </div>\n                          \n                          <div className=\"space-y-2 text-sm\">\n                            <div className=\"flex items-center justify-between\">\n                              <span>Contract Value</span>\n                              <span className=\"font-medium\">$7,748,650</span>\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                              <span>Site Access</span>\n                              <span className=\"text-green-600 font-medium\">Confirmed</span>\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                              <span>Permit Status</span>\n                              <span className=\"text-yellow-600 font-medium\">In Review</span>\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                              <span>Next Milestone</span>\n                              <span className=\"text-gray-600\">Foundation Start - Week 8</span>\n                            </div>\n                          </div>\n                          \n                          <div className=\"pt-2 border-t\">\n                            <div className=\"grid grid-cols-2 gap-2\">\n                              <Button size=\"sm\" className=\"text-xs\">\n                                <Phone className=\"h-3 w-3 mr-1\" />\n                                Call Team\n                              </Button>\n                              <Button size=\"sm\" variant=\"outline\" className=\"text-xs\">\n                                <Calendar className=\"h-3 w-3 mr-1\" />\n                                Schedule\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n\n                  {/* Quality Checkpoints */}\n                  <Card className=\"mb-6\">\n                    <CardHeader>\n                      <CardTitle className=\"text-lg flex items-center space-x-2\">\n                        <Shield className=\"h-5 w-5\" />\n                        <span>Quality Checkpoints</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\">\n                          <div className=\"flex items-center\">\n                            <CheckCircle className=\"h-5 w-5 text-green-600 mr-3\" />\n                            <div>\n                              <h4 className=\"font-medium\">Pre-Production Review</h4>\n                              <p className=\"text-sm text-gray-600\">Design approval and material verification</p>\n                            </div>\n                          </div>\n                          <Badge className=\"bg-green-500 text-white\">Passed</Badge>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                          <div className=\"flex items-center\">\n                            <AlertCircle className=\"h-5 w-5 text-yellow-600 mr-3\" />\n                            <div>\n                              <h4 className=\"font-medium\">Mid-Production Inspection</h4>\n                              <p className=\"text-sm text-gray-600\">Structural and MEP systems verification</p>\n                            </div>\n                          </div>\n                          <Badge className=\"bg-yellow-500 text-white\">Scheduled</Badge>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg\">\n                          <div className=\"flex items-center\">\n                            <Calendar className=\"h-5 w-5 text-gray-600 mr-3\" />\n                            <div>\n                              <h4 className=\"font-medium\">Final Quality Inspection</h4>\n                              <p className=\"text-sm text-gray-600\">Complete module inspection before delivery</p>\n                            </div>\n                          </div>\n                          <Badge variant=\"secondary\">Pending</Badge>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg\">\n                          <div className=\"flex items-center\">\n                            <Calendar className=\"h-5 w-5 text-gray-600 mr-3\" />\n                            <div>\n                              <h4 className=\"font-medium\">On-Site Assembly Review</h4>\n                              <p className=\"text-sm text-gray-600\">Installation and connection verification</p>\n                            </div>\n                          </div>\n                          <Badge variant=\"secondary\">Future</Badge>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  {/* Communication Log */}\n                  <Card className=\"mb-6\">\n                    <CardHeader>\n                      <CardTitle className=\"text-lg flex items-center space-x-2\">\n                        <Mail className=\"h-5 w-5\" />\n                        <span>Communication Log</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div className=\"border-l-4 border-blue-400 pl-4 py-2\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <h4 className=\"font-medium\">Fabricator Weekly Update</h4>\n                            <span className=\"text-sm text-gray-500\">2 hours ago</span>\n                          </div>\n                          <p className=\"text-sm text-gray-600\">Production progress on schedule, modules 1-4 completed structural phase</p>\n                          <div className=\"flex items-center mt-2\">\n                            <Badge variant=\"outline\" className=\"mr-2\">Fabricator</Badge>\n                            <Badge variant=\"outline\" className=\"mr-2\">Progress Update</Badge>\n                          </div>\n                        </div>\n                        \n                        <div className=\"border-l-4 border-green-400 pl-4 py-2\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <h4 className=\"font-medium\">GC Site Permit Approved</h4>\n                            <span className=\"text-sm text-gray-500\">1 day ago</span>\n                          </div>\n                          <p className=\"text-sm text-gray-600\">Building permits approved, site preparation can begin next week</p>\n                          <div className=\"flex items-center mt-2\">\n                            <Badge variant=\"outline\" className=\"mr-2\">General Contractor</Badge>\n                            <Badge variant=\"outline\" className=\"mr-2\">Milestone</Badge>\n                          </div>\n                        </div>\n                        \n                        <div className=\"border-l-4 border-yellow-400 pl-4 py-2\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <h4 className=\"font-medium\">Transportation Scheduling</h4>\n                            <span className=\"text-sm text-gray-500\">3 days ago</span>\n                          </div>\n                          <p className=\"text-sm text-gray-600\">Coordinating delivery schedule with fabricator timeline and site readiness</p>\n                          <div className=\"flex items-center mt-2\">\n                            <Badge variant=\"outline\" className=\"mr-2\">Transportation</Badge>\n                            <Badge variant=\"outline\" className=\"mr-2\">Planning</Badge>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"mt-4 flex space-x-2\">\n                        <Button size=\"sm\" variant=\"outline\">\n                          <Mail className=\"h-4 w-4 mr-2\" />\n                          Send Update Request\n                        </Button>\n                        <Button size=\"sm\" variant=\"outline\">\n                          <Calendar className=\"h-4 w-4 mr-2\" />\n                          Schedule Meeting\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  {/* Issues & Actions */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg flex items-center space-x-2\">\n                          <AlertCircle className=\"h-5 w-5\" />\n                          <span>Active Issues</span>\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-3\">\n                          <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <h4 className=\"font-medium text-red-800\">Material Delivery Delay</h4>\n                              <Badge className=\"bg-red-500 text-white\">High</Badge>\n                            </div>\n                            <p className=\"text-sm text-red-700\">Window supplier experiencing 2-week delay</p>\n                            <div className=\"flex items-center justify-between mt-2 text-sm\">\n                              <span className=\"text-red-600\">Assigned: Project Manager</span>\n                              <span className=\"text-red-600\">Due: Tomorrow</span>\n                            </div>\n                          </div>\n                          \n                          <div className=\"p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <h4 className=\"font-medium text-yellow-800\">Design Clarification Needed</h4>\n                              <Badge className=\"bg-yellow-500 text-white\">Medium</Badge>\n                            </div>\n                            <p className=\"text-sm text-yellow-700\">Bathroom layout confirmation for units 12-15</p>\n                            <div className=\"flex items-center justify-between mt-2 text-sm\">\n                              <span className=\"text-yellow-600\">Assigned: Architect</span>\n                              <span className=\"text-yellow-600\">Due: Friday</span>\n                            </div>\n                          </div>\n                          \n                          <Button size=\"sm\" className=\"w-full\">\n                            Add New Issue\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg flex items-center space-x-2\">\n                          <CheckCircle className=\"h-5 w-5\" />\n                          <span>Pending Actions</span>\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-3\">\n                          <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <h4 className=\"font-medium\">Quality Inspection Schedule</h4>\n                              <Badge className=\"bg-blue-500 text-white\">This Week</Badge>\n                            </div>\n                            <p className=\"text-sm text-gray-600\">Schedule mid-production quality review</p>\n                          </div>\n                          \n                          <div className=\"p-3 bg-green-50 border border-green-200 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <h4 className=\"font-medium\">Site Access Coordination</h4>\n                              <Badge className=\"bg-green-500 text-white\">Next Week</Badge>\n                            </div>\n                            <p className=\"text-sm text-gray-600\">Coordinate crane and delivery access with city</p>\n                          </div>\n                          \n                          <div className=\"p-3 bg-purple-50 border border-purple-200 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <h4 className=\"font-medium\">Insurance Documentation</h4>\n                              <Badge className=\"bg-purple-500 text-white\">Future</Badge>\n                            </div>\n                            <p className=\"text-sm text-gray-600\">Review and update project insurance coverage</p>\n                          </div>\n                          \n                          <Button size=\"sm\" className=\"w-full\">\n                            Add New Action\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        {/* Selected Partner Details Modal/Sidebar could go here */}\n        {selectedPartner && (\n          <Card className=\"mt-8 bg-blue-50 border-blue-200\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                <span>Selected: {selectedPartner.name}</span>\n                <Button variant=\"ghost\" onClick={() => setSelectedPartner(null)}>\n                  ×\n                </Button>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Contact Information</h4>\n                  <div className=\"space-y-1 text-sm\">\n                    <div className=\"flex items-center\">\n                      <Mail className=\"h-4 w-4 mr-2\" />\n                      {selectedPartner.contactEmail}\n                    </div>\n                    <div className=\"flex items-center\">\n                      <Phone className=\"h-4 w-4 mr-2\" />\n                      {selectedPartner.contactPhone}\n                    </div>\n                    <div className=\"flex items-center\">\n                      <Globe className=\"h-4 w-4 mr-2\" />\n                      {selectedPartner.website}\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Capabilities</h4>\n                  <p className=\"text-sm text-gray-700 mb-2\">{selectedPartner.capacity}</p>\n                  <p className=\"text-sm text-gray-700\">{selectedPartner.specialties}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Complete Application Button */}\n        {!project.fabAssureComplete && (\n          <Card className=\"mt-8\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"font-semibold text-raap-dark mb-1\">Complete FabAssure Application</h3>\n                  <p className=\"text-gray-600\">\n                    Once you've identified partners, completed evaluations, established contracts, and set up management workflows, \n                    mark this application as complete to proceed to EasyDesign.\n                  </p>\n                </div>\n                <Button\n                  className=\"bg-raap-green hover:bg-green-700\"\n                  onClick={() => markAsComplete.mutate()}\n                  disabled={markAsComplete.isPending}\n                  data-testid=\"button-complete-fabassure\"\n                >\n                  {markAsComplete.isPending ? \"Completing...\" : \"Complete FabAssure\"}\n                  <ArrowRight className=\"h-4 w-4 ml-2\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {project.fabAssureComplete && (\n          <Card className=\"mt-8 bg-green-50 border-green-200\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"h-6 w-6 text-green-600\" />\n                  <div>\n                    <h3 className=\"font-semibold text-green-800\">FabAssure Complete</h3>\n                    <p className=\"text-green-700\">\n                      Your partner identification, evaluation, and management process is complete. You can now proceed to EasyDesign.\n                    </p>\n                  </div>\n                </div>\n                <Button\n                  className=\"bg-raap-green hover:bg-green-700\"\n                  onClick={() => navigate(`/projects/${projectId}/workflow`)}\n                  data-testid=\"button-continue-workflow\"\n                >\n                  Continue to Workflow\n                  <ArrowRight className=\"h-4 w-4 ml-2\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n    </div>\n  );\n}","size_bytes":103626},"client/src/pages/Landing.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Building, Calculator, FileText, MapPin, Users, Wrench, Palette, ArrowRight } from \"lucide-react\";\nimport raapLogoPath from \"@assets/raap-logo-new.png\";\n\nexport default function Landing() {\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-white\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <img src={raapLogoPath} alt=\"RaaP Logo\" className=\"h-12 w-auto\" />\n              <div className=\"text-gray-400\">|</div>\n              <h1 className=\"text-lg font-medium text-raap-dark\">Rooms as a Product Workflow</h1>\n            </div>\n            \n          </div>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-4xl font-bold text-raap-dark mb-6\">\n            Rooms as a Product Workflow\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            Complete 4-application workflow guiding multifamily developers from initial feasibility through final design. \n            Navigate seamlessly through ModularFeasibility → SmartStart → FabAssure → EasyDesign with integrated project data flow.\n          </p>\n          <Button \n            onClick={() => window.location.href = '/'}\n            size=\"lg\" \n            className=\"bg-raap-green hover:bg-green-700 text-lg px-8 py-3\"\n          >\n            Get Started\n          </Button>\n        </div>\n\n        {/* 4-Application Workflow */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-2xl font-bold text-raap-dark mb-8 text-center\">\n            Complete Development Workflow\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {/* ModularFeasibility */}\n            <Card className=\"relative\">\n              <CardHeader className=\"text-center\">\n                <div className=\"mx-auto w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4\">\n                  <Calculator className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <CardTitle className=\"text-raap-dark text-lg\">ModularFeasibility</CardTitle>\n                <div className=\"text-xs bg-blue-50 text-blue-700 px-2 py-1 rounded-full\">Step 1</div>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600 text-sm mb-3\">\n                  6-criteria assessment covering zoning, massing, cost analysis, sustainability, logistics, and build time\n                </p>\n                <ul className=\"text-xs text-gray-500 space-y-1\">\n                  <li>• Feasibility scoring</li>\n                  <li>• Cost comparison</li>\n                  <li>• Professional reports</li>\n                </ul>\n              </CardContent>\n              <div className=\"absolute -right-2 top-1/2 transform -translate-y-1/2 hidden lg:block\">\n                <ArrowRight className=\"h-5 w-5 text-gray-400\" />\n              </div>\n            </Card>\n\n            {/* SmartStart */}\n            <Card className=\"relative\">\n              <CardHeader className=\"text-center\">\n                <div className=\"mx-auto w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4\">\n                  <FileText className=\"h-6 w-6 text-green-600\" />\n                </div>\n                <CardTitle className=\"text-raap-dark text-lg\">SmartStart</CardTitle>\n                <div className=\"text-xs bg-green-50 text-green-700 px-2 py-1 rounded-full\">Step 2</div>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600 text-sm mb-3\">\n                  Entitlement and permitting coordination with regulatory compliance and AHJ engagement\n                </p>\n                <ul className=\"text-xs text-gray-500 space-y-1\">\n                  <li>• Permit coordination</li>\n                  <li>• Regulatory compliance</li>\n                  <li>• AHJ engagement</li>\n                </ul>\n              </CardContent>\n              <div className=\"absolute -right-2 top-1/2 transform -translate-y-1/2 hidden lg:block\">\n                <ArrowRight className=\"h-5 w-5 text-gray-400\" />\n              </div>\n            </Card>\n\n            {/* FabAssure */}\n            <Card className=\"relative\">\n              <CardHeader className=\"text-center\">\n                <div className=\"mx-auto w-12 h-12 bg-amber-100 rounded-lg flex items-center justify-center mb-4\">\n                  <Wrench className=\"h-6 w-6 text-amber-600\" />\n                </div>\n                <CardTitle className=\"text-raap-dark text-lg\">FabAssure</CardTitle>\n                <div className=\"text-xs bg-amber-50 text-amber-700 px-2 py-1 rounded-full\">Step 3</div>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600 text-sm mb-3\">\n                  Factory coordination with partner selection, quality standards, and production timeline management\n                </p>\n                <ul className=\"text-xs text-gray-500 space-y-1\">\n                  <li>• Partner selection</li>\n                  <li>• Quality standards</li>\n                  <li>• Timeline coordination</li>\n                </ul>\n              </CardContent>\n              <div className=\"absolute -right-2 top-1/2 transform -translate-y-1/2 hidden lg:block\">\n                <ArrowRight className=\"h-5 w-5 text-gray-400\" />\n              </div>\n            </Card>\n\n            {/* EasyDesign */}\n            <Card className=\"relative\">\n              <CardHeader className=\"text-center\">\n                <div className=\"mx-auto w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4\">\n                  <Palette className=\"h-6 w-6 text-purple-600\" />\n                </div>\n                <CardTitle className=\"text-raap-dark text-lg\">EasyDesign</CardTitle>\n                <div className=\"text-xs bg-purple-50 text-purple-700 px-2 py-1 rounded-full\">Step 4</div>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600 text-sm mb-3\">\n                  Design finalization with AOR workflows, fabricator coordination, and GC/trades documentation\n                </p>\n                <ul className=\"text-xs text-gray-500 space-y-1\">\n                  <li>• Design prototypes</li>\n                  <li>• Stakeholder workflows</li>\n                  <li>• File coordination</li>\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <div className=\"text-center mt-8\">\n            <p className=\"text-gray-600 text-sm\">\n              Each application builds on the previous step, with project data flowing seamlessly through the entire workflow\n            </p>\n          </div>\n        </div>\n\n        {/* Sample Project Showcase */}\n        <div className=\"bg-white rounded-lg shadow-lg p-8 mb-16\">\n          <h2 className=\"text-2xl font-bold text-raap-dark mb-6 text-center\">\n            Sample Project: Serenity Village Complete Workflow\n          </h2>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=300\" \n                alt=\"Serenity Village development site\" \n                className=\"w-full h-48 rounded-lg object-cover mb-4\"\n              />\n              <div className=\"space-y-2\">\n                <h3 className=\"font-semibold text-raap-dark\">5224 Chestnut Road, Olivehurst CA</h3>\n                <p className=\"text-sm text-gray-600\">Affordable Housing • 24 Units • 3 Stories</p>\n                <p className=\"text-sm text-gray-600\">146' × 66' • Type V-A Construction</p>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold text-raap-green mb-2\">Complete</div>\n                <div className=\"text-sm text-gray-600\">Full Workflow Status</div>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                  <div className=\"text-lg font-bold text-green-600\">1%</div>\n                  <div className=\"text-xs text-gray-600\">Cost Savings</div>\n                </div>\n                <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                  <div className=\"text-lg font-bold text-blue-600\">4 months</div>\n                  <div className=\"text-xs text-gray-600\">Time Saved</div>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span>ModularFeasibility</span>\n                  <span className=\"bg-green-100 text-green-700 px-2 py-1 rounded text-xs\">Complete</span>\n                </div>\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span>SmartStart</span>\n                  <span className=\"bg-green-100 text-green-700 px-2 py-1 rounded text-xs\">Complete</span>\n                </div>\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span>FabAssure</span>\n                  <span className=\"bg-green-100 text-green-700 px-2 py-1 rounded text-xs\">Complete</span>\n                </div>\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span>EasyDesign</span>\n                  <span className=\"bg-green-100 text-green-700 px-2 py-1 rounded text-xs\">Complete</span>\n                </div>\n              </div>\n\n              <div className=\"text-sm text-gray-600\">\n                <strong>Successful modular construction project</strong> navigated through the complete \n                4-application workflow from initial feasibility assessment to final design coordination.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-raap-dark mb-4\">\n            Ready to Start Your Development Workflow?\n          </h2>\n          <p className=\"text-gray-600 mb-8\">\n            Join multifamily developers using our complete 4-application workflow system to navigate modular construction from feasibility through design\n          </p>\n          <Button \n            onClick={() => window.location.href = '/'}\n            size=\"lg\" \n            className=\"bg-raap-green hover:bg-green-700 text-lg px-8 py-3\"\n          >\n            Begin Workflow\n          </Button>\n        </div>\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-50 border-t border-gray-200 mt-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <img src={raapLogoPath} alt=\"RaaP Logo\" className=\"h-10 w-auto\" />\n              <div className=\"text-sm text-gray-500\">\n                © 2025 RaaP. Professional modular construction assessment platform.\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":11822},"client/src/pages/ModularFeasibility.tsx":{"content":"import { useState, useMemo, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Header from \"@/components/Header\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  ArrowLeft, \n  ArrowRight,\n  Download, \n  MapPin, \n  Building, \n  FileText, \n  Leaf, \n  DollarSign, \n  Truck, \n  Clock,\n  CheckCircle,\n  Home,\n  Layout,\n  Layers,\n  Map\n} from \"lucide-react\";\nimport ProjectSiteMap from \"@/components/ProjectSiteMap\";\nimport RouteMap from \"@/components/RouteMap\";\nimport { generateProjectPDF } from \"@/lib/pdfGenerator\";\nimport type { Project, CostBreakdown } from \"@shared/schema\";\nimport { useCostTotals, formatCurrency, calculateCostPerSf } from \"@/lib/useCostTotals\";\n// Removed calculateProjectScores import - using database values directly\n\n// Helper function to format numbers\nfunction formatNumber(value: number | string | null | undefined): string {\n  if (!value) return '0';\n  const numValue = typeof value === 'string' ? parseFloat(value) : value;\n  if (isNaN(numValue)) return '0';\n  return numValue.toLocaleString('en-US');\n}\n\n// Helper function to get cost breakdown data by category\nfunction getCostBreakdownByCategory(costBreakdowns: CostBreakdown[] | undefined, category: string): CostBreakdown | null {\n  if (!costBreakdowns) return null;\n  return costBreakdowns.find(cb => cb.category === category) || null;\n}\n\n// Helper function to format cost values for mobile display\nfunction formatCostForMobile(costStr: string): string {\n  // Remove currency symbols and parentheses\n  const cleanStr = costStr.replace(/[\\$,()]/g, '');\n  const isNegative = costStr.includes('(') || costStr.includes('-');\n  const numValue = parseFloat(cleanStr);\n  \n  if (isNaN(numValue)) return costStr;\n  \n  let formatted;\n  if (Math.abs(numValue) >= 1000000) {\n    formatted = `$${(numValue / 1000000).toFixed(1)}M`;\n  } else if (Math.abs(numValue) >= 1000) {\n    formatted = `$${Math.round(numValue / 1000)}K`;\n  } else {\n    formatted = `$${Math.round(numValue)}`;\n  }\n  \n  return isNegative ? `(${formatted})` : formatted;\n}\n\n// Mobile responsive currency cell component\nconst MobileCurrencyCell: React.FC<{ amount: number | string; className?: string }> = ({ amount, className = \"\" }) => {\n  const formatted = formatCurrency(amount);\n  return (\n    <td className={`px-3 py-2 text-right ${className}`}>\n      <span className=\"sm:hidden\">{formatCostForMobile(formatted)}</span>\n      <span className=\"hidden sm:inline\">{formatted}</span>\n    </td>\n  );\n};\n\n// Import generated images for Massing tab\nimport vallejoFloorPlanImage from \"@assets/Vallejo Floor Plan 2_1757773129441.png\";\nimport vallejoBuildingRenderingImage from \"@assets/Vallejo Building 2_1757773134770.png\";\nimport vallejoSitePlanImage from \"@assets/Vallejo Site 2_1757773140827.png\";\nimport serenityFloorPlanImage from \"@assets/Mutual Floor Plan_1757785148171.png\";\nimport serenityBuildingRenderingImage from \"@assets/Mutual Building 3_1757785148170.png\";\nimport serenitySitePlanImage from \"@assets/Mutual SIte Plan_1757785148169.png\";\nimport unitPlansImage from \"@assets/generated_images/apartment_unit_floor_plans_5298881c.png\";\nimport oneBedImage from \"@assets/1 Bed_1754836945408.png\";\nimport twoBedImage from \"@assets/2 Bed_1754837154542.png\";\nimport threeBedImage from \"@assets/3 Bed_1754837154543.png\";\n// Hotel room plan images\nimport doubleQueenImage from \"@assets/Double Queen_1758411451002.png\";\nimport kingStudioImage from \"@assets/King Studio_1758411451003.png\";\nimport oneBedroomHotelImage from \"@assets/One Bedroom_1758411451004.png\";\n// Hotel building plans\nimport hotelGroundFloorImage from \"@assets/25-GF_1758411614655.png\";\nimport hotelTypicalFloorImage from \"@assets/25-TF_1758411614655.png\";\nimport hotel3DViewImage from \"@assets/4-25_1758411716844.png\";\nimport tracyRouteImage from \"@assets/Tracy to Olivehurst_1754838644869.png\";\nimport zoningMapImage from \"@assets/Serinity Zoning Map_1754839677898.png\";\nimport olivehurstMapImage from \"@assets/Olivehurst Map_1754839713206.png\";\nimport timelineComparisonImage from \"@assets/timeline-comparison-hotel.png\";\n\nexport default function ModularFeasibility() {\n  const [, params] = useRoute(\"/projects/:id/modular-feasibility\");\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const projectId = params?.id;\n  const [activeTab, setActiveTab] = useState(\"summary\");\n\n  const { data: project, isLoading, error } = useQuery<Project>({\n    queryKey: [\"/api/projects\", projectId],\n    enabled: !!projectId,\n  });\n\n  const { data: costBreakdowns, error: costError } = useQuery<CostBreakdown[]>({\n    queryKey: [\"/api/projects\", projectId, \"cost-breakdowns\"],\n    enabled: !!projectId,\n  });\n\n  // Direct database values - single source of truth\n  const projectScores = useMemo(() => {\n    if (!project) return { overall: \"0.0\", individual: { zoning: \"0.0\", massing: \"0.0\", sustainability: \"0.0\", cost: \"0.0\", logistics: \"0.0\", buildTime: \"0.0\" } };\n    return {\n      overall: project.overallScore || \"0.0\",\n      individual: {\n        zoning: project.zoningScore || \"0.0\",\n        massing: project.massingScore || \"0.0\",\n        sustainability: project.sustainabilityScore || \"0.0\",\n        cost: project.costScore || \"0.0\", \n        logistics: project.logisticsScore || \"0.0\",\n        buildTime: project.buildTimeScore || \"0.0\"\n      }\n    };\n  }, [project?.overallScore, project?.zoningScore, project?.massingScore, project?.sustainabilityScore, project?.costScore, project?.logisticsScore, project?.buildTimeScore]);\n\n  const markAsComplete = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"PATCH\", `/api/projects/${projectId}`, {\n        modularFeasibilityComplete: true\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n      toast({\n        title: \"ModularFeasibility Complete\",\n        description: \"Your feasibility assessment is complete. You can now proceed to SmartStart.\",\n      });\n      navigate(`/projects/${projectId}/workflow`);\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n      }\n    },\n  });\n\n  // Handle authentication errors using useEffect to avoid violating rules of hooks\n  useEffect(() => {\n    if (error && isUnauthorizedError(error)) {\n      toast({\n        title: \"Unauthorized\",\n        description: \"You are logged out. Logging in again...\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n    }\n  }, [error, toast]);\n\n  useEffect(() => {\n    if (costError && isUnauthorizedError(costError)) {\n      toast({\n        title: \"Unauthorized\",\n        description: \"You are logged out. Logging in again...\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n    }\n  }, [costError, toast]);\n\n  const handleDownloadReport = () => {\n    if (project) {\n      generateProjectPDF(project, costBreakdowns || []);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse space-y-8\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"h-64 bg-gray-200 rounded-lg\"></div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {[1, 2, 3, 4, 5, 6].map((i) => (\n                <div key={i} className=\"h-48 bg-gray-200 rounded-lg\"></div>\n              ))}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Project not found</h2>\n            <Button onClick={() => navigate(\"/\")} className=\"mt-4\">\n              Back to Dashboard\n            </Button>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  const totalUnits = (project.studioUnits || 0) + (project.oneBedUnits || 0) + \n                    (project.twoBedUnits || 0) + (project.threeBedUnits || 0);\n\n  const getScoreColor = (score: string) => {\n    const numScore = parseFloat(score);\n    if (numScore >= 4) return \"text-raap-green\";\n    if (numScore >= 3) return \"text-raap-mustard\";\n    return \"text-red-600\";\n  };\n\n  // SINGLE SOURCE OF TRUTH: Use shared cost calculation utility\n  const calculatedCosts = useCostTotals(project, costBreakdowns || []);\n\n  // Use shared sample project detection\n\n  // Function to download cost breakdown as CSV using real API data\n  const downloadCostBreakdown = () => {\n    if (!costBreakdowns || costBreakdowns.length === 0) {\n      toast({ title: \"Error\", description: \"No cost breakdown data available for download\", variant: \"destructive\" });\n      return;\n    }\n\n    const costBreakdownData = [\n      // Header\n      ['MasterFormat Division', 'Site Built Total', 'Site Built $/sf', 'RaaP GC', 'RaaP Fab', 'RaaP Total', 'RaaP $/sf', 'Savings']\n    ];\n\n    // Helper function to add a row with calculated values\n    const addRow = (name: string, siteBuilt: number, raapGc: number, raapFab: number, isSection: boolean = false) => {\n      const raapTotal = raapGc + raapFab;\n      const savings = siteBuilt - raapTotal;\n      costBreakdownData.push([\n        name,\n        formatCurrency(siteBuilt),\n        `$${Math.round(siteBuilt / calculatedCosts.totalSqFt)}`,\n        formatCurrency(raapGc),\n        formatCurrency(raapFab),\n        formatCurrency(raapTotal),\n        `$${Math.round(raapTotal / calculatedCosts.totalSqFt)}`,\n        savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`\n      ]);\n    };\n\n    // Comprehensive list of all standard CSI MasterFormat divisions and their groupings\n    const standardDivisions = [\n      // General Requirements & Fees\n      { category: '00 Procurement and Contracting Requirements', section: 'General Requirements' },\n      { category: '01 General Requirements', section: 'General Requirements' },\n      \n      // Existing Conditions & Site Work\n      { category: '02 Existing Conditions', section: 'Site Work' },\n      \n      // Concrete & Structure\n      { category: '03 Concrete', section: 'Concrete & Structure' },\n      { category: '04 Masonry', section: 'Concrete & Structure' },\n      { category: '05 Metals', section: 'Concrete & Structure' },\n      \n      // Enclosure\n      { category: '06 Wood, Plastics, and Composites', section: 'Enclosure' },\n      { category: '07 Thermal and Moisture Protection', section: 'Enclosure' },\n      { category: '08 Openings', section: 'Enclosure' },\n      { category: '09 Finishes', section: 'Enclosure' },\n      \n      // Specialties & Equipment\n      { category: '10 Specialties', section: 'Specialties & Equipment' },\n      { category: '11 Equipment', section: 'Specialties & Equipment' },\n      { category: '12 Furnishings', section: 'Specialties & Equipment' },\n      { category: '13 Special Construction', section: 'Specialties & Equipment' },\n      { category: '14 Conveying Equipment', section: 'Specialties & Equipment' },\n      \n      // Facility Services\n      { category: '21 Fire Suppression', section: 'Facility Services' },\n      { category: '22 Plumbing', section: 'Facility Services' },\n      { category: '23 HVAC', section: 'Facility Services' },\n      { category: '26 Electrical', section: 'Facility Services' },\n      { category: '27 Communications', section: 'Facility Services' },\n      { category: '28 Electronic Safety and Security', section: 'Facility Services' },\n      \n      // Site & Infrastructure\n      { category: '31 Earthwork', section: 'Site & Infrastructure' },\n      { category: '32 Exterior Improvements', section: 'Site & Infrastructure' },\n      { category: '33 Utilities', section: 'Site & Infrastructure' },\n      \n      // Process Equipment (if applicable)\n      { category: '40 Process Integration', section: 'Process Equipment' },\n      { category: '41 Material Processing and Handling Equipment', section: 'Process Equipment' },\n      { category: '42 Process Heating, Cooling, and Drying Equipment', section: 'Process Equipment' },\n      { category: '43 Process Gas and Liquid Handling, Purification, and Storage Equipment', section: 'Process Equipment' },\n      { category: '44 Pollution Control Equipment', section: 'Process Equipment' },\n      { category: '45 Industry-Specific Manufacturing Equipment', section: 'Process Equipment' },\n      { category: '46 Water and Wastewater Equipment', section: 'Process Equipment' },\n      { category: '48 Electrical Power Generation', section: 'Process Equipment' }\n    ];\n\n    // Filter to only include divisions that exist in the cost breakdown data or use legacy mapping\n    const existingCategories = costBreakdowns.map(cb => cb.category);\n    \n    // Legacy category mappings for backwards compatibility\n    const legacyMappings = {\n      '05 Metal': '05 Metals',\n      '06 Wood & Plastics': '06 Wood, Plastics, and Composites',\n      '07 Thermal & Moisture Protection': '07 Thermal and Moisture Protection',\n      '12 Furnishing': '12 Furnishings',\n      '00 Fees': '00 Procurement and Contracting Requirements'\n    };\n\n    // Use existing data plus any additional standard divisions that have data\n    const divisionsToInclude: { category: string; section: string }[] = [];\n    \n    // Add divisions that exist in the cost breakdown data\n    existingCategories.forEach(category => {\n      // Check if this category has a standard equivalent\n      const standardCategory = Object.entries(legacyMappings).find(([legacy, standard]) => \n        legacy === category\n      )?.[1] || category;\n      \n      const division = standardDivisions.find(d => d.category === standardCategory || d.category === category);\n      if (division && !divisionsToInclude.find(d => d.category === division.category)) {\n        divisionsToInclude.push({\n          category: category, // Use the actual category from data\n          section: division.section\n        });\n      } else if (!division) {\n        // Add unknown categories to a catch-all section\n        divisionsToInclude.push({\n          category: category,\n          section: 'Other'\n        });\n      }\n    });\n\n    // Group divisions by section and calculate totals\n    const sections = Array.from(new Set(divisionsToInclude.map(d => d.section))).sort();\n    let projectSiteBuilt = 0, projectRaapGc = 0, projectRaapFab = 0;\n\n    sections.forEach(sectionName => {\n      const sectionDivisions = divisionsToInclude.filter(d => d.section === sectionName);\n      let sectionSiteBuilt = 0, sectionRaapGc = 0, sectionRaapFab = 0;\n\n      // Add section header\n      sectionDivisions.forEach(division => {\n        const data = getCostBreakdownByCategory(costBreakdowns, division.category);\n        if (data) {\n          const siteBuilt = parseFloat(data.siteBuiltCost || '0');\n          const raapGc = parseFloat(data.raapGcCost || '0');\n          const raapFab = parseFloat(data.raapFabCost || '0');\n          \n          sectionSiteBuilt += siteBuilt;\n          sectionRaapGc += raapGc;\n          sectionRaapFab += raapFab;\n        }\n      });\n\n      // Add section total\n      addRow(sectionName, sectionSiteBuilt, sectionRaapGc, sectionRaapFab, true);\n\n      // Add individual divisions\n      sectionDivisions.forEach(division => {\n        const data = getCostBreakdownByCategory(costBreakdowns, division.category);\n        if (data) {\n          const siteBuilt = parseFloat(data.siteBuiltCost || '0');\n          const raapGc = parseFloat(data.raapGcCost || '0');\n          const raapFab = parseFloat(data.raapFabCost || '0');\n          \n          addRow(`  ${division.category}`, siteBuilt, raapGc, raapFab);\n        }\n      });\n\n      // Add to project totals\n      projectSiteBuilt += sectionSiteBuilt;\n      projectRaapGc += sectionRaapGc;\n      projectRaapFab += sectionRaapFab;\n    });\n\n    // Add empty row and project total\n    costBreakdownData.push(['', '', '', '', '', '', '', '']);\n    addRow('PROJECT TOTAL', projectSiteBuilt, projectRaapGc, projectRaapFab, true);\n    \n    // Convert to CSV\n    const csvContent = costBreakdownData.map(row => \n      row.map(cell => `\"${cell}\"`).join(',')\n    ).join('\\n');\n    \n    // Create and download file\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${project.name}_MasterFormat_Cost_Breakdown.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // CSV download function for Summary tab - raw input data only\n  const downloadSummaryData = () => {\n    const summaryData = [\n      ['Field', 'Value'],\n      ['Project Name', project.name || ''],\n      ['Address', project.address || ''],\n      ['Project Type', project.projectType || ''],\n      ['Target Floors', project.targetFloors || ''],\n      ['Studio Units', project.studioUnits || ''],\n      ['One Bedroom Units', project.oneBedUnits || ''],\n      ['Two Bedroom Units', project.twoBedUnits || ''],\n      ['Three Bedroom Units', project.threeBedUnits || ''],\n      ['Target Parking Spaces', project.targetParkingSpaces || ''],\n      ['Overall Score', scores.overall || ''],\n      ['Zoning Score', scores.zoning || ''],\n      ['Massing Score', scores.massing || ''],\n      ['Sustainability Score', scores.sustainability || ''],\n      ['Cost Score', scores.cost || ''],\n      ['Logistics Score', scores.logistics || ''],\n      ['Build Time Score', scores.buildTime || '']\n    ];\n    \n    const csvContent = summaryData.map(row => \n      row.map(cell => `\"${cell}\"`).join(',')\n    ).join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${project.name}_Summary.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // CSV download function for Zoning tab - raw zoning input data only\n  const downloadZoningData = () => {\n    const zoningData = [\n      ['Field', 'Value'],\n      ['Zoning District', project.zoningDistrict || ''],\n      ['Density Bonus Eligible', project.densityBonusEligible || ''],\n      ['Required Waivers', project.requiredWaivers || '']\n    ];\n    \n    const csvContent = zoningData.map(row => \n      row.map(cell => `\"${cell}\"`).join(',')\n    ).join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${project.name}_Zoning.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // CSV download function for Massing tab - raw massing input data only\n  const downloadMassingData = () => {\n    const massingData = [\n      ['Field', 'Value'],\n      ['Construction Type', project.constructionType || ''],\n      ['Target Floors', project.targetFloors || ''],\n      ['Studio Units', project.studioUnits || ''],\n      ['One Bedroom Units', project.oneBedUnits || ''],\n      ['Two Bedroom Units', project.twoBedUnits || ''],\n      ['Three Bedroom Units', project.threeBedUnits || ''],\n      ['Building Dimensions', project.buildingDimensions || '']\n    ];\n    \n    const csvContent = massingData.map(row => \n      row.map(cell => `\"${cell}\"`).join(',')\n    ).join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${project.name}_Massing.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // CSV download function for Sustainability tab - assessment results only (read-only)\n  const downloadSustainabilityData = () => {\n    const sustainabilityData = [\n      ['Field', 'Assessment Result'],\n      ['Solar PV Ready', 'Yes'],\n      ['Battery Storage Prep', 'Included'],\n      ['High Performance Envelope', 'Upgrade Required'],\n      ['HVAC Efficiency', 'Upgrade Required'],\n      ['LED Lighting Package', 'Standard'],\n      ['Air Tightness', 'Factory Controlled'],\n      ['Thermal Bridge Reduction', 'Optimized'],\n      ['Window Performance', 'Upgrade Required'],\n      ['Ventilation System', 'HRV Required'],\n      ['Quality Assurance', 'Factory QC']\n    ];\n    \n    const csvContent = sustainabilityData.map(row => \n      row.map(cell => `\"${cell}\"`).join(',')\n    ).join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${project.name}_Sustainability.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // CSV download function for Logistics tab - raw logistics input data only\n  const downloadLogisticsData = () => {\n    const logisticsData = [\n      ['Field', 'Value'],\n      ['Factory Location', project.factoryLocation || ''],\n      ['Transportation Notes', project.transportationNotes || ''],\n      ['Staging Notes', project.stagingNotes || '']\n    ];\n    \n    const csvContent = logisticsData.map(row => \n      row.map(cell => `\"${cell}\"`).join(',')\n    ).join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${project.name}_Logistics.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // CSV download function for Build Time tab - raw timeline input data only\n  const downloadBuildTimeData = () => {\n    const buildTimeData = [\n      ['Field', 'Value'],\n      ['Modular Timeline Months', project.modularTimelineMonths || ''],\n      ['Site Built Timeline Months', project.siteBuiltTimelineMonths || '']\n    ];\n    \n    const csvContent = buildTimeData.map(row => \n      row.map(cell => `\"${cell}\"`).join(',')\n    ).join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${project.name}_BuildTime.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // CSV upload functions\n  const uploadSummaryData = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const csv = e.target?.result as string;\n        const lines = csv.split('\\n');\n        const data: Record<string, string> = {};\n        \n        // Skip header, parse data with proper CSV handling\n        for (let i = 1; i < lines.length; i++) {\n          const line = lines[i].trim();\n          if (!line) continue;\n          \n          // Handle CSV parsing with quoted values containing commas\n          const csvRegex = /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/;\n          const parts = line.split(csvRegex);\n          \n          if (parts.length >= 2) {\n            const field = parts[0].replace(/\"/g, '').trim();\n            const value = parts[1].replace(/\"/g, '').trim();\n            if (field && value) {\n              data[field] = value;\n            }\n          }\n        }\n        \n        // Update project with uploaded data - core fields and scores only\n        const updateData = {\n          name: data['Project Name'] || project.name,\n          address: data['Address'] || project.address,\n          projectType: data['Project Type'] || project.projectType,\n          targetFloors: data['Target Floors'] || project.targetFloors,\n          studioUnits: data['Studio Units'] || project.studioUnits,\n          oneBedUnits: data['One Bedroom Units'] || project.oneBedUnits,\n          twoBedUnits: data['Two Bedroom Units'] || project.twoBedUnits,\n          threeBedUnits: data['Three Bedroom Units'] || project.threeBedUnits,\n          targetParkingSpaces: data['Target Parking Spaces'] || project.targetParkingSpaces,\n          // Score fields - single source of truth\n          overallScore: data['Overall Score'] || project.overallScore,\n          zoningScore: data['Zoning Score'] || project.zoningScore,\n          massingScore: data['Massing Score'] || project.massingScore,\n          sustainabilityScore: data['Sustainability Score'] || project.sustainabilityScore,\n          costScore: data['Cost Score'] || project.costScore,\n          logisticsScore: data['Logistics Score'] || project.logisticsScore,\n          buildTimeScore: data['Build Time Score'] || project.buildTimeScore\n        };\n        \n        await apiRequest(\"PATCH\", `/api/projects/${projectId}`, updateData);\n        queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n        toast({ title: \"Success\", description: \"Summary data uploaded successfully\" });\n      } catch (error) {\n        toast({ title: \"Error\", description: \"Failed to upload summary data\", variant: \"destructive\" });\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const uploadZoningData = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const csv = e.target?.result as string;\n        const lines = csv.split('\\n');\n        const data: Record<string, string> = {};\n        \n        for (let i = 1; i < lines.length; i++) {\n          const line = lines[i].trim();\n          if (!line) continue;\n          \n          // Handle CSV parsing with quoted values containing commas\n          const csvRegex = /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/;\n          const parts = line.split(csvRegex);\n          \n          if (parts.length >= 2) {\n            const field = parts[0].replace(/\"/g, '').trim();\n            const value = parts[1].replace(/\"/g, '').trim();\n            if (field && value) {\n              data[field] = value;\n            }\n          }\n        }\n        \n        const updateData = {\n          zoningDistrict: data['Zoning District'] || project.zoningDistrict,\n          densityBonusEligible: data['Density Bonus Eligible'] || project.densityBonusEligible,\n          requiredWaivers: data['Required Waivers'] || project.requiredWaivers\n        };\n        \n        await apiRequest(\"PATCH\", `/api/projects/${projectId}`, updateData);\n        queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n        toast({ title: \"Success\", description: \"Zoning data uploaded successfully\" });\n      } catch (error) {\n        toast({ title: \"Error\", description: \"Failed to upload zoning data\", variant: \"destructive\" });\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const uploadMassingData = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const csv = e.target?.result as string;\n        const lines = csv.split('\\n');\n        const data: Record<string, string> = {};\n        \n        for (let i = 1; i < lines.length; i++) {\n          const line = lines[i].trim();\n          if (!line) continue;\n          \n          // Handle CSV parsing with quoted values containing commas\n          const csvRegex = /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/;\n          const parts = line.split(csvRegex);\n          \n          if (parts.length >= 2) {\n            const field = parts[0].replace(/\"/g, '').trim();\n            const value = parts[1].replace(/\"/g, '').trim();\n            if (field && value) {\n              data[field] = value;\n            }\n          }\n        }\n        \n        const updateData = {\n          constructionType: data['Construction Type'] || project.constructionType,\n          targetFloors: data['Target Floors'] || project.targetFloors,\n          studioUnits: data['Studio Units'] || project.studioUnits,\n          oneBedUnits: data['One Bedroom Units'] || project.oneBedUnits,\n          twoBedUnits: data['Two Bedroom Units'] || project.twoBedUnits,\n          threeBedUnits: data['Three Bedroom Units'] || project.threeBedUnits,\n          buildingDimensions: data['Building Dimensions'] || project.buildingDimensions\n        };\n        \n        await apiRequest(\"PATCH\", `/api/projects/${projectId}`, updateData);\n        queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n        toast({ title: \"Success\", description: \"Massing data uploaded successfully\" });\n      } catch (error) {\n        toast({ title: \"Error\", description: \"Failed to upload massing data\", variant: \"destructive\" });\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const uploadSustainabilityData = (file: File) => {\n    // Sustainability data is read-only assessment results, not user input\n    toast({ title: \"Info\", description: \"Sustainability data is assessment results and cannot be modified via upload\" });\n  };\n\n  const uploadLogisticsData = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const csv = e.target?.result as string;\n        const lines = csv.split('\\n');\n        const data: Record<string, string> = {};\n        \n        for (let i = 1; i < lines.length; i++) {\n          const line = lines[i].trim();\n          if (!line) continue;\n          \n          // Handle CSV parsing with quoted values containing commas\n          const csvRegex = /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/;\n          const parts = line.split(csvRegex);\n          \n          if (parts.length >= 2) {\n            const field = parts[0].replace(/\"/g, '').trim();\n            const value = parts[1].replace(/\"/g, '').trim();\n            if (field && value) {\n              data[field] = value;\n            }\n          }\n        }\n        \n        const updateData = {\n          factoryLocation: data['Factory Location'] || project.factoryLocation,\n          transportationNotes: data['Transportation Notes'] || project.transportationNotes,\n          stagingNotes: data['Staging Notes'] || project.stagingNotes\n        };\n        \n        await apiRequest(\"PATCH\", `/api/projects/${projectId}`, updateData);\n        queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n        toast({ title: \"Success\", description: \"Logistics data uploaded successfully\" });\n      } catch (error) {\n        toast({ title: \"Error\", description: \"Failed to upload logistics data\", variant: \"destructive\" });\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const uploadBuildTimeData = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const csv = e.target?.result as string;\n        const lines = csv.split('\\n');\n        const data: Record<string, string> = {};\n        \n        for (let i = 1; i < lines.length; i++) {\n          const line = lines[i].trim();\n          if (!line) continue;\n          \n          // Handle CSV parsing with quoted values containing commas\n          const csvRegex = /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/;\n          const parts = line.split(csvRegex);\n          \n          if (parts.length >= 2) {\n            const field = parts[0].replace(/\"/g, '').trim();\n            const value = parts[1].replace(/\"/g, '').trim();\n            if (field && value) {\n              data[field] = value;\n            }\n          }\n        }\n        \n        const updateData = {\n          modularTimelineMonths: data['Modular Timeline Months'] || project.modularTimelineMonths,\n          siteBuiltTimelineMonths: data['Site Built Timeline Months'] || project.siteBuiltTimelineMonths\n        };\n        \n        await apiRequest(\"PATCH\", `/api/projects/${projectId}`, updateData);\n        queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n        toast({ title: \"Success\", description: \"Build time data uploaded successfully\" });\n      } catch (error) {\n        toast({ title: \"Error\", description: \"Failed to upload build time data\", variant: \"destructive\" });\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // CSV upload function for Cost Breakdown tab - handles detailed cost breakdown data\n  const uploadCostBreakdown = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const text = e.target?.result as string;\n        const lines = text.split('\\n').filter(line => line.trim());\n        \n        if (lines.length < 2) {\n          toast({ title: \"Error\", description: \"CSV file must contain at least a header and one data row\", variant: \"destructive\" });\n          return;\n        }\n        \n        // Parse the CSV header to understand the structure\n        const headers = lines[0].split(',').map(h => h.replace(/\"/g, '').trim());\n        \n        // Expected headers: MasterFormat Division, Site Built Total, Site Built $/sf, RaaP GC, RaaP Fab, RaaP Total, RaaP $/sf, Savings\n        const costBreakdowns = [];\n        \n        for (let i = 1; i < lines.length; i++) {\n          const line = lines[i].trim();\n          if (!line) continue;\n          \n          // Handle CSV parsing with quoted values containing commas\n          const csvRegex = /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/;\n          const parts = line.split(csvRegex).map(p => p.replace(/\"/g, '').trim());\n          \n          if (parts.length >= 4) {\n            const division = parts[0];\n            const siteBuiltTotal = parts[1].replace(/[\\$,()]/g, '');\n            const raapGc = parts[3] ? parts[3].replace(/[\\$,()]/g, '') : '0';\n            const raapFab = parts[4] ? parts[4].replace(/[\\$,()]/g, '') : '0';\n            \n            // Skip header rows and totals, process individual divisions\n            if (division && !division.toLowerCase().includes('total') && !division.toLowerCase().includes('masterformat')) {\n              costBreakdowns.push({\n                category: division,\n                siteBuiltCost: siteBuiltTotal || '0',\n                raapGcCost: raapGc || '0',\n                raapFabCost: raapFab || '0'\n              });\n            }\n          }\n        }\n        \n        if (costBreakdowns.length === 0) {\n          toast({ title: \"Error\", description: \"No valid cost breakdown data found in CSV file\", variant: \"destructive\" });\n          return;\n        }\n        \n        // Update cost breakdowns via API\n        await apiRequest(\"POST\", `/api/projects/${projectId}/cost-breakdowns`, { costBreakdowns });\n        queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n        queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId, \"cost-breakdowns\"] });\n        toast({ title: \"Success\", description: \"Cost breakdown data uploaded successfully\" });\n      } catch (error) {\n        console.error('Cost breakdown upload error:', error);\n        toast({ title: \"Error\", description: \"Failed to upload cost breakdown data\", variant: \"destructive\" });\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Use deterministic scores that match ProjectCard exactly\n  const scores = {\n    overall: projectScores.overall,\n    zoning: projectScores.individual.zoning,\n    massing: projectScores.individual.massing,\n    sustainability: projectScores.individual.sustainability,\n    cost: projectScores.individual.cost,\n    logistics: projectScores.individual.logistics,\n    buildTime: projectScores.individual.buildTime\n  };\n  \n  const overallScore = projectScores.overall;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 overflow-x-hidden\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8 flex justify-between items-start\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              onClick={() => navigate(`/projects/${projectId}/workflow`)}\n              className=\"text-raap-green hover:text-green-700 mb-4 p-0\"\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back to Workflow\n            </Button>\n            <h1 className=\"text-3xl font-bold text-raap-dark mb-2\">ModularFeasibility Assessment</h1>\n            <h2 className=\"text-xl text-gray-700 mb-2\">{project.name}</h2>\n            <div className=\"flex items-center text-gray-600 mb-2\">\n              <MapPin className=\"h-4 w-4 mr-1\" />\n              {project.address}\n            </div>\n            <p className=\"text-gray-600\">\n              {project.projectType === 'hotel' || project.projectType === 'hostel' ? \n                `${project.projectType.charAt(0).toUpperCase() + project.projectType.slice(1)} (Commercial Hospitality) • ${(project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0)} Rooms • ${project.targetFloors} Stories` :\n                `${project.projectType.charAt(0).toUpperCase() + project.projectType.slice(1)} Housing • ${totalUnits} Units • ${project.targetFloors} Stories`\n              }\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <div className={`text-4xl font-bold ${getScoreColor(overallScore)}`}>\n              {overallScore}\n            </div>\n            <div className=\"text-sm text-gray-500 mb-4\">Overall Score</div>\n            {project.modularFeasibilityComplete && (\n              <Badge className=\"bg-green-500 text-white mb-2\">\n                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                Complete\n              </Badge>\n            )}\n            <div>\n              <Button \n                onClick={handleDownloadReport}\n                variant=\"outline\"\n                className=\"mr-2\"\n              >\n                <Download className=\"h-4 w-4 mr-2\" />\n                Download Report\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Seven Tab Interface - Mobile: Vertical, Desktop: Horizontal */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          {/* Mobile Layout: Vertical Tabs */}\n          <div className=\"lg:hidden\">\n            <div className=\"flex flex-col space-y-2 mb-6\">\n              <TabsList className=\"grid grid-cols-1 w-full h-auto p-1 bg-gray-100\">\n                <TabsTrigger value=\"summary\" className=\"flex items-center justify-start space-x-3 px-4 py-3 text-left\">\n                  <FileText className=\"h-5 w-5\" />\n                  <span className=\"text-sm font-medium\">Summary</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"zoning\" className=\"flex items-center justify-start space-x-3 px-4 py-3 text-left\">\n                  <MapPin className=\"h-5 w-5\" />\n                  <span className=\"text-sm font-medium\">Zoning</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"massing\" className=\"flex items-center justify-start space-x-3 px-4 py-3 text-left\">\n                  <Building className=\"h-5 w-5\" />\n                  <span className=\"text-sm font-medium\">Massing</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"sustainability\" className=\"flex items-center justify-start space-x-3 px-4 py-3 text-left\">\n                  <Leaf className=\"h-5 w-5\" />\n                  <span className=\"text-sm font-medium\">Sustainability</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"pricing\" className=\"flex items-center justify-start space-x-3 px-4 py-3 text-left\">\n                  <DollarSign className=\"h-5 w-5\" />\n                  <span className=\"text-sm font-medium\">Cost</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"logistics\" className=\"flex items-center justify-start space-x-3 px-4 py-3 text-left\">\n                  <Truck className=\"h-5 w-5\" />\n                  <span className=\"text-sm font-medium\">Logistics</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"buildtime\" className=\"flex items-center justify-start space-x-3 px-4 py-3 text-left\">\n                  <Clock className=\"h-5 w-5\" />\n                  <span className=\"text-sm font-medium\">Build Time</span>\n                </TabsTrigger>\n              </TabsList>\n            </div>\n          </div>\n\n          {/* Desktop Layout: Horizontal Tabs */}\n          <div className=\"hidden lg:block\">\n            <TabsList className=\"grid grid-cols-7 w-full mb-8\">\n              <TabsTrigger value=\"summary\" className=\"flex items-center space-x-1\">\n                <FileText className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Summary</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"zoning\" className=\"flex items-center space-x-1\">\n                <MapPin className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Zoning</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"massing\" className=\"flex items-center space-x-1\">\n                <Building className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Massing</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"sustainability\" className=\"flex items-center space-x-1\">\n                <Leaf className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Sustainability</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"pricing\" className=\"flex items-center space-x-1\">\n                <DollarSign className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Cost</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"logistics\" className=\"flex items-center space-x-1\">\n                <Truck className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Logistics</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"buildtime\" className=\"flex items-center space-x-1\">\n                <Clock className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Build Time</span>\n              </TabsTrigger>\n            </TabsList>\n          </div>\n\n          {/* Summary Tab */}\n          <TabsContent value=\"summary\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <FileText className=\"h-5 w-5\" />\n                    <span>Project Summary</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={downloadSummaryData}\n                      className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download CSV\n                    </button>\n                    <label className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"file\"\n                        accept=\".csv\"\n                        onChange={(e) => {\n                          const file = e.target.files?.[0];\n                          if (file) uploadSummaryData(file);\n                        }}\n                        className=\"hidden\"\n                      />\n                      Upload CSV\n                    </label>\n                  </div>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Overall Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-blue-50 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Overall Modular Feasibility Assessment</h3>\n                      <div className=\"text-4xl font-bold text-green-600\">{overallScore}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-4\">\n                      <strong>Good fit for modular construction</strong> with a high Modular Feasibility score of {overallScore}/5 based on the six criteria below, with no additional restrictions introduced by modular construction.\n                    </p>\n                    <div className=\"bg-white rounded-lg p-4 border\">\n                      <h4 className=\"font-semibold text-gray-800 mb-2\">Assessment Summary</h4>\n                      <p className=\"text-sm text-gray-700\">\n                        {project.projectType === 'hotel' || project.projectType === 'hostel' ? (\n                          `${(project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0)} rooms of ${project.projectType.charAt(0).toUpperCase() + project.projectType.slice(1)} accommodation. ${project.queenUnits || 0} X Queen, ${project.kingUnits || 0} X King, ${project.oneBedUnits || 0} X One Bedroom. ${project.targetFloors} stories, ${project.buildingHeight} feet height, ${project.totalBuildingArea?.toLocaleString()} sf. Construction Type: ${project.constructionType}. ${project.targetParkingSpaces} Parking Spaces.`\n                        ) : project.isSample ? (\n                          '24 units of Affordable Housing, 6 X 1BR, 12 X 2BR, 6 X 3BR. Dimensions 146 (L) X 66 (W) X 36 (H). Construction Type: V-A. 24 Parking Spaces.'\n                        ) : (\n                          `103 units of ${project.projectType.charAt(0).toUpperCase() + project.projectType.slice(1)} Housing, 14 X Studios, 67 X 1BR, 22 X 2BR. Dimensions 519 (L) X 67 (W) X 57 (H). Construction Type: III-A. 100 Parking Spaces.`\n                        )}\n                      </p>\n                    </div>\n                  </div>\n\n                  {/* 6 Assessment Criteria Tiles */}\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor(scores.zoning)}`}>\n                        {scores.zoning}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Zoning</div>\n                      <div className=\"text-xs text-gray-400\">20% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor(scores.massing)}`}>\n                        {scores.massing}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Massing</div>\n                      <div className=\"text-xs text-gray-400\">15% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor(scores.sustainability)}`}>\n                        {scores.sustainability}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Sustainability</div>\n                      <div className=\"text-xs text-gray-400\">20% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor(scores.cost)}`}>\n                        {scores.cost}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Cost</div>\n                      <div className=\"text-xs text-gray-400\">20% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor(scores.logistics)}`}>\n                        {scores.logistics}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Logistics</div>\n                      <div className=\"text-xs text-gray-400\">15% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor(scores.buildTime)}`}>\n                        {scores.buildTime}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Build Time</div>\n                      <div className=\"text-xs text-gray-400\">10% weight</div>\n                    </div>\n                  </div>\n\n                  {/* Cost & Build Time Metrics */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                      <div className=\"text-3xl font-bold text-green-600\">\n                        ${(calculatedCosts.modularTotal / 1000000).toFixed(1)}M\n                      </div>\n                      <div className=\"text-sm text-gray-500\">Modular Cost</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                      <div className=\"text-3xl font-bold text-blue-600\">\n                        {project.modularTimelineMonths || 0} mo\n                      </div>\n                      <div className=\"text-sm text-gray-500\">Build Time</div>\n                    </div>\n                    {((project.costSavingsPercent && parseFloat(project.costSavingsPercent) > 0)) && (\n                      <div className=\"text-center p-4 bg-green-100 rounded-lg\">\n                        <div className=\"text-3xl font-bold text-green-600\">\n                          {calculatedCosts.costSavingsPercent.toFixed(1)}%\n                        </div>\n                        <div className=\"text-sm text-gray-500\">Cost Savings</div>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Site Map and Specifications Side by Side */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-4\">Site Location</h4>\n                      <ProjectSiteMap \n                        address={project.address}\n                        projectName={project.name}\n                        height=\"280px\"\n                        className=\"border rounded-lg\"\n                      />\n                    </div>\n                    \n                    <div className=\"bg-raap-green/10 border border-raap-green rounded-lg p-6\">\n                      <h4 className=\"font-semibold text-raap-green mb-4\">Project Requirements</h4>\n                      <div className=\"grid grid-cols-1 gap-2 text-sm text-gray-700\">\n                        {project.projectType === 'hotel' || project.projectType === 'hostel' ? (\n                          <>\n                            <div><strong>Total Rooms:</strong> {(project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0)}</div>\n                            {(project.queenUnits || 0) > 0 && <div><strong>Queen Rooms:</strong> {project.queenUnits} rooms</div>}\n                            {(project.kingUnits || 0) > 0 && <div><strong>King Rooms:</strong> {project.kingUnits} rooms</div>}\n                            {(project.oneBedUnits || 0) > 0 && <div><strong>One Bedroom Suites:</strong> {project.oneBedUnits} rooms</div>}\n                            <div><strong>ADA Compliance:</strong> {project.adaPercent}% of rooms</div>\n                            <div><strong>Floors:</strong> {project.targetFloors} stories</div>\n                            <div><strong>Building Height:</strong> {project.buildingHeight} feet</div>\n                            <div><strong>Total Building Area:</strong> {project.totalBuildingArea?.toLocaleString()} sf</div>\n                            <div><strong>Site Coverage:</strong> {project.siteCoverage}%</div>\n                            {project.constructionType && <div><strong>Construction Type:</strong> {project.constructionType}</div>}\n                            {project.moduleSize && <div><strong>Module Size:</strong> {project.moduleSize}</div>}\n                            {project.baseType && <div><strong>Foundation:</strong> {project.baseType}</div>}\n                            <div><strong>Parking Spaces:</strong> {project.targetParkingSpaces}</div>\n                          </>\n                        ) : (\n                          <>\n                            <div><strong>Total Units:</strong> {totalUnits}</div>\n                            {(project.studioUnits || 0) > 0 && <div><strong>Studio:</strong> {project.studioUnits} units</div>}\n                            {(project.oneBedUnits || 0) > 0 && <div><strong>1 Bedroom:</strong> {project.oneBedUnits} units</div>}\n                            {(project.twoBedUnits || 0) > 0 && <div><strong>2 Bedroom:</strong> {project.twoBedUnits} units</div>}\n                            {(project.threeBedUnits || 0) > 0 && <div><strong>3 Bedroom:</strong> {project.threeBedUnits} units</div>}\n                            <div><strong>Floors:</strong> {project.targetFloors}</div>\n                            {project.buildingDimensions && <div><strong>Dimensions:</strong> {project.buildingDimensions}</div>}\n                            {project.constructionType && <div><strong>Construction Type:</strong> {project.constructionType}</div>}\n                            <div><strong>Parking Spaces:</strong> {project.targetParkingSpaces}</div>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Additional tabs would be added here with the detailed assessments... */}\n          <TabsContent value=\"zoning\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <MapPin className=\"h-5 w-5\" />\n                    <span>Site & Zoning</span>\n                    <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-700 border-blue-300\">\n                      Score: {scores.zoning}/5.0\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={downloadZoningData}\n                      className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download CSV\n                    </button>\n                    <label className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"file\"\n                        accept=\".csv\"\n                        onChange={(e) => {\n                          const file = e.target.files?.[0];\n                          if (file) uploadZoningData(file);\n                        }}\n                        className=\"hidden\"\n                      />\n                      Upload CSV\n                    </label>\n                  </div>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-6 border border-blue-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-blue-800\">Zoning Assessment</h3>\n                      <div className=\"text-3xl font-bold text-blue-600\">{scores.zoning}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {scores.zoning}/5:</strong> Concessions are required to reduce open space and parking requirements. \n                      Modular construction does not introduce any additional waivers or restrictions for this site. \n                      The project qualifies for density bonus provisions under AB 1287 due to affordable unit mix.\n                    </p>\n                    <div className=\"text-xs text-blue-600 font-medium\">\n                      Weight: 20% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div className=\"bg-blue-50 rounded-lg p-4 mb-4\">\n                    <p className=\"text-sm text-gray-700\">\n                      <strong>Note:</strong> This is a preliminary zoning & code review. A more complete analysis will be completed during the SmartStart & Entitlement phases.\n                    </p>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Zoning District</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        {project.projectType === 'hotel' || project.projectType === 'hostel' ? (\n                          <>\n                            <p className=\"text-lg font-semibold text-raap-green\">Commercial Medium Density (CM)</p>\n                            <div className=\"mt-4 space-y-2\">\n                              <p><strong>Proposed Height:</strong> {project.buildingHeight} feet ({project.targetFloors} stories)</p>\n                              <p><strong>Site Coverage:</strong> {project.siteCoverage}% (within allowed limits)</p>\n                              <p><strong>Commercial Use:</strong> Hotel/Hospitality allowed</p>\n                            </div>\n                          </>\n                        ) : (\n                          <>\n                            <p className=\"text-lg font-semibold text-raap-green\">Residential Medium Density (RM)</p>\n                            <div className=\"mt-4 space-y-2\">\n                              <p><strong>Base Density:</strong> 17 DU/Acre Max</p>\n                              <p><strong>With AB 1287:</strong> Additional 100% density increase (34 DU/Acre Max)</p>\n                              <p><strong>Proposed:</strong> 24 DU/Acre (71% of max allowed)</p>\n                            </div>\n                          </>\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Site Information</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-2\">\n                          <p><strong>Address:</strong> {project.isSample ? '1234 Olivehurst Avenue' : project.address}</p>\n                          <p><strong>APN:</strong> 014-240-005</p>\n                          <p><strong>Lot Size:</strong> 1.0 acre (43,560 sf)</p>\n                          <p><strong>Current Use:</strong> {project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Vacant' : 'Vacant residential land'}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-3\">Compliance Analysis</h4>\n                    <div className=\"bg-white border rounded-lg overflow-hidden\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-gray-50\">\n                          <tr>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Requirement</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Required</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Proposed</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200\">\n                          <tr>\n                            <td className=\"px-4 py-3\">Height Limit</td>\n                            <td className=\"px-4 py-3\">{project.isSample ? '40 ft max' : '65 ft max'}</td>\n                            <td className=\"px-4 py-3\">{project.isSample ? '36 ft' : '57 ft'}</td>\n                            <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ Compliant</span></td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Front Setback</td>\n                            <td className=\"px-4 py-3\">20 ft min</td>\n                            <td className=\"px-4 py-3\">25 ft</td>\n                            <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ Compliant</span></td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Rear Setback</td>\n                            <td className=\"px-4 py-3\">20 ft min</td>\n                            <td className=\"px-4 py-3\">20 ft</td>\n                            <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ Compliant</span></td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Side Setbacks</td>\n                            <td className=\"px-4 py-3\">10 ft min each</td>\n                            <td className=\"px-4 py-3\">12 ft each</td>\n                            <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ Compliant</span></td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Open Space</td>\n                            <td className=\"px-4 py-3\">25% min</td>\n                            <td className=\"px-4 py-3\">46%</td>\n                            <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ Compliant</span></td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Parking</td>\n                            <td className=\"px-4 py-3\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? '1.0 spaces/room' : (project.isSample ? '1.5 spaces/unit' : '1.0 spaces/unit')}</td>\n                            <td className=\"px-4 py-3\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? '1.0 spaces/room' : (project.isSample ? '1 space/unit' : '0.97 spaces/unit')}</td>\n                            <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ Compliant</span></td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"massing\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Building className=\"h-5 w-5\" />\n                    <span>Massing</span>\n                    <Badge variant=\"outline\" className=\"bg-green-100 text-green-700 border-green-300\">\n                      Score: {scores.massing}/5.0\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={downloadMassingData}\n                      className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download CSV\n                    </button>\n                    <label className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"file\"\n                        accept=\".csv\"\n                        onChange={(e) => {\n                          const file = e.target.files?.[0];\n                          if (file) uploadMassingData(file);\n                        }}\n                        className=\"hidden\"\n                      />\n                      Upload CSV\n                    </label>\n                  </div>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Massing Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">{scores.massing}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {scores.massing}/5:</strong> No additional constraints caused by modular structure. \n                      {project.isSample ? 'Modular construction provides optimal efficiency for this unit configuration and site layout.' : 'We can achieve the goal of 103 units and unit mix (14 studios, 67 1BR, 22 2BR) as the traditional original design.'}\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 15% of overall feasibility score\n                    </div>\n                  </div>\n\n                  {/* Sub-Tabs - Mobile: Vertical, Desktop: Horizontal */}\n                  <Tabs defaultValue=\"specifications\" className=\"w-full\">\n                    {/* Mobile Layout: Vertical Tabs */}\n                    <div className=\"lg:hidden\">\n                      <TabsList className=\"grid grid-cols-1 w-full h-auto p-1 bg-gray-100\">\n                        <TabsTrigger value=\"specifications\" className=\"flex items-center justify-start px-4 py-3 text-left\">\n                          <span className=\"text-sm font-medium\">Specifications</span>\n                        </TabsTrigger>\n                        <TabsTrigger value=\"unitplans\" className=\"flex items-center justify-start px-4 py-3 text-left\">\n                          <span className=\"text-sm font-medium\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Room Plans' : 'Unit Plans'}</span>\n                        </TabsTrigger>\n                        <TabsTrigger value=\"floorplan\" className=\"flex items-center justify-start px-4 py-3 text-left\">\n                          <span className=\"text-sm font-medium\">Floor Plan</span>\n                        </TabsTrigger>\n                        <TabsTrigger value=\"3dview\" className=\"flex items-center justify-start px-4 py-3 text-left\">\n                          <span className=\"text-sm font-medium\">3D View</span>\n                        </TabsTrigger>\n                        <TabsTrigger value=\"siteplan\" className=\"flex items-center justify-start px-4 py-3 text-left\">\n                          <span className=\"text-sm font-medium\">Site Plan</span>\n                        </TabsTrigger>\n                      </TabsList>\n                    </div>\n\n                    {/* Desktop Layout: Horizontal Tabs */}\n                    <div className=\"hidden lg:block\">\n                      <TabsList className=\"grid w-full grid-cols-5 bg-gray-100\">\n                        <TabsTrigger value=\"specifications\" className=\"text-sm\">Specifications</TabsTrigger>\n                        <TabsTrigger value=\"unitplans\" className=\"text-sm\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Room Plans' : 'Unit Plans'}</TabsTrigger>\n                        <TabsTrigger value=\"floorplan\" className=\"text-sm\">Floor Plan</TabsTrigger>\n                        <TabsTrigger value=\"3dview\" className=\"text-sm\">3D View</TabsTrigger>\n                        <TabsTrigger value=\"siteplan\" className=\"text-sm\">Site Plan</TabsTrigger>\n                      </TabsList>\n                    </div>\n\n                    {/* Specifications Sub-Tab */}\n                    <TabsContent value=\"specifications\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        {/* Unit Mix Summary matching the image */}\n                        <div className=\"bg-white border rounded-lg p-6\">\n                          <h4 className=\"font-semibold text-gray-800 mb-6\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Room Mix Summary' : 'Unit Mix Summary'}</h4>\n                          {project.projectType === 'hotel' || project.projectType === 'hostel' ? (\n                            // Hotel/Hostel projects: show Queen/King/One Bedroom/ADA mix\n                            <div className=\"grid grid-cols-4 gap-6\">\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-purple-600 mb-2\">{project.queenUnits || 0}</div>\n                                <div className=\"font-semibold text-gray-700\">Queen Rooms</div>\n                                <div className=\"text-sm text-gray-500\">320 SF Average</div>\n                              </div>\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-blue-600 mb-2\">{project.kingUnits || 0}</div>\n                                <div className=\"font-semibold text-gray-700\">King Rooms</div>\n                                <div className=\"text-sm text-gray-500\">350 SF Average</div>\n                              </div>\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-green-600 mb-2\">{project.oneBedUnits || 0}</div>\n                                <div className=\"font-semibold text-gray-700\">One Bedroom</div>\n                                <div className=\"text-sm text-gray-500\">520 SF Average</div>\n                              </div>\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-orange-600 mb-2\">{project.adaPercent || 0}%</div>\n                                <div className=\"font-semibold text-gray-700\">ADA Compliant</div>\n                                <div className=\"text-sm text-gray-500\">Required Accessibility</div>\n                              </div>\n                            </div>\n                          ) : project.isSample ? (\n                            // Sample projects: show original 1BR/2BR/3BR mix\n                            <div className=\"grid grid-cols-3 gap-6\">\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-green-600 mb-2\">6</div>\n                                <div className=\"font-semibold text-gray-700\">1-Bedroom Units</div>\n                                <div className=\"text-sm text-gray-500\">563 SF Average</div>\n                              </div>\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-blue-600 mb-2\">12</div>\n                                <div className=\"font-semibold text-gray-700\">2-Bedroom Units</div>\n                                <div className=\"text-sm text-gray-500\">813 SF Average</div>\n                              </div>\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-orange-600 mb-2\">6</div>\n                                <div className=\"font-semibold text-gray-700\">3-Bedroom Units</div>\n                                <div className=\"text-sm text-gray-500\">980 SF Average</div>\n                              </div>\n                            </div>\n                          ) : (\n                            // NEW projects: show Studio/1BR/2BR mix\n                            <div className=\"grid grid-cols-3 gap-6\">\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-purple-600 mb-2\">14</div>\n                                <div className=\"font-semibold text-gray-700\">Studio Units</div>\n                                <div className=\"text-sm text-gray-500\">450 SF Average</div>\n                              </div>\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-green-600 mb-2\">67</div>\n                                <div className=\"font-semibold text-gray-700\">1-Bedroom Units</div>\n                                <div className=\"text-sm text-gray-500\">600 SF Average</div>\n                              </div>\n                              <div className=\"text-center p-6 bg-gray-50 rounded-lg\">\n                                <div className=\"text-4xl font-bold text-blue-600 mb-2\">22</div>\n                                <div className=\"font-semibold text-gray-700\">2-Bedroom Units</div>\n                                <div className=\"text-sm text-gray-500\">850 SF Average</div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                          <div>\n                            <h4 className=\"font-semibold text-raap-dark mb-3\">Building Specifications</h4>\n                            <div className=\"bg-white border rounded-lg p-4\">\n                              <div className=\"space-y-3\">\n                                <div className=\"flex justify-between\">\n                                  <span>{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Total Rooms' : 'Total Units'}</span>\n                                  <span className=\"font-semibold\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? `${(project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0)} rooms` : project.isSample ? '24 units' : '103 units'}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Building Stories</span>\n                                  <span className=\"font-semibold\">{project.targetFloors} {project.targetFloors === 1 ? 'story' : 'stories'}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Building Height</span>\n                                  <span className=\"font-semibold\">{project.buildingHeight ? `${project.buildingHeight} feet` : project.isSample ? '32 feet' : '57 feet'}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Total Building Area</span>\n                                  <span className=\"font-semibold\">{project.totalBuildingArea ? `${project.totalBuildingArea.toLocaleString()} sf` : '19,008 sf'}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Site Coverage</span>\n                                  <span className=\"font-semibold\">{project.siteCoverage ? `${project.siteCoverage}%` : '14.5%'}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Parking Spaces</span>\n                                  <span className=\"font-semibold\">{project.targetParkingSpaces} spaces</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <h4 className=\"font-semibold text-raap-dark mb-3\">Modular Specifications</h4>\n                            <div className=\"bg-white border rounded-lg p-4\">\n                              <div className=\"space-y-3\">\n                                <div className=\"flex justify-between\">\n                                  <span>Module Size</span>\n                                  <span className=\"font-semibold\">{project.moduleSize || '14\\' x 60\\''}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Total Modules</span>\n                                  <span className=\"font-semibold\">60 modules</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Construction Type</span>\n                                  <span className=\"font-semibold\">{project.constructionType || (project.isSample ? 'V-A' : 'III-A')}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Structural System</span>\n                                  <span className=\"font-semibold\">{project.isSample ? 'Light Frame' : 'Wood'}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Base</span>\n                                  <span className=\"font-semibold\">{project.baseType || (project.isSample ? 'Concrete Slab' : 'Concrete Podium')}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                  <span>Shipping Weight</span>\n                                  <span className=\"font-semibold\">~45 tons each</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <h4 className=\"font-semibold text-raap-dark mb-3\">Modular vs Site-Built Comparison</h4>\n                          <div className=\"bg-white border rounded-lg overflow-hidden\">\n                            <table className=\"w-full\">\n                              <thead className=\"bg-gray-50\">\n                                <tr>\n                                  <th className=\"px-4 py-3 text-left font-semibold\">Aspect</th>\n                                  <th className=\"px-4 py-3 text-left font-semibold\">Site-Built</th>\n                                  <th className=\"px-4 py-3 text-left font-semibold\">RaaP Modular</th>\n                                  <th className=\"px-4 py-3 text-left font-semibold\">Impact</th>\n                                </tr>\n                              </thead>\n                              <tbody className=\"divide-y divide-gray-200\">\n                                <tr>\n                                  <td className=\"px-4 py-3\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Room Count' : 'Unit Count'}</td>\n                                  <td className=\"px-4 py-3\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? `${(project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0)} rooms` : project.isSample ? '24 units' : '103 units'}</td>\n                                  <td className=\"px-4 py-3\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? `${(project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0)} rooms` : project.isSample ? '24 units' : '103 units'}</td>\n                                  <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ No Change</span></td>\n                                </tr>\n                                <tr>\n                                  <td className=\"px-4 py-3\">{project.isSample ? 'Building Footprint' : 'Gross Sq. Ft.'}</td>\n                                  <td className=\"px-4 py-3\">{project.totalBuildingArea ? `${Math.round(project.totalBuildingArea * 0.98).toLocaleString()} sf` : project.isSample ? '6,336 sf' : '142,924 sf'}</td>\n                                  <td className=\"px-4 py-3\">{project.totalBuildingArea ? `${project.totalBuildingArea.toLocaleString()} sf` : project.isSample ? '6,336 sf' : '143,648 sf'}</td>\n                                  <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ No Change</span></td>\n                                </tr>\n                                <tr>\n                                  <td className=\"px-4 py-3\">Floor Area Ratio</td>\n                                  <td className=\"px-4 py-3\">0.44</td>\n                                  <td className=\"px-4 py-3\">0.44</td>\n                                  <td className=\"px-4 py-3\"><span className=\"text-green-600 font-semibold\">✓ No Change</span></td>\n                                </tr>\n                                <tr>\n                                  <td className=\"px-4 py-3\">Structural Efficiency</td>\n                                  <td className=\"px-4 py-3\">Standard</td>\n                                  <td className=\"px-4 py-3\">Optimized</td>\n                                  <td className=\"px-4 py-3\"><span className=\"text-blue-600 font-semibold\">↑ Improved</span></td>\n                                </tr>\n                                <tr>\n                                  <td className=\"px-4 py-3\">Design Flexibility</td>\n                                  <td className=\"px-4 py-3\">High</td>\n                                  <td className=\"px-4 py-3\">Moderate</td>\n                                  <td className=\"px-4 py-3\"><span className=\"text-orange-600 font-semibold\">↓ Reduced</span></td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Unit Plans Sub-Tab */}\n                    <TabsContent value=\"unitplans\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        <h4 className=\"font-semibold text-raap-dark mb-4\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Individual Room Floor Plans' : 'Individual Unit Floor Plans'}</h4>\n                        {project.projectType === 'hotel' || project.projectType === 'hostel' ? (\n                          // Hotel/Hostel Room Plans\n                          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                            <div className=\"text-center\">\n                              <img \n                                src={doubleQueenImage} \n                                alt=\"Double Queen Room Floor Plan - 320 sf\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '400px' }}\n                              />\n                              <h5 className=\"font-semibold text-purple-600 mb-1\">Queen Room</h5>\n                              <p className=\"text-sm text-gray-600 mb-2\">320 sf • {project.queenUnits || 0} rooms</p>\n                              <div className=\"text-xs text-gray-500 space-y-1\">\n                                <div>Two Queen Beds</div>\n                                <div>Full Bathroom</div>\n                                <div>Work Desk & Chair</div>\n                              </div>\n                            </div>\n                            <div className=\"text-center\">\n                              <img \n                                src={kingStudioImage} \n                                alt=\"King Studio Room Floor Plan - 350 sf\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '400px' }}\n                              />\n                              <h5 className=\"font-semibold text-blue-600 mb-1\">King Room</h5>\n                              <p className=\"text-sm text-gray-600 mb-2\">350 sf • {project.kingUnits || 0} rooms</p>\n                              <div className=\"text-xs text-gray-500 space-y-1\">\n                                <div>One King Bed</div>\n                                <div>Full Bathroom</div>\n                                <div>Sitting Area & Desk</div>\n                              </div>\n                            </div>\n                            <div className=\"text-center\">\n                              <img \n                                src={oneBedroomHotelImage} \n                                alt=\"One Bedroom Suite Floor Plan - 520 sf\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '400px' }}\n                              />\n                              <h5 className=\"font-semibold text-green-600 mb-1\">One Bedroom Suite</h5>\n                              <p className=\"text-sm text-gray-600 mb-2\">520 sf • {project.oneBedUnits || 0} rooms</p>\n                              <div className=\"text-xs text-gray-500 space-y-1\">\n                                <div>Separate Bedroom & Living</div>\n                                <div>Full Bathroom</div>\n                                <div>Kitchenette & Work Area</div>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          // Traditional Unit Plans\n                          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                            <div className=\"text-center\">\n                              <img \n                                src={oneBedImage} \n                                alt=\"1 Bedroom Unit Floor Plan - 563 sf\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '400px' }}\n                              />\n                              <h5 className=\"font-semibold text-green-600 mb-1\">1 Bedroom Unit</h5>\n                              <p className=\"text-sm text-gray-600 mb-2\">563 sf • 6 units</p>\n                              <div className=\"text-xs text-gray-500 space-y-1\">\n                                <div>1 Bedroom, 1 Bathroom</div>\n                                <div>Kitchen, Living Room</div>\n                                <div>In-unit Washer/Dryer</div>\n                              </div>\n                            </div>\n                            <div className=\"text-center\">\n                              <img \n                                src={twoBedImage} \n                                alt=\"2 Bedroom Unit Floor Plan - 813 sf\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '400px' }}\n                              />\n                              <h5 className=\"font-semibold text-blue-600 mb-1\">2 Bedroom Unit</h5>\n                              <p className=\"text-sm text-gray-600 mb-2\">813 sf • 12 units</p>\n                              <div className=\"text-xs text-gray-500 space-y-1\">\n                                <div>2 Bedrooms, 2 Bathrooms</div>\n                                <div>Kitchen, Living/Dining</div>\n                                <div>In-unit Washer/Dryer</div>\n                              </div>\n                            </div>\n                            <div className=\"text-center\">\n                              <img \n                                src={threeBedImage} \n                                alt=\"3 Bedroom Unit Floor Plan - 980 sf\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '400px' }}\n                              />\n                              <h5 className=\"font-semibold text-orange-600 mb-1\">3 Bedroom Unit</h5>\n                              <p className=\"text-sm text-gray-600 mb-2\">980 sf • 6 units</p>\n                              <div className=\"text-xs text-gray-500 space-y-1\">\n                                <div>3 Bedrooms, 2 Bathrooms</div>\n                                <div>Kitchen, Living/Dining</div>\n                                <div>In-unit Washer/Dryer</div>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </TabsContent>\n\n                    {/* Floor Plan Sub-Tab */}\n                    <TabsContent value=\"floorplan\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        <h4 className=\"font-semibold text-raap-dark mb-4\">Building Floor Plans</h4>\n                        {project.projectType === 'hotel' || project.projectType === 'hostel' ? (\n                          // Hotel Floor Plans\n                          <div className=\"space-y-8\">\n                            <div className=\"text-center\">\n                              <img \n                                src={hotelGroundFloorImage} \n                                alt=\"Ground Floor Plan - Hotel lobby, common areas, and guest rooms\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '60vh' }}\n                              />\n                              <h5 className=\"font-semibold text-gray-800 mb-2\">Ground Floor Plan (25-GF)</h5>\n                              <p className=\"text-sm text-gray-600 mb-4\">\n                                Ground floor featuring hotel lobby, front desk, common areas, and guest rooms with efficient circulation.\n                              </p>\n                            </div>\n\n                            <div className=\"text-center\">\n                              <img \n                                src={hotelTypicalFloorImage} \n                                alt=\"Typical Floor Plan - Hotel guest rooms layout\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '60vh' }}\n                              />\n                              <h5 className=\"font-semibold text-gray-800 mb-2\">Typical Floor Plan (25-TF)</h5>\n                              <p className=\"text-sm text-gray-600 mb-4\">\n                                Typical guest floor showing Queen rooms, King rooms, and One Bedroom suites with central corridor access.\n                              </p>\n                            </div>\n\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n                              <div className=\"bg-white border rounded-lg p-4\">\n                                <h6 className=\"font-semibold text-gray-800 mb-3\">Hotel Layout Features</h6>\n                                <ul className=\"text-sm text-gray-600 space-y-1\">\n                                  <li>• Central corridor guest room access</li>\n                                  <li>• Lobby and front desk on ground floor</li>\n                                  <li>• {(project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0)} total guest rooms</li>\n                                  <li>• Mix of Queen, King, and Suite layouts</li>\n                                  <li>• Guest amenity areas</li>\n                                </ul>\n                              </div>\n                              <div className=\"bg-white border rounded-lg p-4\">\n                                <h6 className=\"font-semibold text-gray-800 mb-3\">Accessibility & Code</h6>\n                                <ul className=\"text-sm text-gray-600 space-y-1\">\n                                  <li>• {project.adaPercent}% ADA compliant rooms</li>\n                                  <li>• Fire-rated corridor separation</li>\n                                  <li>• Emergency egress compliance</li>\n                                  <li>• Wide corridors for guest access</li>\n                                  <li>• Elevator access to all floors</li>\n                                  <li>• Commercial building code compliance</li>\n                                </ul>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          // Traditional Building Floor Plans\n                          <div className=\"space-y-6\">\n                            <div className=\"text-center\">\n                              <img \n                                src={project.isSample ? serenityFloorPlanImage : vallejoFloorPlanImage} \n                                alt=\"Building floor plan showing unit layout and circulation\"\n                                className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-3\"\n                                style={{ maxHeight: '70vh' }}\n                              />\n                              <h5 className=\"font-semibold text-gray-800 mb-2\">Typical Floor Plan</h5>\n                              <p className=\"text-sm text-gray-600\">Shows unit layout, circulation, and common areas</p>\n                            </div>\n                            \n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\n                              <div className=\"bg-white border rounded-lg p-4\">\n                                <h6 className=\"font-semibold text-raap-dark mb-3\">Floor Plan Features</h6>\n                                <ul className=\"text-sm text-gray-700 space-y-2\">\n                                  <li>• Double-loaded corridor for efficiency</li>\n                                  <li>• Central stairwell with elevator access</li>\n                                  <li>• Natural light in all units</li>\n                                  <li>• Compliant with accessibility requirements</li>\n                                  <li>• Optimized for modular construction grid</li>\n                                </ul>\n                              </div>\n                              <div className=\"bg-white border rounded-lg p-4\">\n                                <h6 className=\"font-semibold text-raap-dark mb-3\">Circulation & Access</h6>\n                                <ul className=\"text-sm text-gray-700 space-y-2\">\n                                  <li>• Two means of egress per code</li>\n                                  <li>• ADA compliant unit distribution</li>\n                                  <li>• Efficient corridor width (6 feet)</li>\n                                  <li>• Direct exterior access from ground floor</li>\n                                  <li>• Covered parking beneath building</li>\n                                </ul>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </TabsContent>\n\n                    {/* 3D View Sub-Tab */}\n                    <TabsContent value=\"3dview\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        <h4 className=\"font-semibold text-raap-dark mb-4\">3D Building Renderings</h4>\n                        <div className=\"text-center\">\n                          <img \n                            src={project.projectType === 'hotel' || project.projectType === 'hostel' ? hotel3DViewImage : project.isSample ? serenityBuildingRenderingImage : vallejoBuildingRenderingImage} \n                            alt={project.projectType === 'hotel' || project.projectType === 'hostel' ? \"3D rendering of the modular hotel building\" : \"3D rendering of the modular apartment building\"}\n                            className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-4\"\n                            style={{ maxHeight: '70vh' }}\n                          />\n                          <h5 className=\"font-semibold text-gray-800 mb-2\">Exterior Building Rendering</h5>\n                          <p className=\"text-sm text-gray-600\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? \"Multi-story modular hotel building with contemporary commercial design\" : \"Three-story modular apartment building with contemporary design\"}</p>\n                        </div>\n                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\n                          <div className=\"bg-white border rounded-lg p-4\">\n                            <h6 className=\"font-semibold text-raap-dark mb-3\">Design Features</h6>\n                            <ul className=\"text-sm text-gray-700 space-y-2\">\n                              <li>• Contemporary architectural style</li>\n                              <li>• Mixed exterior materials (siding, brick)</li>\n                              <li>• Energy-efficient windows</li>\n                              <li>• Covered parking at ground level</li>\n                              <li>• Landscaped common areas</li>\n                              <li>• Balconies for upper floor units</li>\n                            </ul>\n                          </div>\n                          <div className=\"bg-white border rounded-lg p-4\">\n                            <h6 className=\"font-semibold text-raap-dark mb-3\">Modular Advantages</h6>\n                            <ul className=\"text-sm text-gray-700 space-y-2\">\n                              <li>• Factory-controlled quality</li>\n                              <li>• Consistent material finishes</li>\n                              <li>• Reduced on-site construction time</li>\n                              <li>• Enhanced structural performance</li>\n                              <li>• Better weather protection during build</li>\n                              <li>• Improved dimensional accuracy</li>\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Site Plan Sub-Tab */}\n                    <TabsContent value=\"siteplan\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        <h4 className=\"font-semibold text-raap-dark mb-4\">Site Layout & Planning</h4>\n                        <div className=\"text-center\">\n                          <img \n                            src={project.isSample ? serenitySitePlanImage : vallejoSitePlanImage} \n                            alt=\"Site plan showing building placement, parking, and landscaping\"\n                            className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-4\"\n                            style={{ maxHeight: '70vh' }}\n                          />\n                          <h5 className=\"font-semibold text-gray-800 mb-2\">Site Plan Layout</h5>\n                          <p className=\"text-sm text-gray-600\">Building placement, parking layout, and site circulation</p>\n                        </div>\n                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\n                          <div className=\"bg-white border rounded-lg p-4\">\n                            <h6 className=\"font-semibold text-raap-dark mb-3\">Site Statistics</h6>\n                            <div className=\"space-y-2 text-sm\">\n                              <div className=\"flex justify-between\">\n                                <span>Total Site Area</span>\n                                <span className=\"font-semibold\">1.75 acres</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span>Building Coverage</span>\n                                <span className=\"font-semibold\">14.5%</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span>Parking Spaces</span>\n                                <span className=\"font-semibold\">24 spaces</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span>Open Space</span>\n                                <span className=\"font-semibold\">65%</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span>Landscaping</span>\n                                <span className=\"font-semibold\">20%</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"bg-white border rounded-lg p-4\">\n                            <h6 className=\"font-semibold text-raap-dark mb-3\">Site Features</h6>\n                            <ul className=\"text-sm text-gray-700 space-y-2\">\n                              <li>• Surface parking with covered spaces</li>\n                              <li>• Central courtyard for residents</li>\n                              <li>• Perimeter landscaping and screening</li>\n                              <li>• Accessible pathways throughout</li>\n                              <li>• Stormwater management features</li>\n                              <li>• Utility service access points</li>\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n                  </Tabs>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"sustainability\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Leaf className=\"h-5 w-5\" />\n                    <span>Sustainability</span>\n                    <Badge variant=\"outline\" className=\"bg-green-100 text-green-700 border-green-300\">\n                      Score: {scores.sustainability}/5.0\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={downloadSustainabilityData}\n                      className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download CSV\n                    </button>\n                    <label className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"file\"\n                        accept=\".csv\"\n                        onChange={(e) => {\n                          const file = e.target.files?.[0];\n                          if (file) uploadSustainabilityData(file);\n                        }}\n                        className=\"hidden\"\n                      />\n                      Upload CSV\n                    </label>\n                  </div>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Sustainability Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">{scores.sustainability}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {scores.sustainability}/5:</strong> Project readily supports Net Zero Energy (NZE) and PHIUS with minimal site-built upgrades. \n                      Will require enhancements to foundation, walls, roof, windows, HVAC & lighting in addition to investment in batteries & solar power. \n                      Modular construction can reduce waste generation and increase installation quality.\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 20% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Net Zero Energy (NZE) Readiness</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <span>Solar PV Ready Roof</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Ready</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Battery Storage Prep</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Included</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>High-Performance Envelope</span>\n                            <span className=\"text-orange-600 font-semibold\">⚠ Upgrade Required</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>HVAC Efficiency</span>\n                            <span className=\"text-orange-600 font-semibold\">⚠ Upgrade Required</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>LED Lighting Package</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Standard</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">PHIUS Certification Path</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <span>Air Tightness</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Factory Controlled</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Thermal Bridge Reduction</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Optimized</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Window Performance</span>\n                            <span className=\"text-orange-600 font-semibold\">⚠ Upgrade Required</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Ventilation System</span>\n                            <span className=\"text-orange-600 font-semibold\">⚠ HRV Required</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Quality Assurance</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Factory QC</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-3\">Required Enhancements for NZE/PHIUS</h4>\n                    <div className=\"bg-white border rounded-lg overflow-hidden\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-gray-50\">\n                          <tr>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Component</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Standard Spec</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Enhanced Spec</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Cost Impact</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200\">\n                          <tr>\n                            <td className=\"px-4 py-3\">Walls</td>\n                            <td className=\"px-4 py-3\">R-19 Insulation</td>\n                            <td className=\"px-4 py-3\">R-24+ Continuous</td>\n                            <td className=\"px-4 py-3 text-orange-600\">+$8K</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Windows</td>\n                            <td className=\"px-4 py-3\">U-0.30 Standard</td>\n                            <td className=\"px-4 py-3\">U-0.15 Triple Glazed</td>\n                            <td className=\"px-4 py-3 text-orange-600\">+$25K</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">HVAC</td>\n                            <td className=\"px-4 py-3\">Standard Heat Pump</td>\n                            <td className=\"px-4 py-3\">High-Efficiency HP + HRV</td>\n                            <td className=\"px-4 py-3 text-orange-600\">+$35K</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Solar + Battery</td>\n                            <td className=\"px-4 py-3\">None</td>\n                            <td className=\"px-4 py-3\">120kW Solar + 200kWh Battery</td>\n                            <td className=\"px-4 py-3 text-orange-600\">+$180K</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-green-50 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-green-800 mb-2\">Modular Construction Advantages</h4>\n                    <ul className=\"text-sm text-green-700 space-y-1\">\n                      <li>• Factory-controlled environment ensures consistent air sealing</li>\n                      <li>• Reduced thermal bridging through optimized assembly</li>\n                      <li>• Quality control testing for each module before delivery</li>\n                      <li>• Minimized construction waste (up to 50% reduction)</li>\n                      <li>• Reduced on-site disruption and faster installation</li>\n                      <li>• Pre-wired electrical and plumbing reduces field errors</li>\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"pricing\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <DollarSign className=\"h-5 w-5\" />\n                  <span>Cost Analysis</span>\n                  <Badge variant=\"outline\" className=\"ml-auto bg-green-100 text-green-700 border-green-300\">\n                    Score: {scores.cost}/5.0\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Cost Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">{scores.cost}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {scores.cost}/5:</strong> ${(calculatedCosts.modularTotal / 1000000).toFixed(1)}M (${Math.round(calculatedCosts.modularCostPerSf)}/sf; ${Math.round(calculatedCosts.modularCostPerUnit).toLocaleString()}/unit) with Prevailing Wage. \n                      {calculatedCosts.costSavingsPercent.toFixed(1)}% savings over site-built. Modular construction provides cost advantages.\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 20% of overall feasibility score\n                    </div>\n                  </div>\n\n                  {/* Detailed MasterFormat Cost Breakdown */}\n                  <div>\n                    <div className=\"mb-4\">\n                      <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-3 mb-4\">\n                        <h4 className=\"font-semibold text-raap-dark\">Detailed MasterFormat Cost Breakdown</h4>\n                        <div className=\"flex flex-col sm:flex-row gap-2 sm:space-x-2\">\n                          <button\n                            onClick={downloadCostBreakdown}\n                            className=\"inline-flex items-center justify-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-gray-600 bg-white hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-offset-1 focus:ring-blue-500\"\n                            data-testid=\"button-download-cost-breakdown\"\n                          >\n                            <svg className=\"h-3 w-3 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                            </svg>\n                            Download CSV\n                          </button>\n                          <label className=\"inline-flex items-center justify-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-gray-600 bg-white hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-offset-1 focus:ring-blue-500 cursor-pointer\">\n                            <input\n                              type=\"file\"\n                              accept=\".csv\"\n                              className=\"hidden\"\n                              onChange={(e) => {\n                                const file = e.target.files?.[0];\n                                if (file) uploadCostBreakdown(file);\n                              }}\n                            />\n                            <svg className=\"h-3 w-3 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                            </svg>\n                            Upload CSV\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"-mx-4 sm:mx-0\">\n                      <div className=\"bg-white border rounded-lg overflow-x-auto\">\n                        <table className=\"min-w-[1000px] w-max text-sm whitespace-nowrap\">\n                        <thead className=\"bg-gray-700 text-white\">\n                          <tr>\n                            <th className=\"px-3 py-3 text-left font-semibold\">MasterFormat Division</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">Site Built Total</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">Site Built $/sf</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">RaaP GC</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">RaaP Fab</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">RaaP Total</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">RaaP $/sf</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">Savings</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200\">\n                          {/* Concrete, Masonry & Metals Section - Using real cost breakdown data */}\n                          {(() => {\n                            // Calculate totals for the section\n                            const concreteData = getCostBreakdownByCategory(costBreakdowns, '03 Concrete');\n                            const masonryData = getCostBreakdownByCategory(costBreakdowns, '04 Masonry');\n                            const metalData = getCostBreakdownByCategory(costBreakdowns, '05 Metal');\n                            \n                            const siteBuiltTotal = (parseFloat(concreteData?.siteBuiltCost || '0') + \n                                                   parseFloat(masonryData?.siteBuiltCost || '0') + \n                                                   parseFloat(metalData?.siteBuiltCost || '0'));\n                            const raapGcTotal = (parseFloat(concreteData?.raapGcCost || '0') + \n                                               parseFloat(masonryData?.raapGcCost || '0') + \n                                               parseFloat(metalData?.raapGcCost || '0'));\n                            const raapFabTotal = (parseFloat(concreteData?.raapFabCost || '0') + \n                                                 parseFloat(masonryData?.raapFabCost || '0') + \n                                                 parseFloat(metalData?.raapFabCost || '0'));\n                            const raapTotal = raapGcTotal + raapFabTotal;\n                            const savings = siteBuiltTotal - raapTotal;\n                            \n                            return (\n                              <tr className=\"bg-blue-50\">\n                                <td className=\"px-3 py-2 font-semibold text-blue-800\">Concrete, Masonry & Metals</td>\n                                <MobileCurrencyCell amount={siteBuiltTotal} className=\"font-semibold\" />\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuiltTotal, project)}</td>\n                                <MobileCurrencyCell amount={raapGcTotal} />\n                                <MobileCurrencyCell amount={raapFabTotal} />\n                                <MobileCurrencyCell amount={raapTotal} className=\"font-semibold\" />\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600 font-semibold\">\n                                  <span className=\"sm:hidden\">{savings >= 0 ? formatCostForMobile(formatCurrency(savings)) : `(${formatCostForMobile(formatCurrency(Math.abs(savings)))})`}</span>\n                                  <span className=\"hidden sm:inline\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</span>\n                                </td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '03 Concrete');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">03 Concrete</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '04 Masonry');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">04 Masonry</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{raapFab === 0 ? '$0' : formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '05 Metal');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">05 Metal</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n\n                          {/* Rooms Section - Using real cost breakdown data */}\n                          {(() => {\n                            // Calculate totals for the Rooms section\n                            const woodData = getCostBreakdownByCategory(costBreakdowns, '06 Wood & Plastics');\n                            const thermalData = getCostBreakdownByCategory(costBreakdowns, '07 Thermal & Moisture Protection');\n                            const openingsData = getCostBreakdownByCategory(costBreakdowns, '08 Openings');\n                            const finishesData = getCostBreakdownByCategory(costBreakdowns, '09 Finishes');\n                            \n                            const siteBuiltTotal = (parseFloat(woodData?.siteBuiltCost || '0') + \n                                                   parseFloat(thermalData?.siteBuiltCost || '0') + \n                                                   parseFloat(openingsData?.siteBuiltCost || '0') + \n                                                   parseFloat(finishesData?.siteBuiltCost || '0'));\n                            const raapGcTotal = (parseFloat(woodData?.raapGcCost || '0') + \n                                               parseFloat(thermalData?.raapGcCost || '0') + \n                                               parseFloat(openingsData?.raapGcCost || '0') + \n                                               parseFloat(finishesData?.raapGcCost || '0'));\n                            const raapFabTotal = (parseFloat(woodData?.raapFabCost || '0') + \n                                                 parseFloat(thermalData?.raapFabCost || '0') + \n                                                 parseFloat(openingsData?.raapFabCost || '0') + \n                                                 parseFloat(finishesData?.raapFabCost || '0'));\n                            const raapTotal = raapGcTotal + raapFabTotal;\n                            const savings = siteBuiltTotal - raapTotal;\n                            \n                            return (\n                              <tr className=\"bg-green-50\">\n                                <td className=\"px-3 py-2 font-semibold text-green-800\">Rooms</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(siteBuiltTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuiltTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGcTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFabTotal)}</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600 font-semibold\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '06 Wood & Plastics');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">06 Wood & Plastics</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '07 Thermal & Moisture Protection');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">07 Thermal & Moisture Protection</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '08 Openings');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">08 Openings</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '09 Finishes');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">09 Finishes</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n\n                          {/* Equipment & Special Construction Section - Using real cost breakdown data */}\n                          {(() => {\n                            // Calculate totals for the Equipment & Special Construction section\n                            const specialtiesData = getCostBreakdownByCategory(costBreakdowns, '10 Specialties');\n                            const equipmentData = getCostBreakdownByCategory(costBreakdowns, '11 Equipment');\n                            const furnishingData = getCostBreakdownByCategory(costBreakdowns, '12 Furnishing');\n                            const specialConstructionData = getCostBreakdownByCategory(costBreakdowns, '13 Special Construction');\n                            \n                            const siteBuiltTotal = (parseFloat(specialtiesData?.siteBuiltCost || '0') + \n                                                   parseFloat(equipmentData?.siteBuiltCost || '0') + \n                                                   parseFloat(furnishingData?.siteBuiltCost || '0') + \n                                                   parseFloat(specialConstructionData?.siteBuiltCost || '0'));\n                            const raapGcTotal = (parseFloat(specialtiesData?.raapGcCost || '0') + \n                                               parseFloat(equipmentData?.raapGcCost || '0') + \n                                               parseFloat(furnishingData?.raapGcCost || '0') + \n                                               parseFloat(specialConstructionData?.raapGcCost || '0'));\n                            const raapFabTotal = (parseFloat(specialtiesData?.raapFabCost || '0') + \n                                                 parseFloat(equipmentData?.raapFabCost || '0') + \n                                                 parseFloat(furnishingData?.raapFabCost || '0') + \n                                                 parseFloat(specialConstructionData?.raapFabCost || '0'));\n                            const raapTotal = raapGcTotal + raapFabTotal;\n                            const savings = siteBuiltTotal - raapTotal;\n                            \n                            return (\n                              <tr className=\"bg-orange-50\">\n                                <td className=\"px-3 py-2 font-semibold text-orange-800\">Equipment & Special Construction</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(siteBuiltTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuiltTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGcTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFabTotal)}</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600 font-semibold\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '10 Specialties');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">10 Specialties</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{raapGc === 0 ? '$0' : formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '11 Equipment');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">11 Equipment</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{raapFab === 0 ? '$0' : formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{savings === 0 ? '$0' : (savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`)}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '12 Furnishing');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">12 Furnishing</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '13 Special Construction');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">13 Special Construction</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{raapFab === 0 ? '$0' : formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{savings === 0 ? '$0' : (savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`)}</td>\n                              </tr>\n                            );\n                          })()}\n\n                          {/* MEPs Section - Using real cost breakdown data */}\n                          {(() => {\n                            // Calculate totals for the MEPs section\n                            const fireData = getCostBreakdownByCategory(costBreakdowns, '21 Fire Suppression');\n                            const plumbingData = getCostBreakdownByCategory(costBreakdowns, '22 Plumbing');\n                            const hvacData = getCostBreakdownByCategory(costBreakdowns, '23 HVAC');\n                            const electricalData = getCostBreakdownByCategory(costBreakdowns, '26 Electrical');\n                            \n                            const siteBuiltTotal = (parseFloat(fireData?.siteBuiltCost || '0') + \n                                                   parseFloat(plumbingData?.siteBuiltCost || '0') + \n                                                   parseFloat(hvacData?.siteBuiltCost || '0') + \n                                                   parseFloat(electricalData?.siteBuiltCost || '0'));\n                            const raapGcTotal = (parseFloat(fireData?.raapGcCost || '0') + \n                                               parseFloat(plumbingData?.raapGcCost || '0') + \n                                               parseFloat(hvacData?.raapGcCost || '0') + \n                                               parseFloat(electricalData?.raapGcCost || '0'));\n                            const raapFabTotal = (parseFloat(fireData?.raapFabCost || '0') + \n                                                 parseFloat(plumbingData?.raapFabCost || '0') + \n                                                 parseFloat(hvacData?.raapFabCost || '0') + \n                                                 parseFloat(electricalData?.raapFabCost || '0'));\n                            const raapTotal = raapGcTotal + raapFabTotal;\n                            const savings = siteBuiltTotal - raapTotal;\n                            \n                            return (\n                              <tr className=\"bg-purple-50\">\n                                <td className=\"px-3 py-2 font-semibold text-purple-800\">MEPs</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(siteBuiltTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuiltTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGcTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFabTotal)}</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600 font-semibold\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '21 Fire Suppression');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">21 Fire Suppression</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '22 Plumbing');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">22 Plumbing</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '23 HVAC');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">23 HVAC</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '26 Electrical');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">26 Electrical</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n\n                          {/* Site Work Section - Using real cost breakdown data */}\n                          {(() => {\n                            // Calculate totals for the Site Work section\n                            const earthworkData = getCostBreakdownByCategory(costBreakdowns, '31 Earthwork');\n                            const exteriorData = getCostBreakdownByCategory(costBreakdowns, '32 Exterior Improvements');\n                            const utilitiesData = getCostBreakdownByCategory(costBreakdowns, '33 Utilities');\n                            // Note: 02 Existing Conditions uses static values, not included in calculations\n                            \n                            const siteBuiltTotal = (parseFloat(earthworkData?.siteBuiltCost || '0') + \n                                                   parseFloat(exteriorData?.siteBuiltCost || '0') + \n                                                   parseFloat(utilitiesData?.siteBuiltCost || '0') + \n                                                   124789); // Static value for 02 Existing Conditions\n                            const raapGcTotal = (parseFloat(earthworkData?.raapGcCost || '0') + \n                                               parseFloat(exteriorData?.raapGcCost || '0') + \n                                               parseFloat(utilitiesData?.raapGcCost || '0') + \n                                               124789); // Static value for 02 Existing Conditions\n                            const raapFabTotal = (parseFloat(earthworkData?.raapFabCost || '0') + \n                                                 parseFloat(exteriorData?.raapFabCost || '0') + \n                                                 parseFloat(utilitiesData?.raapFabCost || '0')); // Fab cost is 0 for site work\n                            const raapTotal = raapGcTotal + raapFabTotal;\n                            const savings = siteBuiltTotal - raapTotal;\n                            \n                            return (\n                              <tr className=\"bg-brown-50 border-gray-300 border-t-2\">\n                                <td className=\"px-3 py-2 font-semibold text-yellow-900\">Site Work</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(siteBuiltTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuiltTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGcTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFabTotal)}</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-green-600 font-semibold\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">02 Existing Conditions</td>\n                            <td className=\"px-3 py-2 text-right\">$124,789</td>\n                            <td className=\"px-3 py-2 text-right\">$5</td>\n                            <td className=\"px-3 py-2 text-right\">$124,789</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                            <td className=\"px-3 py-2 text-right\">$124,789</td>\n                            <td className=\"px-3 py-2 text-right\">$5</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                          </tr>\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '31 Earthwork');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">31 Earthwork</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{raapFab === 0 ? '$0' : formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-green-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '32 Exterior Improvements');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">32 Exterior Improvements</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{raapFab === 0 ? '$0' : formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{savings === 0 ? '$0' : (savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`)}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '33 Utilities');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">33 Utilities</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{raapFab === 0 ? '$0' : formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{savings === 0 ? '$0' : (savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`)}</td>\n                              </tr>\n                            );\n                          })()}\n\n                          {/* GC Charges Section - Using real cost breakdown data */}\n                          {(() => {\n                            // Calculate totals for the GC Charges section\n                            const generalReqData = getCostBreakdownByCategory(costBreakdowns, '01 General Requirements');\n                            const feesData = getCostBreakdownByCategory(costBreakdowns, '00 Fees');\n                            \n                            const siteBuiltTotal = (parseFloat(generalReqData?.siteBuiltCost || '0') + \n                                                   parseFloat(feesData?.siteBuiltCost || '0'));\n                            const raapGcTotal = (parseFloat(generalReqData?.raapGcCost || '0') + \n                                               parseFloat(feesData?.raapGcCost || '0'));\n                            const raapFabTotal = (parseFloat(generalReqData?.raapFabCost || '0') + \n                                                 parseFloat(feesData?.raapFabCost || '0'));\n                            const raapTotal = raapGcTotal + raapFabTotal;\n                            const savings = siteBuiltTotal - raapTotal;\n                            \n                            return (\n                              <tr className=\"bg-gray-100\">\n                                <td className=\"px-3 py-2 font-semibold text-gray-800\">GC Charges</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(siteBuiltTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuiltTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGcTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFabTotal)}</td>\n                                <td className=\"px-3 py-2 text-right font-semibold\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600 font-semibold\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '01 General Requirements');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">01 General Requirements</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                          {(() => {\n                            const itemData = getCostBreakdownByCategory(costBreakdowns, '00 Fees');\n                            if (!itemData) return null;\n                            const siteBuilt = parseFloat(itemData.siteBuiltCost || '0');\n                            const raapGc = parseFloat(itemData.raapGcCost || '0');\n                            const raapFab = parseFloat(itemData.raapFabCost || '0');\n                            const raapTotal = raapGc + raapFab;\n                            const savings = siteBuilt - raapTotal;\n                            return (\n                              <tr>\n                                <td className=\"px-3 py-2 pl-6\">00 Fees</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(siteBuilt)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(siteBuilt, project)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapGc)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapFab)}</td>\n                                <td className=\"px-3 py-2 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-2 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-2 text-right text-red-600\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n\n                          {/* Total Row - Using real cost breakdown data */}\n                          {(() => {\n                            // Calculate project totals from all cost breakdowns\n                            const allCosts = costBreakdowns || [];\n                            \n                            const siteBuiltTotal = allCosts.reduce((sum, item) => sum + parseFloat(item.siteBuiltCost || '0'), 0);\n                            const raapGcTotal = allCosts.reduce((sum, item) => sum + parseFloat(item.raapGcCost || '0'), 0);\n                            const raapFabTotal = allCosts.reduce((sum, item) => sum + parseFloat(item.raapFabCost || '0'), 0);\n                            const raapTotal = raapGcTotal + raapFabTotal;\n                            const savings = siteBuiltTotal - raapTotal;\n                            \n                            return (\n                              <tr className=\"bg-gray-700 text-white font-bold text-base\">\n                                <td className=\"px-3 py-3\">PROJECT TOTAL</td>\n                                <td className=\"px-3 py-3 text-right\">{formatCurrency(siteBuiltTotal)}</td>\n                                <td className=\"px-3 py-3 text-right\">{calculateCostPerSf(siteBuiltTotal, project)}</td>\n                                <td className=\"px-3 py-3 text-right\">{formatCurrency(raapGcTotal)}</td>\n                                <td className=\"px-3 py-3 text-right\">{formatCurrency(raapFabTotal)}</td>\n                                <td className=\"px-3 py-3 text-right\">{formatCurrency(raapTotal)}</td>\n                                <td className=\"px-3 py-3 text-right\">{calculateCostPerSf(raapTotal, project)}</td>\n                                <td className=\"px-3 py-3 text-right text-red-400\">{savings >= 0 ? formatCurrency(savings) : `(${formatCurrency(Math.abs(savings))})`}</td>\n                              </tr>\n                            );\n                          })()}\n                        </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Project Cost Summary</h4>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex justify-between p-3 bg-blue-50 rounded border border-blue-200\">\n                          <span>RaaP Modular Cost</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold text-blue-600\">{formatCurrency(calculatedCosts.modularTotal.toString())}</div>\n                            <div className=\"text-sm text-gray-600\">${Math.round(calculatedCosts.modularCostPerSf)}/sf • {formatNumber(project.modularTimelineMonths || 0)} Months</div>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between p-3 bg-gray-50 rounded\">\n                          <span>Traditional Site-Built</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold\">{formatCurrency(calculatedCosts.siteBuiltTotal.toString())}</div>\n                            <div className=\"text-sm text-gray-600\">${Math.round(calculatedCosts.siteBuiltCostPerSf)}/sf • {formatNumber(project.siteBuiltTimelineMonths || 0)} Months</div>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between p-3 bg-green-50 rounded border border-green-200\">\n                          <span>Cost Savings</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold text-green-600\">{formatCurrency(calculatedCosts.savings.toString())}</div>\n                            <div className=\"text-sm text-gray-600\">{calculatedCosts.costSavingsPercent.toFixed(1)}% savings</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Per Room Analysis' : 'Per Unit Analysis'}</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-2\">\n                          <div className=\"flex justify-between\">\n                            <span>{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Number of Rooms' : 'Number of Units'}</span>\n                            <span className=\"font-semibold\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? (project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0) : (project.studioUnits || 0) + (project.oneBedUnits || 0) + (project.twoBedUnits || 0) + (project.threeBedUnits || 0)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span>{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Average Room Area' : 'Average Unit Area'}</span>\n                            <span className=\"font-semibold\">792 sf</span>\n                          </div>\n                          <hr className=\"my-2\" />\n                          <div className=\"flex justify-between\">\n                            <span>{project.projectType === 'hotel' || project.projectType === 'hostel' ? 'Cost per Room (RaaP)' : 'Cost per Unit (RaaP)'}</span>\n                            <span className=\"font-semibold text-blue-600\">{formatCurrency(project.modularCostPerUnit || 0)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span>Cost per Sq Ft (RaaP)</span>\n                            <span className=\"font-semibold text-blue-600\">{formatCurrency(project.modularCostPerSf || 0)}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"logistics\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Truck className=\"h-5 w-5\" />\n                    <span>Logistics</span>\n                    <Badge variant=\"outline\" className=\"bg-green-100 text-green-700 border-green-300\">\n                      Score: {scores.logistics}/5.0\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={downloadLogisticsData}\n                      className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download CSV\n                    </button>\n                    <label className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"file\"\n                        accept=\".csv\"\n                        onChange={(e) => {\n                          const file = e.target.files?.[0];\n                          if (file) uploadLogisticsData(file);\n                        }}\n                        className=\"hidden\"\n                      />\n                      Upload CSV\n                    </label>\n                  </div>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Logistics Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">{scores.logistics}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {scores.logistics}/5:</strong> The site presents ideal logistics conditions for modular construction with excellent highway access, ample staging space, and minimal delivery constraints. The proximity to Highway 70 and straightforward route from the Tracy fabrication facility ensures efficient module transportation and installation.\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 15% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-4\">Delivery Route: {project.factoryLocation || \"Tracy, CA\"} to Project Site</h4>\n                    <RouteMap \n                      destinationAddress={project.address}\n                      projectName={project.name}\n                      factoryLocation={project.factoryLocation}\n                      height=\"400px\"\n                      className=\"w-full\"\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Transportation & Access</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <span>Highway Access</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Excellent</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Route Complexity</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Simple</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Street Width</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Adequate</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Turning Radius</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Sufficient</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Bridge Clearances</span>\n                            <span className=\"text-green-600 font-semibold\">✓ No Issues</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Site Staging</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <span>Staging Area</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Ample Space</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Crane Access</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Multiple Points</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Utility Coordination</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Straightforward</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Traffic Impact</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Minimal</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Neighbor Impact</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Low</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-3\">Delivery Schedule</h4>\n                    <div className=\"bg-white border rounded-lg overflow-hidden\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-gray-50\">\n                          <tr>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Phase</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Modules</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Duration</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Notes</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200\">\n                          <tr>\n                            <td className=\"px-4 py-3\">Foundation Prep</td>\n                            <td className=\"px-4 py-3\">0</td>\n                            <td className=\"px-4 py-3\">4 weeks</td>\n                            <td className=\"px-4 py-3\">Site preparation concurrent with module fabrication</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Ground Floor</td>\n                            <td className=\"px-4 py-3\">8 modules</td>\n                            <td className=\"px-4 py-3\">1 week</td>\n                            <td className=\"px-4 py-3\">2 modules per day delivery & installation</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Second Floor</td>\n                            <td className=\"px-4 py-3\">8 modules</td>\n                            <td className=\"px-4 py-3\">1 week</td>\n                            <td className=\"px-4 py-3\">Same delivery pace maintained</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Third Floor</td>\n                            <td className=\"px-4 py-3\">8 modules</td>\n                            <td className=\"px-4 py-3\">1 week</td>\n                            <td className=\"px-4 py-3\">Final installation phase</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-green-50 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-green-800 mb-2\">Logistics Advantages</h4>\n                    <ul className=\"text-sm text-green-700 space-y-1\">\n                      <li>• Direct highway access minimizes delivery time and costs</li>\n                      <li>• Large, flat site provides excellent staging opportunities</li>\n                      <li>• No special permits required for standard module transport</li>\n                      <li>• Multiple crane positions possible for efficient installation</li>\n                      <li>• Standard utility coordination required</li>\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"buildtime\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Clock className=\"h-5 w-5\" />\n                    <span>Build Time</span>\n                    <Badge variant=\"outline\" className=\"bg-green-100 text-green-700 border-green-300\">\n                      Score: {scores.buildTime}/5.0\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={downloadBuildTimeData}\n                      className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download CSV\n                    </button>\n                    <label className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"file\"\n                        accept=\".csv\"\n                        onChange={(e) => {\n                          const file = e.target.files?.[0];\n                          if (file) uploadBuildTimeData(file);\n                        }}\n                        className=\"hidden\"\n                      />\n                      Upload CSV\n                    </label>\n                  </div>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Build Time Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">{scores.buildTime}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {scores.buildTime}/5:</strong> {project.projectType === 'hotel' || project.projectType === 'hostel' ? '24 months total project delivery using modular approach vs 32 months for site built. Savings of 8 months (25% timeline reduction) for hotel construction.' : '30.5 months total project delivery using modular approach vs 41 months for site built. Savings of 10.5 months (25% timeline reduction).'}\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 10% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Timeline Comparison</h4>\n                      <div className=\"grid grid-cols-3 gap-3\">\n                        <div className=\"text-center p-4 bg-blue-50 rounded border border-blue-200\">\n                          <div className=\"text-2xl font-bold text-blue-600\">{formatNumber(project.modularTimelineMonths)}</div>\n                          <div className=\"font-semibold text-blue-600\">RaaP Modular</div>\n                          <div className=\"text-xs text-gray-600\">months total</div>\n                        </div>\n                        <div className=\"text-center p-4 bg-gray-50 rounded border\">\n                          <div className=\"text-2xl font-bold text-gray-600\">{formatNumber(project.siteBuiltTimelineMonths)}</div>\n                          <div className=\"font-semibold text-gray-600\">Site-Built</div>\n                          <div className=\"text-xs text-gray-600\">months total</div>\n                        </div>\n                        <div className=\"text-center p-4 bg-green-50 rounded border border-green-200\">\n                          <div className=\"text-2xl font-bold text-green-600\">{project.siteBuiltTimelineMonths && project.modularTimelineMonths ? Math.round(((Number(project.siteBuiltTimelineMonths) - Number(project.modularTimelineMonths)) / Number(project.siteBuiltTimelineMonths)) * 100) : 0}%</div>\n                          <div className=\"font-semibold text-green-600\">Time Savings</div>\n                          <div className=\"text-xs text-gray-600\">reduction</div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Key Advantages</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <span>Parallel Fabrication</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Major Advantage</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Weather Independence</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Factory Control</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Quality Control</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Reduced Rework</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Site Coordination</span>\n                            <span className=\"text-blue-600 font-semibold\">→ Simplified</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Inspection Process</span>\n                            <span className=\"text-blue-600 font-semibold\">→ Streamlined</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-4\">Timeline Visualization</h4>\n                    <div className=\"w-full\">\n                      <img \n                        src={timelineComparisonImage} \n                        alt=\"Timeline comparison showing modular vs site-built construction phases and duration\"\n                        className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white\"\n                        style={{ maxHeight: '50vh' }}\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-3\">Phase-by-Phase Breakdown</h4>\n                    <div className=\"bg-white border rounded-lg overflow-hidden\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-gray-50\">\n                          <tr>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Project Phase</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Site-Built</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">RaaP Modular</th>\n                            <th className=\"px-4 py-3 text-left font-semibold\">Time Savings</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200\">\n                          <tr>\n                            <td className=\"px-4 py-3\">Pre-Construction</td>\n                            <td className=\"px-4 py-3\">8 months</td>\n                            <td className=\"px-4 py-3\">8 months</td>\n                            <td className=\"px-4 py-3\">0 months</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Foundation & Site</td>\n                            <td className=\"px-4 py-3\">4 months</td>\n                            <td className=\"px-4 py-3\">4 months</td>\n                            <td className=\"px-4 py-3\">0 months</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Structure & MEP</td>\n                            <td className=\"px-4 py-3\">18 months</td>\n                            <td className=\"px-4 py-3\">8 months</td>\n                            <td className=\"px-4 py-3 text-green-600 font-semibold\">10 months</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Finishes & MEP</td>\n                            <td className=\"px-4 py-3\">8 months</td>\n                            <td className=\"px-4 py-3\">7.5 months</td>\n                            <td className=\"px-4 py-3 text-green-600 font-semibold\">0.5 months</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-4 py-3\">Final Inspections</td>\n                            <td className=\"px-4 py-3\">3 months</td>\n                            <td className=\"px-4 py-3\">3 months</td>\n                            <td className=\"px-4 py-3\">0 months</td>\n                          </tr>\n                          <tr className=\"bg-gray-50 font-semibold\">\n                            <td className=\"px-4 py-3\">Total Duration</td>\n                            <td className=\"px-4 py-3\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? '32 months' : '41 months'}</td>\n                            <td className=\"px-4 py-3\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? '24 months' : '30.5 months'}</td>\n                            <td className=\"px-4 py-3 text-green-600\">{project.projectType === 'hotel' || project.projectType === 'hostel' ? '8 months' : '10.5 months'}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-green-50 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-green-800 mb-2\">Modular Time Advantages</h4>\n                    <ul className=\"text-sm text-green-700 space-y-1\">\n                      <li>• Factory fabrication concurrent with site preparation</li>\n                      <li>• Weather-independent production maintains schedule</li>\n                      <li>• Quality control reduces field rework and delays</li>\n                      <li>• Simplified inspection process with factory pre-approval</li>\n                      <li>• Reduced coordination complexity on-site</li>\n                      <li>• Earlier occupancy and faster return on investment</li>\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Complete Assessment Button */}\n        {!project.modularFeasibilityComplete && (\n          <Card className=\"mt-8\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"font-semibold text-raap-dark mb-1\">Complete ModularFeasibility Assessment</h3>\n                  <p className=\"text-gray-600\">\n                    Once you've reviewed all the assessment criteria and are satisfied with the feasibility analysis, \n                    mark this application as complete to proceed to SmartStart.\n                  </p>\n                </div>\n                <Button\n                  className=\"bg-raap-green hover:bg-green-700\"\n                  onClick={() => markAsComplete.mutate()}\n                  disabled={markAsComplete.isPending}\n                  data-testid=\"button-complete-assessment\"\n                >\n                  {markAsComplete.isPending ? \"Completing...\" : \"Complete Assessment\"}\n                  <ArrowRight className=\"h-4 w-4 ml-2\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {project.modularFeasibilityComplete && (\n          <Card className=\"mt-8 bg-green-50 border-green-200\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"h-6 w-6 text-green-600\" />\n                  <div>\n                    <h3 className=\"font-semibold text-green-800\">Assessment Complete</h3>\n                    <p className=\"text-green-700\">\n                      Your ModularFeasibility assessment is complete. You can now proceed to SmartStart.\n                    </p>\n                  </div>\n                </div>\n                <Button\n                  className=\"bg-raap-green hover:bg-green-700\"\n                  onClick={() => navigate(`/projects/${projectId}/workflow`)}\n                  data-testid=\"button-continue-workflow\"\n                >\n                  Continue to Workflow\n                  <ArrowRight className=\"h-4 w-4 ml-2\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n    </div>\n  );\n}","size_bytes":202730},"client/src/pages/ProjectDetail.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Header from \"@/components/Header\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  ArrowLeft, \n  Download, \n  MapPin, \n  Building, \n  FileText, \n  Leaf, \n  DollarSign, \n  Truck, \n  Clock,\n  Star,\n  Home,\n  Layout,\n  Layers,\n  Map\n} from \"lucide-react\";\nimport { generateProjectPDF } from \"@/lib/pdfGenerator\";\nimport type { Project, CostBreakdown } from \"@shared/schema\";\nimport { useCostTotals, formatCurrency } from \"@/lib/useCostTotals\";\n\n// Import generated images for Massing tab\nimport floorPlanImage from \"@assets/Vallejo Floor Plan 2_1757773129441.png\";\nimport buildingRenderingImage from \"@assets/Vallejo Building 2_1757773134770.png\";\nimport sitePlanImage from \"@assets/Vallejo Site 2_1757773140827.png\";\nimport unitPlansImage from \"@assets/generated_images/apartment_unit_floor_plans_5298881c.png\";\nimport oneBedImage from \"@assets/1 Bed_1754836945408.png\";\nimport twoBedImage from \"@assets/2 Bed_1754837154542.png\";\nimport threeBedImage from \"@assets/3 Bed_1754837154543.png\";\nimport tracyRouteImage from \"@assets/Tracy to Olivehurst_1754838644869.png\";\nimport zoningMapImage from \"@assets/Serinity Zoning Map_1754839677898.png\";\nimport olivehurstMapImage from \"@assets/Olivehurst Map_1754839713206.png\";\nimport timelineComparisonImage from \"@assets/image_1756583015103.png\";\n\nfunction ProjectDetail() {\n  const [, params] = useRoute(\"/projects/:id\");\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const projectId = params?.id;\n  const [activeTab, setActiveTab] = useState(\"summary\");\n\n  const { data: project, isLoading, error } = useQuery<Project>({\n    queryKey: [\"/api/projects\", projectId],\n    enabled: !!projectId,\n  });\n\n  const { data: costBreakdowns, error: costError } = useQuery<CostBreakdown[]>({\n    queryKey: [\"/api/projects\", projectId, \"cost-breakdowns\"],\n    enabled: !!projectId,\n  });\n\n  // SINGLE SOURCE OF TRUTH: Use shared cost calculation utility\n  const costTotals = useCostTotals(project || {} as Project, costBreakdowns || []);\n\n  // Handle authentication errors\n  if (error && isUnauthorizedError(error)) {\n    toast({\n      title: \"Unauthorized\",\n      description: \"You are logged out. Logging in again...\",\n      variant: \"destructive\",\n    });\n    setTimeout(() => {\n      window.location.href = \"/api/login\";\n    }, 500);\n  }\n\n  if (costError && isUnauthorizedError(costError)) {\n    toast({\n      title: \"Unauthorized\",\n      description: \"You are logged out. Logging in again...\",\n      variant: \"destructive\",\n    });\n    setTimeout(() => {\n      window.location.href = \"/api/login\";\n    }, 500);\n  }\n\n  const handleDownloadReport = () => {\n    if (project) {\n      generateProjectPDF(project, costBreakdowns || []);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse space-y-8\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"h-64 bg-gray-200 rounded-lg\"></div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {[1, 2, 3, 4, 5, 6].map((i) => (\n                <div key={i} className=\"h-48 bg-gray-200 rounded-lg\"></div>\n              ))}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Project not found</h2>\n            <Button onClick={() => navigate(\"/\")} className=\"mt-4\">\n              Back to Dashboard\n            </Button>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  const totalUnits = (project.studioUnits || 0) + (project.oneBedUnits || 0) + \n                    (project.twoBedUnits || 0) + (project.threeBedUnits || 0);\n\n  const getScoreColor = (score: string) => {\n    const numScore = parseFloat(score);\n    if (numScore >= 4) return \"text-raap-green\";\n    if (numScore >= 3) return \"text-raap-mustard\";\n    return \"text-red-600\";\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8 flex justify-between items-start\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              onClick={() => navigate(\"/\")}\n              className=\"text-raap-green hover:text-green-700 mb-4 p-0\"\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back to Dashboard\n            </Button>\n            <h2 className=\"text-3xl font-bold text-raap-dark mb-2\">{(project as Project).name}</h2>\n            <div className=\"flex items-center text-gray-600 mb-2\">\n              <MapPin className=\"h-4 w-4 mr-1\" />\n              {(project as Project).address}\n            </div>\n            <p className=\"text-gray-600\">\n              {(project as Project).projectType.charAt(0).toUpperCase() + (project as Project).projectType.slice(1)} Housing • {totalUnits} Units • {(project as Project).targetFloors} Stories\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <div className={`text-4xl font-bold ${getScoreColor((project as Project).overallScore || \"0\")}`}>\n              {(project as Project).overallScore || \"0.0\"}\n            </div>\n            <div className=\"text-sm text-gray-500 mb-4\">Overall Score</div>\n            <Button \n              onClick={handleDownloadReport}\n              className=\"bg-raap-green hover:bg-green-700\"\n            >\n              <Download className=\"h-4 w-4 mr-2\" />\n              Download Report\n            </Button>\n          </div>\n        </div>\n\n        {/* Seven Tab Interface */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <TabsList className=\"grid grid-cols-7 w-full mb-8\">\n            <TabsTrigger value=\"summary\" className=\"flex items-center space-x-1\">\n              <FileText className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Summary</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"zoning\" className=\"flex items-center space-x-1\">\n              <MapPin className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Zoning</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"massing\" className=\"flex items-center space-x-1\">\n              <Building className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Massing</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"sustainability\" className=\"flex items-center space-x-1\">\n              <Leaf className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Sustainability</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"pricing\" className=\"flex items-center space-x-1\">\n              <DollarSign className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Cost</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"logistics\" className=\"flex items-center space-x-1\">\n              <Truck className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Logistics</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"buildtime\" className=\"flex items-center space-x-1\">\n              <Clock className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Build Time</span>\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Summary Tab */}\n          <TabsContent value=\"summary\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <FileText className=\"h-5 w-5\" />\n                  <span>Project Summary</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Overall Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-blue-50 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Overall Modular Feasibility Assessment</h3>\n                      <div className=\"text-4xl font-bold text-green-600\">4.4/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-4\">\n                      <strong>Good fit for modular construction</strong> with a high Modular Feasibility score of 4.4/5 based on the six criteria below, with no additional restrictions introduced by modular construction.\n                    </p>\n                    <div className=\"bg-white rounded-lg p-4 border\">\n                      <h4 className=\"font-semibold text-gray-800 mb-2\">Assessment Summary</h4>\n                      <p className=\"text-sm text-gray-700\">\n                        24 units of Affordable Housing (6 x 1BR, 12 x 2BR, and 6 x 3BR units). \n                        Dimensions: 146' X 66'. 3 Floors. Construction Type: V-A. \n                        Total 24 units with 24 parking spaces.\n                      </p>\n                    </div>\n                  </div>\n\n                  {/* 6 Assessment Criteria Tiles */}\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor((project as Project).zoningScore || \"0\")}`}>\n                        {(project as Project).zoningScore || \"0.0\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Zoning</div>\n                      <div className=\"text-xs text-gray-400\">20% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor((project as Project).massingScore || \"0\")}`}>\n                        {(project as Project).massingScore || \"0.0\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Massing</div>\n                      <div className=\"text-xs text-gray-400\">15% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor((project as Project).sustainabilityScore || \"0\")}`}>\n                        {(project as Project).sustainabilityScore || \"0.0\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Sustainability</div>\n                      <div className=\"text-xs text-gray-400\">20% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor((project as Project).costScore || \"0\")}`}>\n                        {(project as Project).costScore || \"0.0\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Cost</div>\n                      <div className=\"text-xs text-gray-400\">20% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor((project as Project).logisticsScore || \"0\")}`}>\n                        {(project as Project).logisticsScore || \"0.0\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Logistics</div>\n                      <div className=\"text-xs text-gray-400\">15% weight</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-white rounded-lg border\">\n                      <div className={`text-2xl font-bold ${getScoreColor((project as Project).buildTimeScore || \"0\")}`}>\n                        {(project as Project).buildTimeScore || \"0.0\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500 font-medium\">Build Time</div>\n                      <div className=\"text-xs text-gray-400\">10% weight</div>\n                    </div>\n                  </div>\n\n                  {/* Cost & Build Time Metrics */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                      <div className=\"text-3xl font-bold text-green-600\">\n                        ${(costTotals.modularTotal / 1000000).toFixed(1)}M\n                      </div>\n                      <div className=\"text-sm text-gray-500\">Modular Cost</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                      <div className=\"text-3xl font-bold text-blue-600\">\n                        {(project as Project).modularTimelineMonths || 0} mo\n                      </div>\n                      <div className=\"text-sm text-gray-500\">Build Time</div>\n                    </div>\n                    {costTotals.costSavingsPercent > 0 && (\n                      <div className=\"text-center p-4 bg-green-100 rounded-lg\">\n                        <div className=\"text-3xl font-bold text-green-600\">\n                          {costTotals.costSavingsPercent.toFixed(1)}%\n                        </div>\n                        <div className=\"text-sm text-gray-500\">Cost Savings</div>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Image and Specifications Side by Side */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                    <div>\n                      <img \n                        src={olivehurstMapImage} \n                        alt=\"Serinity Village project location in Olivehurst, California showing regional context and site accessibility\" \n                        className=\"w-full h-64 rounded-lg object-contain bg-white border\"\n                      />\n                    </div>\n                    \n                    <div className=\"bg-raap-green/10 border border-raap-green rounded-lg p-6\">\n                      <h4 className=\"font-semibold text-raap-green mb-4\">Project Requirements</h4>\n                      <div className=\"grid grid-cols-1 gap-2 text-sm text-gray-700\">\n                        <div><strong>Total Units:</strong> {totalUnits}</div>\n                        {((project as Project).studioUnits || 0) > 0 && <div><strong>Studio:</strong> {(project as Project).studioUnits} units</div>}\n                        {((project as Project).oneBedUnits || 0) > 0 && <div><strong>1 Bedroom:</strong> {(project as Project).oneBedUnits} units</div>}\n                        {((project as Project).twoBedUnits || 0) > 0 && <div><strong>2 Bedroom:</strong> {(project as Project).twoBedUnits} units</div>}\n                        {((project as Project).threeBedUnits || 0) > 0 && <div><strong>3 Bedroom:</strong> {(project as Project).threeBedUnits} units</div>}\n                        <div><strong>Floors:</strong> {(project as Project).targetFloors}</div>\n                        {(project as Project).buildingDimensions && <div><strong>Dimensions:</strong> {(project as Project).buildingDimensions}</div>}\n                        {(project as Project).constructionType && <div><strong>Construction Type:</strong> {(project as Project).constructionType}</div>}\n                        <div><strong>Parking Spaces:</strong> {(project as Project).targetParkingSpaces}</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Detailed Scoring Breakdown */}\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-semibold text-raap-dark text-lg\">Detailed Assessment Summary</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <h5 className=\"font-semibold text-blue-700\">Zoning Assessment</h5>\n                          <div className=\"text-xl font-bold text-blue-600\">4/5</div>\n                        </div>\n                        <p className=\"text-sm text-gray-700\">Concessions required to reduce open space and parking requirements. Modular construction does not introduce any additional waivers or restrictions for this site.</p>\n                      </div>\n\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <h5 className=\"font-semibold text-green-700\">Massing Assessment</h5>\n                          <div className=\"text-xl font-bold text-green-600\">5/5</div>\n                        </div>\n                        <p className=\"text-sm text-gray-700\">No additional constraints caused by modular structure. We can achieve the goal of 24 units and unit mix as the traditional original design.</p>\n                      </div>\n\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <h5 className=\"font-semibold text-green-700\">Sustainability Assessment</h5>\n                          <div className=\"text-xl font-bold text-green-600\">5/5</div>\n                        </div>\n                        <p className=\"text-sm text-gray-700\">Project readily supports Net Zero Energy (NZE) and PHIUS with minimal site-built upgrades. Will require enhancements to foundation, walls, roof, windows, HVAC & lighting.</p>\n                      </div>\n\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <h5 className=\"font-semibold text-green-700\">Cost Assessment</h5>\n                          <div className=\"text-xl font-bold text-green-600\">4/5</div>\n                        </div>\n                        <p className=\"text-sm text-gray-700\">$62.7M ($404/sf; $506K/unit). Prevailing Wage: 1.2% savings over site-built. Modular is cheaper than site-built.</p>\n                      </div>\n\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <h5 className=\"font-semibold text-green-700\">Logistics Assessment</h5>\n                          <div className=\"text-xl font-bold text-green-600\">5/5</div>\n                        </div>\n                        <p className=\"text-sm text-gray-700\">Easy access from the highway and available open space for the staging site. No transportation or setting constraints.</p>\n                      </div>\n\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <h5 className=\"font-semibold text-green-700\">Time Assessment</h5>\n                          <div className=\"text-xl font-bold text-green-600\">4/5</div>\n                        </div>\n                        <p className=\"text-sm text-gray-700\">9 months design + construction using modular approach vs 13 months for site built. Savings of 4 months.</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Zoning Tab */}\n          <TabsContent value=\"zoning\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <MapPin className=\"h-5 w-5\" />\n                  <span>Site & Zoning</span>\n                  <Badge variant=\"outline\" className={`ml-auto ${getScoreColor((project as Project).zoningScore || \"0\")}`}>\n                    Score: {(project as Project).zoningScore || \"0.0\"}/5.0\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-6 border border-blue-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-blue-800\">Zoning Assessment</h3>\n                      <div className=\"text-3xl font-bold text-blue-600\">{(project as Project).zoningScore || \"0.0\"}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {(project as Project).zoningScore || \"0.0\"}/5:</strong> Concessions are required to reduce open space and parking requirements. \n                      Modular construction does not introduce any additional waivers or restrictions for this site. \n                      The project qualifies for density bonus provisions under AB 1287 due to affordable unit mix.\n                    </p>\n                    <div className=\"text-xs text-blue-600 font-medium\">\n                      Weight: 20% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div className=\"bg-blue-50 rounded-lg p-4 mb-4\">\n                    <p className=\"text-sm text-gray-700\">\n                      <strong>Note:</strong> This is a preliminary zoning & code review. A more complete analysis will be completed during the SmartStart & Entitlement phases.\n                    </p>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Zoning District</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <p className=\"text-lg font-semibold text-raap-green\">Residential Medium Density (RM)</p>\n                        <div className=\"mt-4 space-y-2\">\n                          <p><strong>Base Density:</strong> 17 DU/Acre Max</p>\n                          <p><strong>With AB 1287:</strong> Additional 100% density increase (34 DU/Acre Max)</p>\n                          <p><strong>Current Density:</strong> ~30.0 DU/Acre</p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Site Information</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-2\">\n                          <p><strong>Total Site Area:</strong> ±4.12 acres</p>\n                          <p><strong>Target Units:</strong> 103 units</p>\n                          <p><strong>Parking:</strong> 100 spaces (1.0 required, 0.97 proposed)</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mb-6\">\n                    <h4 className=\"font-semibold text-raap-dark mb-4\">Site Zoning Context</h4>\n                    <div className=\"w-full\">\n                      <img \n                        src={zoningMapImage} \n                        alt=\"Serinity Village zoning map showing IL (Industrial Light) zoning designation with surrounding residential and mixed-use zones\"\n                        className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white\"\n                        style={{ maxHeight: '70vh' }}\n                      />\n                      <div className=\"mt-4 grid grid-cols-1 md:grid-cols-4 gap-4 text-sm\">\n                        <div className=\"bg-green-50 rounded-lg p-3 text-center\">\n                          <div className=\"font-semibold text-green-600\">Site Zoning</div>\n                          <div className=\"text-gray-700\">IL - Industrial Light</div>\n                        </div>\n                        <div className=\"bg-blue-50 rounded-lg p-3 text-center\">\n                          <div className=\"font-semibold text-blue-600\">North Zone</div>\n                          <div className=\"text-gray-700\">NMX - Neighborhood Mixed</div>\n                        </div>\n                        <div className=\"bg-purple-50 rounded-lg p-3 text-center\">\n                          <div className=\"font-semibold text-purple-600\">South Zone</div>\n                          <div className=\"text-gray-700\">RM - Residential Multiple</div>\n                        </div>\n                        <div className=\"bg-orange-50 rounded-lg p-3 text-center\">\n                          <div className=\"font-semibold text-orange-600\">East Zone</div>\n                          <div className=\"text-gray-700\">PF - Public Facilities</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-4\">Zoning Compliance Analysis</h4>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full border-collapse shadow-lg rounded-lg overflow-hidden\">\n                        <thead>\n                          <tr className=\"bg-gradient-to-r from-raap-dark to-gray-700 text-white\">\n                            <th className=\"px-4 py-4 text-left font-bold\">Zoning Criteria</th>\n                            <th className=\"px-4 py-4 text-left font-bold\">Requirements & Allowances</th>\n                            <th className=\"px-4 py-4 text-left font-bold\">Waivers & Concessions</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white\">\n                          <tr className=\"hover:bg-gray-50 transition-colors\">\n                            <td className=\"px-4 py-4 font-bold text-blue-800 bg-blue-50 border-r border-blue-200\">Allowed Use</td>\n                            <td className=\"px-4 py-4\">\n                              <div className=\"flex items-center\">\n                                <span className=\"w-3 h-3 bg-green-500 rounded-full mr-3\"></span>\n                                <span>Multi-unit Development Permitted</span>\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-4 text-center\">\n                              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                                ✓ Compliant\n                              </span>\n                            </td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50 transition-colors border-t border-gray-100\">\n                            <td className=\"px-4 py-4 font-bold text-purple-800 bg-purple-50 border-r border-purple-200\">Density</td>\n                            <td className=\"px-4 py-4\">\n                              <div className=\"space-y-2\">\n                                <div className=\"flex items-start\">\n                                  <span className=\"w-2 h-2 bg-purple-500 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                                  <div>\n                                    <p className=\"font-medium\">Base: 17 DU/Acre Maximum</p>\n                                    <p className=\"text-sm text-gray-600\">With AB 1287 bonus: 34 DU/Acre</p>\n                                    <p className=\"text-sm font-semibold text-raap-green\">Current: ~30.0 DU/Acre</p>\n                                  </div>\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-4 text-center\">\n                              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                                ✓ Compliant\n                              </span>\n                            </td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50 transition-colors border-t border-gray-100\">\n                            <td className=\"px-4 py-4 font-bold text-orange-800 bg-orange-50 border-r border-orange-200\">Setbacks</td>\n                            <td className=\"px-4 py-4\">\n                              <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-orange-500 rounded-full mr-2\"></span>\n                                  <span><strong>Front:</strong> 15'</span>\n                                </div>\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-orange-500 rounded-full mr-2\"></span>\n                                  <span><strong>Side:</strong> 5'</span>\n                                </div>\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-orange-500 rounded-full mr-2\"></span>\n                                  <span><strong>Rear Primary:</strong> 10'</span>\n                                </div>\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-orange-500 rounded-full mr-2\"></span>\n                                  <span><strong>Rear Accessory:</strong> 5'</span>\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-4 text-center\">\n                              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                                ✓ Compliant\n                              </span>\n                            </td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50 transition-colors border-t border-gray-100\">\n                            <td className=\"px-4 py-4 font-bold text-emerald-800 bg-emerald-50 border-r border-emerald-200\">Height</td>\n                            <td className=\"px-4 py-4\">\n                              <div className=\"space-y-1\">\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-emerald-500 rounded-full mr-3\"></span>\n                                  <span><strong>Primary Building:</strong> 35' maximum</span>\n                                </div>\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-emerald-500 rounded-full mr-3\"></span>\n                                  <span><strong>Accessory Structure:</strong> 15' maximum</span>\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-4 text-center\">\n                              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                                ✓ Compliant\n                              </span>\n                            </td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50 transition-colors border-t border-gray-100\">\n                            <td className=\"px-4 py-4 font-bold text-red-800 bg-red-50 border-r border-red-200\">Open Space</td>\n                            <td className=\"px-4 py-4\">\n                              <div className=\"space-y-1\">\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-red-500 rounded-full mr-3\"></span>\n                                  <span><strong>Required:</strong> 200 SF per unit</span>\n                                </div>\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-red-500 rounded-full mr-3\"></span>\n                                  <span><strong>Common:</strong> 25' min dimension</span>\n                                </div>\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-red-500 rounded-full mr-3\"></span>\n                                  <span><strong>Private:</strong> 8' min dimension</span>\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-4 text-center\">\n                              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n                                ⚠ Concession Required\n                              </span>\n                              <p className=\"text-xs text-gray-600 mt-1\">Open Space Reduction</p>\n                            </td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50 transition-colors border-t border-gray-100\">\n                            <td className=\"px-4 py-4 font-bold text-indigo-800 bg-indigo-50 border-r border-indigo-200\">Floor Area Ratio</td>\n                            <td className=\"px-4 py-4\">\n                              <div className=\"flex items-center\">\n                                <span className=\"w-3 h-3 bg-indigo-500 rounded-full mr-3\"></span>\n                                <span className=\"font-medium\">No FAR Requirement</span>\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-4 text-center\">\n                              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                                ✓ Compliant\n                              </span>\n                            </td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50 transition-colors border-t border-gray-100\">\n                            <td className=\"px-4 py-4 font-bold text-yellow-800 bg-yellow-50 border-r border-yellow-200\">Parking</td>\n                            <td className=\"px-4 py-4\">\n                              <div className=\"space-y-1\">\n                                <p className=\"font-semibold text-yellow-800\">State Density Bonus Requirements:</p>\n                                <div className=\"flex items-center mt-2\">\n                                  <span className=\"w-2 h-2 bg-yellow-500 rounded-full mr-3\"></span>\n                                  <span><strong>1 Bedroom:</strong> 1 Stall</span>\n                                </div>\n                                <div className=\"flex items-center\">\n                                  <span className=\"w-2 h-2 bg-yellow-500 rounded-full mr-3\"></span>\n                                  <span><strong>2-3 Bedrooms:</strong> 1.5 Stalls</span>\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-4 text-center\">\n                              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                                ⚠ Concession Available\n                              </span>\n                              <p className=\"text-xs text-gray-600 mt-1\">Can reduce requirement</p>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n\n\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Massing Tab */}\n          <TabsContent value=\"massing\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Building className=\"h-5 w-5\" />\n                  <span>Massing</span>\n                  <Badge variant=\"outline\" className={`ml-auto ${getScoreColor((project as Project).massingScore || \"0\")}`}>\n                    Score: {(project as Project).massingScore || \"0.0\"}/5.0\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Massing Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">5/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of 5/5:</strong> No additional constraints caused by modular structure. \n                      We can achieve the goal of 24 units and unit mix as the traditional original design.\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 15% of overall feasibility score\n                    </div>\n                  </div>\n\n                  {/* Sub-tabs for Massing */}\n                  <Tabs defaultValue=\"specifications\" className=\"w-full\">\n                    <TabsList className=\"grid w-full grid-cols-5\">\n                      <TabsTrigger value=\"specifications\">\n                        Specifications\n                      </TabsTrigger>\n                      <TabsTrigger value=\"units\">\n                        Unit Plans\n                      </TabsTrigger>\n                      <TabsTrigger value=\"floorplan\">\n                        Floor Plan\n                      </TabsTrigger>\n                      <TabsTrigger value=\"3dview\">\n                        3D View\n                      </TabsTrigger>\n                      <TabsTrigger value=\"siteplan\">\n                        Site Plan\n                      </TabsTrigger>\n                    </TabsList>\n\n                    {/* Specifications Tab */}\n                    <TabsContent value=\"specifications\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                          <div>\n                            <h4 className=\"font-semibold text-raap-dark mb-3\">Building Specifications</h4>\n                            <div className=\"bg-white border rounded-lg p-4\">\n                              <div className=\"space-y-2\">\n                                <p><strong>Overall Dimensions:</strong> 519' × 67' × 57'</p>\n                                <p><strong>Stories:</strong> 3 Story</p>\n                                <p><strong>Construction Type:</strong> Type III-A Construction</p>\n                                <p><strong>Structural System:</strong> Wood structural</p>\n                                <p><strong>Total Units:</strong> 103 Units</p>\n                                <p><strong>Total Modules:</strong> 60 modules</p>\n                                <p><strong>Total Gross Site Area:</strong> ±4.12 acres</p>\n                                <p><strong>Gross Density:</strong> ±30.0 DU/acre</p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <h4 className=\"font-semibold text-raap-dark mb-3\">Unit Mix Breakdown</h4>\n                            <div className=\"bg-white border rounded-lg p-4\">\n                              <div className=\"space-y-3\">\n                                <div className=\"flex justify-between items-center\">\n                                  <span>Studio Units</span>\n                                  <span className=\"font-semibold text-raap-green\">14 units (14%)</span>\n                                </div>\n                                <div className=\"flex justify-between items-center\">\n                                  <span>1-Bedroom Units</span>\n                                  <span className=\"font-semibold text-raap-green\">67 units (65%)</span>\n                                </div>\n                                <div className=\"flex justify-between items-center\">\n                                  <span>2-Bedroom Units</span>\n                                  <span className=\"font-semibold text-raap-green\">22 units (21%)</span>\n                                </div>\n                                <hr className=\"my-2\" />\n                                <div className=\"flex justify-between items-center font-semibold\">\n                                  <span>Total Units</span>\n                                  <span className=\"text-raap-dark\">103 units</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <h4 className=\"font-semibold text-raap-dark mb-3\">Building Comparison</h4>\n                          <div className=\"overflow-x-auto\">\n                            <table className=\"w-full border-collapse border border-gray-300\">\n                              <thead>\n                                <tr className=\"bg-gray-50\">\n                                  <th className=\"border border-gray-300 px-4 py-2 text-left font-semibold\">Parameter</th>\n                                  <th className=\"border border-gray-300 px-4 py-2 text-left font-semibold\">Site Built</th>\n                                  <th className=\"border border-gray-300 px-4 py-2 text-left font-semibold\">Modular</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr>\n                                  <td className=\"border border-gray-300 px-4 py-2 font-medium\">Gross Sq. Ft.</td>\n                                  <td className=\"border border-gray-300 px-4 py-2\">25,986 sf</td>\n                                  <td className=\"border border-gray-300 px-4 py-2\">26,352 sf</td>\n                                </tr>\n                                <tr className=\"bg-gray-50\">\n                                  <td className=\"border border-gray-300 px-4 py-2 font-medium\">Building (L × W × H)</td>\n                                  <td className=\"border border-gray-300 px-4 py-2\">142' × 61' × 36'</td>\n                                  <td className=\"border border-gray-300 px-4 py-2\">144' × 61' × 40'</td>\n                                </tr>\n                                <tr>\n                                  <td className=\"border border-gray-300 px-4 py-2 font-medium\">Construction</td>\n                                  <td className=\"border border-gray-300 px-4 py-2\">Site-Built</td>\n                                  <td className=\"border border-gray-300 px-4 py-2\">Factory Built + Site Assembly</td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Units Tab */}\n                    <TabsContent value=\"units\" className=\"mt-6\">\n                      <div className=\"space-y-8\">\n                        {/* Unit Mix Summary - First */}\n                        <div className=\"bg-raap-green/5 border border-raap-green rounded-lg p-6\">\n                          <h4 className=\"font-bold text-raap-dark text-lg mb-3\">Unit Mix Summary</h4>\n                          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 text-center\">\n                            <div className=\"bg-white rounded-lg p-4 border\">\n                              <div className=\"text-2xl font-bold text-purple-600\">14</div>\n                              <div className=\"text-sm text-gray-600\">Studio Units</div>\n                              <div className=\"text-xs text-gray-500\">450 SF Average</div>\n                            </div>\n                            <div className=\"bg-white rounded-lg p-4 border\">\n                              <div className=\"text-2xl font-bold text-raap-green\">67</div>\n                              <div className=\"text-sm text-gray-600\">1-Bedroom Units</div>\n                              <div className=\"text-xs text-gray-500\">563 SF Average</div>\n                            </div>\n                            <div className=\"bg-white rounded-lg p-4 border\">\n                              <div className=\"text-2xl font-bold text-blue-600\">22</div>\n                              <div className=\"text-sm text-gray-600\">2-Bedroom Units</div>\n                              <div className=\"text-xs text-gray-500\">813 SF Average</div>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Massing Assessment Summary - Second */}\n                        <div className=\"bg-gray-50 rounded-lg p-6 border\">\n                          <h4 className=\"font-bold text-raap-dark text-lg mb-3\">Massing Assessment Summary</h4>\n                          <div className=\"text-sm text-gray-700\">\n                            <p><strong>Modular Advantage:</strong> Factory construction allows for precise quality control and faster assembly while maintaining identical unit mix and layout to traditional construction. The modular approach achieves 109% efficiency compared to site-built methods.</p>\n                          </div>\n                        </div>\n\n                        {/* 1-Bedroom Unit Panel */}\n                        <div className=\"bg-white border-2 border-raap-green rounded-lg p-6 shadow-lg\">\n                          <h4 className=\"text-xl font-bold text-raap-dark mb-6\">1-Bedroom Units (Type B+C)</h4>\n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 items-center\">\n                            <div>\n                              <img \n                                src={oneBedImage} \n                                alt=\"1-Bedroom Unit Floor Plan - Isometric view showing layout\"\n                                className=\"w-full h-auto border rounded-lg shadow-md bg-white p-4\"\n                              />\n                            </div>\n                            <div className=\"space-y-4\">\n                              <div className=\"bg-raap-green/10 rounded-lg p-4\">\n                                <h5 className=\"font-bold text-raap-green text-lg mb-3\">Unit Specifications</h5>\n                                <div className=\"space-y-2\">\n                                  <p><strong>Total Area:</strong> 563 square feet</p>\n                                  <p><strong>Unit Count:</strong> 6 units (25% of total)</p>\n                                  <p><strong>Target Market:</strong> Young professionals, singles</p>\n                                  <p><strong>Rent Range:</strong> Affordable housing tier</p>\n                                </div>\n                              </div>\n                              <div className=\"bg-gray-50 rounded-lg p-4\">\n                                <h5 className=\"font-bold text-raap-dark text-lg mb-3\">Layout Features</h5>\n                                <div className=\"space-y-2\">\n                                  <p>• Open concept living room and kitchen</p>\n                                  <p>• Spacious bedroom with large window</p>\n                                  <p>• Full bathroom with modern fixtures</p>\n                                  <p>• Built-in closet storage throughout</p>\n                                  <p>• Private balcony/patio access</p>\n                                  <p>• Energy-efficient appliances included</p>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* 2-Bedroom Unit Panel */}\n                        <div className=\"bg-white border-2 border-blue-500 rounded-lg p-6 shadow-lg\">\n                          <h4 className=\"text-xl font-bold text-raap-dark mb-6\">2-Bedroom Units (Type D+B+C)</h4>\n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 items-center\">\n                            <div>\n                              <img \n                                src={twoBedImage} \n                                alt=\"2-Bedroom Unit Floor Plan - Isometric view showing layout\"\n                                className=\"w-full h-auto border rounded-lg shadow-md bg-white p-4\"\n                              />\n                            </div>\n                            <div className=\"space-y-4\">\n                              <div className=\"bg-blue-50 rounded-lg p-4\">\n                                <h5 className=\"font-bold text-blue-700 text-lg mb-3\">Unit Specifications</h5>\n                                <div className=\"space-y-2\">\n                                  <p><strong>Total Area:</strong> 813 square feet</p>\n                                  <p><strong>Unit Count:</strong> 12 units (50% of total)</p>\n                                  <p><strong>Target Market:</strong> Small families, roommates</p>\n                                  <p><strong>Rent Range:</strong> Moderate income housing</p>\n                                </div>\n                              </div>\n                              <div className=\"bg-gray-50 rounded-lg p-4\">\n                                <h5 className=\"font-bold text-raap-dark text-lg mb-3\">Layout Features</h5>\n                                <div className=\"space-y-2\">\n                                  <p>• Separate living and dining areas</p>\n                                  <p>• Full-size kitchen with pantry</p>\n                                  <p>• Two bedrooms with ample closets</p>\n                                  <p>• Full bathroom plus powder room</p>\n                                  <p>• In-unit laundry connections</p>\n                                  <p>• Private outdoor space</p>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* 3-Bedroom Unit Panel */}\n                        <div className=\"bg-white border-2 border-orange-500 rounded-lg p-6 shadow-lg\">\n                          <h4 className=\"text-xl font-bold text-raap-dark mb-6\">3-Bedroom Units (Type F+B2+C)</h4>\n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 items-center\">\n                            <div>\n                              <img \n                                src={threeBedImage} \n                                alt=\"3-Bedroom Unit Floor Plan - Isometric view showing layout\"\n                                className=\"w-full h-auto border rounded-lg shadow-md bg-white p-4\"\n                              />\n                            </div>\n                            <div className=\"space-y-4\">\n                              <div className=\"bg-orange-50 rounded-lg p-4\">\n                                <h5 className=\"font-bold text-orange-700 text-lg mb-3\">Unit Specifications</h5>\n                                <div className=\"space-y-2\">\n                                  <p><strong>Total Area:</strong> 980 square feet</p>\n                                  <p><strong>Unit Count:</strong> 6 units (25% of total)</p>\n                                  <p><strong>Target Market:</strong> Families with children</p>\n                                  <p><strong>Rent Range:</strong> Family housing tier</p>\n                                </div>\n                              </div>\n                              <div className=\"bg-gray-50 rounded-lg p-4\">\n                                <h5 className=\"font-bold text-raap-dark text-lg mb-3\">Layout Features</h5>\n                                <div className=\"space-y-2\">\n                                  <p>• Large living room with dining area</p>\n                                  <p>• Full kitchen with island/breakfast bar</p>\n                                  <p>• Three bedrooms including master suite</p>\n                                  <p>• Two full bathrooms</p>\n                                  <p>• Ample storage throughout unit</p>\n                                  <p>• Large private patio/balcony</p>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Floor Plan Tab */}\n                    <TabsContent value=\"floorplan\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        <div className=\"text-center\">\n                          <img \n                            src={floorPlanImage} \n                            alt=\"Building Floor Plan - Complete layout showing all units, corridors, and stairs\"\n                            className=\"mx-auto max-w-full h-auto border rounded-lg shadow-lg\"\n                          />\n                          <p className=\"mt-4 text-sm text-gray-600\">\n                            Complete building floor plan showing unit arrangements, circulation corridors, stair locations, and modular vs site-built areas.\n                          </p>\n                        </div>\n                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-blue-700 mb-2\">Modular Components</h5>\n                            <div className=\"space-y-2 text-sm\">\n                              <p>• Individual residential units (1BD, 2BD, 3BD)</p>\n                              <p>• Interior corridors and circulation spaces</p>\n                              <p>• Stairwell modules</p>\n                              <p>• MEP risers and service areas</p>\n                              <p>• Total: 137,225 SF modular construction</p>\n                            </div>\n                          </div>\n                          \n                          <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-orange-700 mb-2\">Site-Built Components</h5>\n                            <div className=\"space-y-2 text-sm\">\n                              <p>• Ground floor amenity spaces</p>\n                              <p>• Building entrances and lobbies</p>\n                              <p>• Utility connections and service areas</p>\n                              <p>• Foundation and structural connections</p>\n                              <p>• Total: 6,808 SF site-built construction</p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* 3D View Tab */}\n                    <TabsContent value=\"3dview\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        <div className=\"text-center\">\n                          <img \n                            src={buildingRenderingImage} \n                            alt=\"3D Building Rendering - Exterior view of the completed multifamily development\"\n                            className=\"mx-auto max-w-full h-auto border rounded-lg shadow-lg\"\n                          />\n                          <p className=\"mt-4 text-sm text-gray-600\">\n                            Three-dimensional exterior rendering showing the completed building design with architectural details, materials, and landscaping.\n                          </p>\n                        </div>\n                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          <div className=\"bg-white border rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-raap-green mb-2\">Design Features</h5>\n                            <div className=\"space-y-2 text-sm\">\n                              <p><strong>Architecture:</strong> Contemporary residential design</p>\n                              <p><strong>Materials:</strong> Mixed exterior materials for visual interest</p>\n                              <p><strong>Windows:</strong> Large openings for natural light</p>\n                              <p><strong>Balconies:</strong> Private outdoor spaces for units</p>\n                              <p><strong>Roof:</strong> Solar-ready flat roof system</p>\n                            </div>\n                          </div>\n                          \n                          <div className=\"bg-white border rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-raap-green mb-2\">Modular Advantages</h5>\n                            <div className=\"space-y-2 text-sm\">\n                              <p><strong>Quality Control:</strong> Factory-built precision</p>\n                              <p><strong>Speed:</strong> Parallel construction and installation</p>\n                              <p><strong>Consistency:</strong> Uniform finishes and details</p>\n                              <p><strong>Weather Protection:</strong> Indoor manufacturing</p>\n                              <p><strong>Efficiency:</strong> 109% modular efficiency vs site-built</p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n\n                    {/* Site Plan Tab */}\n                    <TabsContent value=\"siteplan\" className=\"mt-6\">\n                      <div className=\"space-y-6\">\n                        <div className=\"w-full\">\n                          <img \n                            src={sitePlanImage} \n                            alt=\"Site Plan - Property layout showing building placement, parking, and landscaping\"\n                            className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white\"\n                            style={{ maxHeight: '70vh' }}\n                          />\n                          <p className=\"mt-4 text-sm text-gray-600 text-center\">\n                            Site plan drawing showing building placement on the 4.12-acre property with parking areas, landscaping, and site improvements.\n                          </p>\n                        </div>\n                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          <div className=\"bg-white border rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-raap-green mb-2\">Site Information</h5>\n                            <div className=\"space-y-2 text-sm\">\n                              <p><strong>Total Area:</strong> 4.12 acres (171,600 SF)</p>\n                              <p><strong>Building Footprint:</strong> 146' × 66'</p>\n                              <p><strong>Parking Spaces:</strong> 24 spaces (1.0 ratio)</p>\n                              <p><strong>Density:</strong> 30.0 DU/acre</p>\n                              <p><strong>Setbacks:</strong> Compliant with RM zoning</p>\n                            </div>\n                          </div>\n                          \n                          <div className=\"bg-white border rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-raap-green mb-2\">Site Features</h5>\n                            <div className=\"space-y-2 text-sm\">\n                              <p><strong>Access:</strong> From Chestnut Road</p>\n                              <p><strong>Utilities:</strong> All services available</p>\n                              <p><strong>Landscaping:</strong> Native plantings and trees</p>\n                              <p><strong>Stormwater:</strong> On-site management system</p>\n                              <p><strong>Staging:</strong> Large area for modular delivery</p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n                  </Tabs>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Sustainability Tab */}\n          <TabsContent value=\"sustainability\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Leaf className=\"h-5 w-5\" />\n                  <span>Sustainability</span>\n                  <Badge variant=\"outline\" className={`ml-auto ${getScoreColor((project as Project).sustainabilityScore || \"0\")}`}>\n                    Score: {(project as Project).sustainabilityScore || \"0.0\"}/5.0\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Sustainability Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">5/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of 5/5:</strong> Project readily supports Net Zero Energy (NZE) and PHIUS with minimal site-built upgrades. \n                      Will require enhancements to foundation, walls, roof, windows, HVAC & lighting in addition to investment in batteries & solar power. \n                      Modular construction can reduce waste generation and increase installation quality.\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 20% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Net Zero Energy (NZE) Readiness</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <span>Solar PV Ready Roof</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Ready</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Battery Storage Prep</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Included</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>High-Performance Envelope</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Factory Built</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Energy Monitoring</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Integrated</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">PHIUS Certification Path</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <span>Air Barrier System</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Enhanced</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Thermal Bridge Reduction</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Optimized</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>High-Performance Windows</span>\n                            <span className=\"text-green-600 font-semibold\">✓ Specified</span>\n                          </div>\n                          <div className=\"flex items-center justify-between\">\n                            <span>Mechanical Ventilation</span>\n                            <span className=\"text-green-600 font-semibold\">✓ ERV System</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-4\">Required Enhancements for NZE/PHIUS</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                        <h5 className=\"font-semibold text-blue-700 mb-2\">Modular-Compatible Systems</h5>\n                        <div className=\"space-y-2 text-sm\">\n                          <p><strong>Envelope Components:</strong></p>\n                          <p>• Enhanced wall insulation systems</p>\n                          <p>• High-performance roof assemblies</p>\n                          <p>• Triple-pane window packages</p>\n                          <p>• Integrated air barrier systems</p>\n                          <br />\n                          <p><strong>MEP Systems:</strong></p>\n                          <p>• High-efficiency HVAC equipment</p>\n                          <p>• LED lighting throughout</p>\n                          <p>• Energy recovery ventilation</p>\n                        </div>\n                      </div>\n\n                      <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4\">\n                        <h5 className=\"font-semibold text-orange-700 mb-2\">Site-Built Requirements</h5>\n                        <div className=\"space-y-2 text-sm\">\n                          <p><strong>Foundation Upgrades:</strong></p>\n                          <p>• Under-slab insulation</p>\n                          <p>• Perimeter thermal breaks</p>\n                          <p>• Foundation air sealing</p>\n                          <br />\n                          <p><strong>Energy Generation:</strong></p>\n                          <p>• Solar photovoltaic arrays</p>\n                          <p>• Battery storage systems</p>\n                          <p>• Grid-tie inverter systems</p>\n                          <p>• Energy monitoring equipment</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-3\">Modular Construction Advantages</h4>\n                    <div className=\"bg-white border rounded-lg p-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div>\n                          <h5 className=\"font-semibold text-raap-green mb-2\">Quality Benefits</h5>\n                          <div className=\"space-y-2 text-sm\">\n                            <p>• Controlled factory environment ensures precise installation</p>\n                            <p>• Reduced air leakage through factory quality control</p>\n                            <p>• Consistent insulation installation</p>\n                            <p>• Better integration of building systems</p>\n                            <p>• Reduced waste generation</p>\n                          </div>\n                        </div>\n                        <div>\n                          <h5 className=\"font-semibold text-raap-green mb-2\">Performance Benefits</h5>\n                          <div className=\"space-y-2 text-sm\">\n                            <p>• Enhanced thermal performance through factory precision</p>\n                            <p>• Improved air barrier continuity</p>\n                            <p>• Optimized HVAC system integration</p>\n                            <p>• Consistent energy modeling inputs</p>\n                            <p>• Predictable performance outcomes</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-3\">RaaP/HED Sustainability Experience</h4>\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <div className=\"space-y-2 text-sm text-gray-700\">\n                        <p><strong>Proven Track Record:</strong> RaaP/HED's commitment to sustainable, people-centric design and extensive experience in delivering PHIUS-certified multifamily housing provides high confidence in achieving NZE targets.</p>\n                        <p><strong>Integrated Approach:</strong> The modular design can support energy efficiency goals by integrating passive design principles, efficient HVAC systems, and photovoltaic-ready roof structures.</p>\n                        <p><strong>Cost-Effective Path:</strong> While sustainability enhancements require investment, the factory-controlled environment can reduce installation quality issues and provide more predictable performance outcomes.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-raap-dark mb-2\">Sustainability Assessment Summary</h4>\n                    <p className=\"text-sm text-gray-700\">\n                      The project presents a strong foundation for achieving both Net Zero Energy and PHIUS certification through modular construction. \n                      While some PHIUS-specific components require site-built execution (primarily foundation-related), the majority of the envelope and \n                      systems are compatible with factory-built methods. Modular construction can reduce waste generation and increase installation quality \n                      compared to site-built alternatives, supporting both environmental and performance objectives.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Pricing Tab */}\n          <TabsContent value=\"pricing\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <DollarSign className=\"h-5 w-5\" />\n                  <span>Cost Analysis</span>\n                  <Badge variant=\"outline\" className={`ml-auto ${getScoreColor((project as Project).costScore || \"0\")}`}>\n                    Score: {(project as Project).costScore || \"0.0\"}/5.0\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Cost Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">{(project as Project).costScore || \"0.0\"}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {(project as Project).costScore || \"0.0\"}/5:</strong> ${(costTotals.modularTotal / 1000000).toFixed(1)}M (${Math.round(costTotals.modularCostPerSf)}/sf; {formatCurrency(costTotals.modularCostPerUnit)}/unit) with Prevailing Wage. \n                      {costTotals.costSavingsPercent.toFixed(1)}% savings over site-built. Modular construction provides cost advantages.\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 20% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Project Cost Summary</h4>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex justify-between p-3 bg-blue-50 rounded border border-blue-200\">\n                          <span>RaaP Modular Cost</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold text-blue-600\">{formatCurrency(costTotals.modularTotal)}</div>\n                            <div className=\"text-sm text-gray-600\">${Math.round(costTotals.modularCostPerSf)}/sf • {(project as Project).modularTimelineMonths || 9} Months</div>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between p-3 bg-gray-50 rounded\">\n                          <span>Traditional Site-Built</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold\">{formatCurrency(costTotals.siteBuiltTotal)}</div>\n                            <div className=\"text-sm text-gray-600\">${Math.round(costTotals.siteBuiltCostPerSf)}/sf • {(project as Project).siteBuiltTimelineMonths || 13} Months</div>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between p-3 bg-green-50 rounded border border-green-200\">\n                          <span>Cost Savings</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold text-green-600\">{formatCurrency(costTotals.savings)}</div>\n                            <div className=\"text-sm text-gray-600\">{costTotals.costSavingsPercent.toFixed(1)}% savings</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Per Unit Analysis</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-2\">\n                          <div className=\"flex justify-between\">\n                            <span>Number of Units</span>\n                            <span className=\"font-semibold\">{costTotals.totalUnits}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span>Average Unit Area</span>\n                            <span className=\"font-semibold\">792 sf</span>\n                          </div>\n                          <hr className=\"my-2\" />\n                          <div className=\"flex justify-between\">\n                            <span>Cost per Unit (RaaP)</span>\n                            <span className=\"font-semibold text-blue-600\">{formatCurrency(costTotals.modularCostPerUnit)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span>Cost per Sq Ft (RaaP)</span>\n                            <span className=\"font-semibold text-blue-600\">${Math.round(costTotals.modularCostPerSf)}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-4\">Detailed MasterFormat Cost Breakdown</h4>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full border-collapse shadow-lg rounded-lg overflow-hidden text-sm\">\n                        <colgroup>\n                          <col className=\"w-1/4\" />\n                          <col className=\"w-3/20\" />\n                          <col className=\"w-2/20\" />\n                          <col className=\"w-2/20\" />\n                          <col className=\"w-2/20\" />\n                          <col className=\"w-3/20\" />\n                          <col className=\"w-2/20\" />\n                          <col className=\"w-2/20\" />\n                        </colgroup>\n                        <thead>\n                          <tr className=\"bg-gradient-to-r from-raap-dark to-gray-700 text-white\">\n                            <th className=\"px-4 py-3 text-left font-bold\">MasterFormat Division</th>\n                            <th className=\"px-4 py-3 text-right font-bold\">Site Built Total</th>\n                            <th className=\"px-4 py-3 text-right font-bold\">Site Built $/sf</th>\n                            <th className=\"px-4 py-3 text-right font-bold\">RaaP GC</th>\n                            <th className=\"px-4 py-3 text-right font-bold\">RaaP Fab</th>\n                            <th className=\"px-4 py-3 text-right font-bold\">RaaP Total</th>\n                            <th className=\"px-4 py-3 text-right font-bold\">RaaP $/sf</th>\n                            <th className=\"px-4 py-3 text-right font-bold\">Savings</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white\">\n                          {/* Concrete, Masonry & Metals */}\n                          <tr className=\"bg-blue-50 border-b border-blue-200\">\n                            <td className=\"px-4 py-3 font-bold text-blue-800\">Concrete, Masonry & Metals</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-blue-800\">$1,311,770</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-blue-800\">$50</td>\n                            <td className=\"px-4 py-3 text-right\">$1,147,404</td>\n                            <td className=\"px-4 py-3 text-right\">$281,220</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-blue-800\">$1,428,623</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-blue-800\">$54</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-red-600\">-$116,853</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">03 Concrete</td>\n                            <td className=\"px-4 py-2 text-right\">$407,021</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$16</td>\n                            <td className=\"px-4 py-2 text-right\">$285,136</td>\n                            <td className=\"px-4 py-2 text-right\">$164,393</td>\n                            <td className=\"px-4 py-2 text-right\">$449,528</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$17</td>\n                            <td className=\"px-4 py-2 text-right text-red-600\">-$42,507</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">04 Masonry</td>\n                            <td className=\"px-4 py-2 text-right\">$233,482</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$9</td>\n                            <td className=\"px-4 py-2 text-right\">$260,237</td>\n                            <td className=\"px-4 py-2 text-right\">-</td>\n                            <td className=\"px-4 py-2 text-right\">$260,237</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$10</td>\n                            <td className=\"px-4 py-2 text-right text-red-600\">-$26,755</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">05 Metal</td>\n                            <td className=\"px-4 py-2 text-right\">$671,267</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$26</td>\n                            <td className=\"px-4 py-2 text-right\">$602,031</td>\n                            <td className=\"px-4 py-2 text-right\">$116,827</td>\n                            <td className=\"px-4 py-2 text-right\">$718,859</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$27</td>\n                            <td className=\"px-4 py-2 text-right text-red-600\">-$47,592</td>\n                          </tr>\n\n                          {/* Rooms */}\n                          <tr className=\"bg-green-50 border-b border-green-200\">\n                            <td className=\"px-4 py-3 font-bold text-green-800\">Rooms</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-green-800\">$4,452,553</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-green-800\">$171</td>\n                            <td className=\"px-4 py-3 text-right\">$465,938</td>\n                            <td className=\"px-4 py-3 text-right\">$4,121,807</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-green-800\">$4,587,745</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-green-800\">$174</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-red-600\">-$135,192</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">06 Wood & Plastics</td>\n                            <td className=\"px-4 py-2 text-right\">$1,982,860</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$76</td>\n                            <td className=\"px-4 py-2 text-right\">$14,171</td>\n                            <td className=\"px-4 py-2 text-right\">$2,137,612</td>\n                            <td className=\"px-4 py-2 text-right\">$2,151,783</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$82</td>\n                            <td className=\"px-4 py-2 text-right text-red-600\">-$168,923</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">07 Thermal & Moisture Protection</td>\n                            <td className=\"px-4 py-2 text-right\">$490,766</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$19</td>\n                            <td className=\"px-4 py-2 text-right\">$289,407</td>\n                            <td className=\"px-4 py-2 text-right\">$293,030</td>\n                            <td className=\"px-4 py-2 text-right\">$582,437</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$22</td>\n                            <td className=\"px-4 py-2 text-right text-red-600\">-$91,671</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">08 Openings</td>\n                            <td className=\"px-4 py-2 text-right\">$486,606</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$19</td>\n                            <td className=\"px-4 py-2 text-right\">$138,123</td>\n                            <td className=\"px-4 py-2 text-right\">$337,164</td>\n                            <td className=\"px-4 py-2 text-right\">$475,287</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$18</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$11,319</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">09 Finishes</td>\n                            <td className=\"px-4 py-2 text-right\">$1,492,321</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$57</td>\n                            <td className=\"px-4 py-2 text-right\">$24,237</td>\n                            <td className=\"px-4 py-2 text-right\">$1,354,001</td>\n                            <td className=\"px-4 py-2 text-right\">$1,378,238</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$52</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$114,083</td>\n                          </tr>\n\n                          {/* Equipment & Special Construction */}\n                          <tr className=\"bg-orange-50 border-b border-orange-200\">\n                            <td className=\"px-4 py-3 font-bold text-orange-800\">Equipment & Special Construction</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-orange-800\">$221,062</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-orange-800\">$9</td>\n                            <td className=\"px-4 py-3 text-right\">$68,827</td>\n                            <td className=\"px-4 py-3 text-right\">$139,859</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-orange-800\">$208,686</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-orange-800\">$8</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-green-600\">$12,376</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">10 Specialties</td>\n                            <td className=\"px-4 py-2 text-right\">$55,363</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$2</td>\n                            <td className=\"px-4 py-2 text-right\">-</td>\n                            <td className=\"px-4 py-2 text-right\">$47,078</td>\n                            <td className=\"px-4 py-2 text-right\">$47,078</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$2</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$8,285</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">11 Equipment</td>\n                            <td className=\"px-4 py-2 text-right\">$16,837</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$1</td>\n                            <td className=\"px-4 py-2 text-right\">$16,837</td>\n                            <td className=\"px-4 py-2 text-right\">-</td>\n                            <td className=\"px-4 py-2 text-right\">$16,837</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$1</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$0</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">12 Furnishing</td>\n                            <td className=\"px-4 py-2 text-right\">$99,730</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$4</td>\n                            <td className=\"px-4 py-2 text-right\">$2,858</td>\n                            <td className=\"px-4 py-2 text-right\">$92,781</td>\n                            <td className=\"px-4 py-2 text-right\">$95,639</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$4</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$4,091</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">13 Special Construction</td>\n                            <td className=\"px-4 py-2 text-right\">$49,132</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$2</td>\n                            <td className=\"px-4 py-2 text-right\">$49,132</td>\n                            <td className=\"px-4 py-2 text-right\">-</td>\n                            <td className=\"px-4 py-2 text-right\">$49,132</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$2</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$0</td>\n                          </tr>\n\n                          {/* MEPs */}\n                          <tr className=\"bg-purple-50 border-b border-purple-200\">\n                            <td className=\"px-4 py-3 font-bold text-purple-800\">MEPs</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-purple-800\">$2,262,827</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-purple-800\">$87</td>\n                            <td className=\"px-4 py-3 text-right\">$1,304,248</td>\n                            <td className=\"px-4 py-3 text-right\">$854,052</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-purple-800\">$2,158,300</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-purple-800\">$82</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-green-600\">$104,527</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">21 Fire</td>\n                            <td className=\"px-4 py-2 text-right\">$189,853</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$7</td>\n                            <td className=\"px-4 py-2 text-right\">$96,660</td>\n                            <td className=\"px-4 py-2 text-right\">$85,189</td>\n                            <td className=\"px-4 py-2 text-right\">$181,849</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$7</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$8,004</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">22 Plumbing</td>\n                            <td className=\"px-4 py-2 text-right\">$767,391</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$30</td>\n                            <td className=\"px-4 py-2 text-right\">$431,516</td>\n                            <td className=\"px-4 py-2 text-right\">$306,882</td>\n                            <td className=\"px-4 py-2 text-right\">$738,398</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$28</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$28,993</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">23 HVAC</td>\n                            <td className=\"px-4 py-2 text-right\">$326,599</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$13</td>\n                            <td className=\"px-4 py-2 text-right\">$64</td>\n                            <td className=\"px-4 py-2 text-right\">$290,983</td>\n                            <td className=\"px-4 py-2 text-right\">$291,047</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$11</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$35,552</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">26 Electrical</td>\n                            <td className=\"px-4 py-2 text-right\">$978,984</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$38</td>\n                            <td className=\"px-4 py-2 text-right\">$776,008</td>\n                            <td className=\"px-4 py-2 text-right\">$170,998</td>\n                            <td className=\"px-4 py-2 text-right\">$947,005</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$36</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$31,979</td>\n                          </tr>\n\n                          {/* Site Work */}\n                          <tr className=\"bg-yellow-50 border-b border-yellow-200\">\n                            <td className=\"px-4 py-3 font-bold text-yellow-800\">Site Work (Estimate)</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-yellow-800\">$1,002,646</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-yellow-800\">$39</td>\n                            <td className=\"px-4 py-3 text-right\">$1,003,239</td>\n                            <td className=\"px-4 py-3 text-right\">-</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-yellow-800\">$1,003,239</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-yellow-800\">$38</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-red-600\">-$593</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">31 Earthwork</td>\n                            <td className=\"px-4 py-2 text-right\">$267,163</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$10</td>\n                            <td className=\"px-4 py-2 text-right\">$267,756</td>\n                            <td className=\"px-4 py-2 text-right\">-</td>\n                            <td className=\"px-4 py-2 text-right\">$267,756</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$10</td>\n                            <td className=\"px-4 py-2 text-right text-red-600\">-$593</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">32 Exterior Improvements</td>\n                            <td className=\"px-4 py-2 text-right\">$362,465</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$14</td>\n                            <td className=\"px-4 py-2 text-right\">$362,465</td>\n                            <td className=\"px-4 py-2 text-right\">-</td>\n                            <td className=\"px-4 py-2 text-right\">$362,465</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$14</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$0</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">33 Utilities</td>\n                            <td className=\"px-4 py-2 text-right\">$373,018</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$14</td>\n                            <td className=\"px-4 py-2 text-right\">$373,018</td>\n                            <td className=\"px-4 py-2 text-right\">-</td>\n                            <td className=\"px-4 py-2 text-right\">$373,018</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$14</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$0</td>\n                          </tr>\n\n                          {/* GC Charges */}\n                          <tr className=\"bg-gray-100 border-b border-gray-300\">\n                            <td className=\"px-4 py-3 font-bold text-gray-800\">GC Charges (Estimate)</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-gray-800\">$1,709,446</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-gray-800\">$66</td>\n                            <td className=\"px-4 py-3 text-right\">$735,670</td>\n                            <td className=\"px-4 py-3 text-right\">$699,302</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-gray-800\">$1,434,972</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-gray-800\">$55</td>\n                            <td className=\"px-4 py-3 text-right font-bold text-green-600\">$274,474</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">01 General Requirements</td>\n                            <td className=\"px-4 py-2 text-right\">$579,732</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$22</td>\n                            <td className=\"px-4 py-2 text-right\">$251,063</td>\n                            <td className=\"px-4 py-2 text-right\">$465,712</td>\n                            <td className=\"px-4 py-2 text-right\">$716,775</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$27</td>\n                            <td className=\"px-4 py-2 text-right text-red-600\">-$137,043</td>\n                          </tr>\n                          <tr className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 pl-8 text-gray-700\">Charges & Fees</td>\n                            <td className=\"px-4 py-2 text-right\">$1,129,714</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$43</td>\n                            <td className=\"px-4 py-2 text-right\">$484,607</td>\n                            <td className=\"px-4 py-2 text-right\">$233,591</td>\n                            <td className=\"px-4 py-2 text-right\">$718,197</td>\n                            <td className=\"px-4 py-2 text-right text-gray-600\">$27</td>\n                            <td className=\"px-4 py-2 text-right text-green-600\">$411,517</td>\n                          </tr>\n\n                          {/* Total */}\n                          <tr className=\"bg-raap-dark border-b-2 border-raap-dark\">\n                            <td className=\"px-4 py-4 font-bold text-white text-lg\">Total Hard Construction Cost</td>\n                            <td className=\"px-4 py-4 text-right font-bold text-white text-lg\">$10,960,303</td>\n                            <td className=\"px-4 py-4 text-right font-bold text-white text-lg\">$422</td>\n                            <td className=\"px-4 py-4 text-right font-bold text-white\">$4,725,325</td>\n                            <td className=\"px-4 py-4 text-right font-bold text-white\">$6,096,240</td>\n                            <td className=\"px-4 py-4 text-right font-bold text-white text-lg\">$10,821,565</td>\n                            <td className=\"px-4 py-4 text-right font-bold text-white text-lg\">$411</td>\n                            <td className=\"px-4 py-4 text-right font-bold text-white text-lg\">$138,738</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Logistics Tab */}\n          <TabsContent value=\"logistics\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Truck className=\"h-5 w-5\" />\n                  <span>Logistics</span>\n                  <Badge variant=\"outline\" className={`ml-auto ${getScoreColor((project as Project).logisticsScore || \"0\")}`}>\n                    Score: {(project as Project).logisticsScore || \"0.0\"}/5.0\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Logistics Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">5/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of 5/5:</strong> The site presents ideal logistics conditions for modular construction with excellent highway access, ample staging space, and minimal delivery constraints. The proximity to Highway 70 and straightforward route from the Tracy fabrication facility ensures efficient module transportation and installation.\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 15% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-4\">Delivery Route: Tracy to Olivehurst</h4>\n                    <div className=\"w-full\">\n                      <img \n                        src={tracyRouteImage} \n                        alt=\"Route from Tracy CA to Olivehurst CA showing 1 hour 29 minute drive via Highway 99 and Highway 70\"\n                        className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white\"\n                        style={{ maxHeight: '60vh' }}\n                      />\n                      <div className=\"mt-4 grid grid-cols-3 gap-4 text-sm\">\n                        <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n                          <div className=\"text-2xl font-bold text-blue-600\">103</div>\n                          <div className=\"font-semibold text-blue-600\">Distance</div>\n                          <div className=\"text-gray-700\">miles</div>\n                        </div>\n                        <div className=\"bg-green-50 rounded-lg p-4 text-center\">\n                          <div className=\"text-2xl font-bold text-green-600\">1:29</div>\n                          <div className=\"font-semibold text-green-600\">Drive Time</div>\n                          <div className=\"text-gray-700\">hours</div>\n                        </div>\n                        <div className=\"bg-orange-50 rounded-lg p-4 text-center\">\n                          <div className=\"text-lg font-bold text-orange-600\">Hwy 99→70</div>\n                          <div className=\"font-semibold text-orange-600\">Primary Route</div>\n                          <div className=\"text-gray-700\">major highways</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"bg-white border rounded-lg p-4\">\n                      <h5 className=\"font-semibold text-green-600 mb-2\">Excellent Access</h5>\n                      <div className=\"space-y-2 text-sm\">\n                        <p><strong>Highway 70:</strong> Major route proximity</p>\n                        <p>• 0.5 miles to Interstate 680</p>\n                        <p>• Direct route from Tracy factory (25 miles)</p>\n                        <p>• No weight restrictions or bridge clearances</p>\n                        <p>• Clear path for 16' wide loads</p>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-white border rounded-lg p-4\">\n                      <h5 className=\"font-semibold text-green-600 mb-2\">Staging & Site Access</h5>\n                      <div className=\"space-y-2 text-sm\">\n                        <p><strong>Large Staging Area:</strong> 4.12-acre site</p>\n                        <p>• Ample space for module storage</p>\n                        <p>• Multiple crane positions available</p>\n                        <p>• Easy truck maneuvering room</p>\n                        <p>• Level site preparation minimal</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"bg-white border rounded-lg p-4\">\n                      <h5 className=\"font-semibold text-blue-600 mb-2\">Delivery Schedule</h5>\n                      <div className=\"space-y-2 text-sm\">\n                        <p><strong>Module Delivery:</strong> 2-3 modules per day</p>\n                        <p>• Early morning arrival (6-8 AM)</p>\n                        <p>• Crane setting within 2-4 hours</p>\n                        <p>• Minimal neighborhood disruption</p>\n                        <p>• Weather-independent factory production</p>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-white border rounded-lg p-4\">\n                      <h5 className=\"font-semibold text-orange-600 mb-2\">Minor Considerations</h5>\n                      <div className=\"space-y-2 text-sm\">\n                        <p><strong>Overhead Powerlines:</strong> Present on Chestnut Rd</p>\n                        <p>• May cause some crane logistics concerns</p>\n                        <p>• Manageable with proper crane positioning</p>\n                        <p>• Does not prevent modular delivery</p>\n                        <p>• Standard utility coordination required</p>\n                      </div>\n                    </div>\n                  </div>\n\n\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Build Time Tab */}\n          <TabsContent value=\"buildtime\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Clock className=\"h-5 w-5\" />\n                  <span>Build Time</span>\n                  <Badge variant=\"outline\" className={`ml-auto ${getScoreColor((project as Project).buildTimeScore || \"0\")}`}>\n                    Score: {(project as Project).buildTimeScore || \"0.0\"}/5.0\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Build Time Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">4/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of 4/5:</strong> 30.5 months total project delivery using modular approach vs 41 months for site built. \n                      Savings of 10.5 months (25% timeline reduction).\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 10% of overall feasibility score\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Timeline Comparison</h4>\n                      <div className=\"grid grid-cols-3 gap-3\">\n                        <div className=\"text-center p-4 bg-blue-50 rounded border border-blue-200\">\n                          <div className=\"text-2xl font-bold text-blue-600\">30.5</div>\n                          <div className=\"font-semibold text-blue-600\">RaaP Modular</div>\n                          <div className=\"text-xs text-gray-600\">months total</div>\n                        </div>\n                        <div className=\"text-center p-4 bg-gray-50 rounded border\">\n                          <div className=\"text-2xl font-bold text-gray-600\">41</div>\n                          <div className=\"font-semibold text-gray-600\">Site-Built</div>\n                          <div className=\"text-xs text-gray-600\">months total</div>\n                        </div>\n                        <div className=\"text-center p-4 bg-green-50 rounded border border-green-200\">\n                          <div className=\"text-2xl font-bold text-green-600\">10.5</div>\n                          <div className=\"font-semibold text-green-600\">Time Savings</div>\n                          <div className=\"text-xs text-gray-600\">months (25%)</div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Key Advantages</h4>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-start space-x-2 text-sm\">\n                          <div className=\"w-2 h-2 rounded-full bg-green-500 mt-2 flex-shrink-0\"></div>\n                          <span><strong>Parallel Construction:</strong> Site prep occurs while modules are built in factory</span>\n                        </div>\n                        <div className=\"flex items-start space-x-2 text-sm\">\n                          <div className=\"w-2 h-2 rounded-full bg-green-500 mt-2 flex-shrink-0\"></div>\n                          <span><strong>Weather Independence:</strong> Factory production not affected by weather delays</span>\n                        </div>\n                        <div className=\"flex items-start space-x-2 text-sm\">\n                          <div className=\"w-2 h-2 rounded-full bg-green-500 mt-2 flex-shrink-0\"></div>\n                          <span><strong>Quality Control:</strong> Factory environment ensures consistent quality</span>\n                        </div>\n                        <div className=\"flex items-start space-x-2 text-sm\">\n                          <div className=\"w-2 h-2 rounded-full bg-green-500 mt-2 flex-shrink-0\"></div>\n                          <span><strong>Predictable Schedule:</strong> More reliable timeline with fewer delays</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Timeline Comparison Image */}\n                  <div className=\"bg-white border rounded-lg p-6\">\n                    <img \n                      src={timelineComparisonImage} \n                      alt=\"Estimated Project Timeline Comparison\"\n                      className=\"w-full h-auto rounded-lg border border-gray-200\"\n                    />\n                  </div>\n\n                  <div className=\"bg-blue-50 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-blue-700 mb-2\">Schedule Benefits</h4>\n                    <p className=\"text-sm text-gray-700\">\n                      The modular approach provides significant schedule advantages through parallel construction processes. \n                      While site work progresses, modules are simultaneously fabricated in a controlled factory environment. \n                      This results in a 30% reduction in overall project timeline compared to traditional site-built construction.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </main>\n    </div>\n  );\n}\n\nexport default ProjectDetail;","size_bytes":114018},"client/src/pages/SmartStart.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Header from \"@/components/Header\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { \n  ArrowLeft, \n  ArrowRight,\n  MapPin, \n  FileText,\n  Building,\n  CheckCircle,\n  Circle,\n  Users,\n  DollarSign,\n  AlertCircle,\n  Upload,\n  Download,\n  Mail,\n  Phone,\n  Eye,\n  Edit3,\n  Save,\n  MessageSquare,\n  Calculator,\n  Handshake\n} from \"lucide-react\";\nimport type { Project } from \"@shared/schema\";\nimport { useSimulator } from \"@/hooks/useSimulator\";\n// Removed isSampleProject import - using database field directly\n\n// Import visual assets for Design tab\nimport vallejoFloorPlanImage from \"@assets/Vallejo Floor Plan 2_1757773129441.png\";\nimport vallejoBuildingRenderingImage from \"@assets/Vallejo Building 2_1757773134770.png\";\nimport serenityFloorPlanImage from \"@assets/Mutual Floor Plan_1757790327649.png\";\nimport serenityBuildingRenderingImage from \"@assets/Mutual Building 3_1757790327650.png\";\nimport sitePlanImage from \"@assets/Vallejo Site 2_1757773140827.png\";\nimport unitPlansImage from \"@assets/generated_images/apartment_unit_floor_plans_5298881c.png\";\nimport oneBedImage from \"@assets/1 Bed_1754836945408.png\";\nimport twoBedImage from \"@assets/2 Bed_1754837154542.png\";\nimport threeBedImage from \"@assets/3 Bed_1754837154543.png\";\n\n// Import generated building renderings\nimport exteriorRenderingImage from \"@assets/generated_images/Modern_apartment_building_exterior_006bc1c6.png\";\nimport courtyardRenderingImage from \"@assets/generated_images/Building_courtyard_view_rendering_1a349f38.png\";\nimport twilightRenderingImage from \"@assets/generated_images/Building_twilight_exterior_rendering_cbe0db35.png\";\n\nexport default function SmartStart() {\n  const [, params] = useRoute(\"/projects/:id/smart-start\");\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const projectId = params?.id;\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [editMode, setEditMode] = useState<string | null>(null);\n  const simulator = useSimulator();\n\n  const { data: project, isLoading, error } = useQuery<Project>({\n    queryKey: [\"/api/projects\", projectId],\n    enabled: !!projectId,\n  });\n\n  // Get conditional images based on project type\n  const floorPlanImage = project && project.isSample \n    ? serenityFloorPlanImage \n    : vallejoFloorPlanImage;\n  \n  const buildingRenderingImage = project && project.isSample \n    ? serenityBuildingRenderingImage \n    : vallejoBuildingRenderingImage;\n\n  // Handle authentication errors\n  if (error && isUnauthorizedError(error)) {\n    toast({\n      title: \"Unauthorized\",\n      description: \"You are logged out. Logging in again...\",\n      variant: \"destructive\",\n    });\n    setTimeout(() => {\n      window.location.href = \"/api/login\";\n    }, 500);\n  }\n\n  const updateProject = useMutation({\n    mutationFn: async (updates: Partial<Project>) => {\n      const response = await apiRequest(\"PATCH\", `/api/projects/${projectId}`, updates);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n      setEditMode(null);\n      toast({\n        title: \"Updates Saved\",\n        description: \"Project information has been updated successfully.\",\n      });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n      }\n    },\n  });\n\n  const markAsComplete = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"PATCH\", `/api/projects/${projectId}`, {\n        smartStartComplete: true\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/projects\", projectId] });\n      toast({\n        title: \"SmartStart Complete\",\n        description: \"Your conceptual design and refined cost package is complete. You can now proceed to FabAssure.\",\n      });\n      navigate(`/projects/${projectId}/workflow`);\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n      }\n    },\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse space-y-8\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"h-64 bg-gray-200 rounded-lg\"></div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"h-48 bg-gray-200 rounded-lg\"></div>\n              ))}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Project not found</h2>\n            <Button onClick={() => navigate(\"/\")} className=\"mt-4\">\n              Back to Dashboard\n            </Button>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  // Check if user can access this application\n  if (!project.modularFeasibilityComplete) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"h-12 w-12 mx-auto mb-4 text-orange-500\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Complete ModularFeasibility First</h2>\n            <p className=\"text-gray-600 mb-4\">\n              You need to complete the ModularFeasibility assessment before accessing SmartStart.\n            </p>\n            <Button onClick={() => navigate(`/projects/${projectId}/workflow`)} className=\"mr-2\">\n              Back to Workflow\n            </Button>\n            <Button \n              onClick={() => navigate(`/projects/${projectId}/modular-feasibility`)}\n              className=\"bg-raap-green hover:bg-green-700\"\n            >\n              Complete ModularFeasibility\n            </Button>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  // Calculate progress based on completed tasks\n  const completedTasks = [\n    project.buildingLayoutComplete,\n    project.unitDesignsComplete,\n    project.buildingRenderingsComplete,\n    project.designHandoffComplete,\n    project.pricingValidationComplete,\n    project.costFinalizationComplete,\n  ].filter(Boolean).length;\n  const totalTasks = 6;\n  const progressPercentage = (completedTasks / totalTasks) * 100;\n\n  const getStatusBadge = (status: string | null) => {\n    if (!status) return <Badge variant=\"secondary\">Not Started</Badge>;\n    switch (status) {\n      case \"draft\": return <Badge variant=\"secondary\">Draft</Badge>;\n      case \"review\": return <Badge variant=\"outline\">In Review</Badge>;\n      case \"approved\": return <Badge className=\"bg-green-500 text-white\">Approved</Badge>;\n      case \"pending\": return <Badge variant=\"secondary\">Pending</Badge>;\n      case \"negotiating\": return <Badge variant=\"outline\">Negotiating</Badge>;\n      case \"finalized\": return <Badge className=\"bg-green-500 text-white\">Finalized</Badge>;\n      default: return <Badge variant=\"secondary\">{status}</Badge>;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8 flex justify-between items-start\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              onClick={() => navigate(`/projects/${projectId}/workflow`)}\n              className=\"text-raap-green hover:text-green-700 mb-4 p-0\"\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back to Workflow\n            </Button>\n            <h1 className=\"text-3xl font-bold text-raap-dark mb-2\">SmartStart Application</h1>\n            <h2 className=\"text-xl text-gray-700 mb-2\">{project.name}</h2>\n            <div className=\"flex items-center text-gray-600 mb-2\">\n              <MapPin className=\"h-4 w-4 mr-1\" />\n              {project.address}\n            </div>\n            <p className=\"text-gray-600\">\n              Conceptual design, AOR collaboration, and refined costs with fabricators and GCs\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold text-green-600\">{completedTasks}/{totalTasks}</div>\n            <div className=\"text-sm text-gray-500 mb-2\">Components Complete</div>\n            <div className=\"w-32 mb-4\">\n              <Progress value={progressPercentage} className=\"h-2\" />\n            </div>\n            {project.smartStartComplete && (\n              <Badge className=\"bg-green-500 text-white\">\n                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                Complete\n              </Badge>\n            )}\n          </div>\n        </div>\n\n        {/* Tab Interface */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <div className=\"overflow-x-auto mb-8\">\n            <TabsList className=\"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground min-w-full md:w-full\">\n              <TabsTrigger \n                value=\"overview\" \n                className=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-2 py-1.5 text-xs font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm min-w-[80px] md:min-w-0 md:flex-1\"\n              >\n                <FileText className=\"h-4 w-4 mr-1\" />\n                <span className=\"text-[11px] md:text-sm\">Overview</span>\n              </TabsTrigger>\n              <TabsTrigger \n                value=\"design\" \n                className=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-2 py-1.5 text-xs font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm min-w-[80px] md:min-w-0 md:flex-1\"\n              >\n                <Building className=\"h-4 w-4 mr-1\" />\n                <span className=\"text-[11px] md:text-sm\">Design</span>\n              </TabsTrigger>\n              <TabsTrigger \n                value=\"aor\" \n                className=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-2 py-1.5 text-xs font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm min-w-[80px] md:min-w-0 md:flex-1\"\n              >\n                <Users className=\"h-4 w-4 mr-1\" />\n                <span className=\"text-[11px] md:text-sm\">AOR</span>\n              </TabsTrigger>\n              <TabsTrigger \n                value=\"pricing\" \n                className=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-2 py-1.5 text-xs font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm min-w-[80px] md:min-w-0 md:flex-1\"\n              >\n                <Calculator className=\"h-4 w-4 mr-1\" />\n                <span className=\"text-[11px] md:text-sm\">Cost</span>\n              </TabsTrigger>\n              <TabsTrigger \n                value=\"simulator\" \n                className=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-2 py-1.5 text-xs font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm min-w-[80px] md:min-w-0 md:flex-1\"\n              >\n                <Calculator className=\"h-4 w-4 mr-1\" />\n                <span className=\"text-[11px] md:text-sm\">Simulator</span>\n              </TabsTrigger>\n              <TabsTrigger \n                value=\"costs\" \n                className=\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-2 py-1.5 text-xs font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm min-w-[80px] md:min-w-0 md:flex-1\"\n              >\n                <Handshake className=\"h-4 w-4 mr-1\" />\n                <span className=\"text-[11px] md:text-sm\">Bids</span>\n              </TabsTrigger>\n            </TabsList>\n          </div>\n\n          {/* Overview Tab */}\n          <TabsContent value=\"overview\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <FileText className=\"h-5 w-5\" />\n                  <span>SmartStart Overview</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  <div className=\"bg-gradient-to-r from-green-50 to-blue-50 rounded-lg p-6 border border-green-200\">\n                    <h3 className=\"text-xl font-bold text-green-800 mb-2\">Conceptual Design & Refined Costs</h3>\n                    <p className=\"text-sm text-gray-700 mb-4\">\n                      SmartStart develops comprehensive conceptual designs for your building, coordinates with architect of record for entitlement packages, and validates refined costs with multiple fabricators and general contractors.\n                    </p>\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                      <div className=\"bg-white rounded-lg p-4 border\">\n                        <h4 className=\"font-semibold text-blue-700 mb-2\">Design Package</h4>\n                        <p className=\"text-sm text-gray-700\">Building layouts, unit designs, and 3D renderings</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-4 border\">\n                        <h4 className=\"font-semibold text-green-700 mb-2\">AOR Collaboration</h4>\n                        <p className=\"text-sm text-gray-700\">Design handoff and entitlement package development</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-4 border\">\n                        <h4 className=\"font-semibold text-orange-700 mb-2\">Cost Package</h4>\n                        <p className=\"text-sm text-gray-700\">Validated costs from multiple fabricators and GCs</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-4 border\">\n                        <h4 className=\"font-semibold text-purple-700 mb-2\">Cost Collaboration</h4>\n                        <p className=\"text-sm text-gray-700\">Finalize costs with selected partners</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Progress Overview */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg\">Design & Collaboration Progress</CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            {project.buildingLayoutComplete ? (\n                              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                            ) : (\n                              <Circle className=\"h-4 w-4 text-gray-400\" />\n                            )}\n                            <span className=\"text-sm\">Building Layout</span>\n                          </div>\n                          <Badge variant={project.buildingLayoutComplete ? \"default\" : \"secondary\"}>\n                            {project.buildingLayoutComplete ? \"Complete\" : \"Pending\"}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            {project.unitDesignsComplete ? (\n                              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                            ) : (\n                              <Circle className=\"h-4 w-4 text-gray-400\" />\n                            )}\n                            <span className=\"text-sm\">Unit Designs</span>\n                          </div>\n                          <Badge variant={project.unitDesignsComplete ? \"default\" : \"secondary\"}>\n                            {project.unitDesignsComplete ? \"Complete\" : \"Pending\"}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            {project.buildingRenderingsComplete ? (\n                              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                            ) : (\n                              <Circle className=\"h-4 w-4 text-gray-400\" />\n                            )}\n                            <span className=\"text-sm\">Building Renderings</span>\n                          </div>\n                          <Badge variant={project.buildingRenderingsComplete ? \"default\" : \"secondary\"}>\n                            {project.buildingRenderingsComplete ? \"Complete\" : \"Pending\"}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            {project.designHandoffComplete ? (\n                              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                            ) : (\n                              <Circle className=\"h-4 w-4 text-gray-400\" />\n                            )}\n                            <span className=\"text-sm\">AOR Design Handoff</span>\n                          </div>\n                          <Badge variant={project.designHandoffComplete ? \"default\" : \"secondary\"}>\n                            {project.designHandoffComplete ? \"Complete\" : \"Pending\"}\n                          </Badge>\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg\">Cost Progress</CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            {project.pricingValidationComplete ? (\n                              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                            ) : (\n                              <Circle className=\"h-4 w-4 text-gray-400\" />\n                            )}\n                            <span className=\"text-sm\">Cost Validation</span>\n                          </div>\n                          <Badge variant={project.pricingValidationComplete ? \"default\" : \"secondary\"}>\n                            {project.pricingValidationComplete ? \"Complete\" : \"Pending\"}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            {project.refinedCostingComplete ? (\n                              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                            ) : (\n                              <Circle className=\"h-4 w-4 text-gray-400\" />\n                            )}\n                            <span className=\"text-sm\">Refined Costing</span>\n                          </div>\n                          <Badge variant={project.refinedCostingComplete ? \"default\" : \"secondary\"}>\n                            {project.refinedCostingComplete ? \"Complete\" : \"Pending\"}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            {project.costFinalizationComplete ? (\n                              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                            ) : (\n                              <Circle className=\"h-4 w-4 text-gray-400\" />\n                            )}\n                            <span className=\"text-sm\">Cost Finalization</span>\n                          </div>\n                          <Badge variant={project.costFinalizationComplete ? \"default\" : \"secondary\"}>\n                            {project.costFinalizationComplete ? \"Complete\" : \"Pending\"}\n                          </Badge>\n                        </div>\n                        <div className=\"text-center pt-4 border-t\">\n                          <div className=\"text-sm text-gray-600\">Selected Partners</div>\n                          {project.finalSelectedFabricator && (\n                            <div className=\"text-sm font-medium\">Fab: {project.finalSelectedFabricator}</div>\n                          )}\n                          {project.finalSelectedGc && (\n                            <div className=\"text-sm font-medium\">GC: {project.finalSelectedGc}</div>\n                          )}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Design Package Tab */}\n          <TabsContent value=\"design\">\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Building className=\"h-5 w-5\" />\n                      <span>Design Package</span>\n                    </div>\n                    {getStatusBadge(project.designPackageStatus)}\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    {/* Design Package Overview */}\n                    <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-6 border border-blue-200\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-xl font-bold text-blue-800\">Design Package Status</h3>\n                        <div className=\"text-3xl font-bold text-blue-600\">5/5</div>\n                      </div>\n                      <p className=\"text-sm text-gray-700 mb-2\">\n                        <strong>Complete Design Package:</strong> 24-unit modular building with contemporary architecture, \n                        optimized for efficient construction and premium finishes. All design components approved.\n                      </p>\n                      <div className=\"text-xs text-blue-600 font-medium\">\n                        Ready for AOR collaboration and entitlement package development\n                      </div>\n                    </div>\n\n                    {/* Design Sub-Tabs */}\n                    <Tabs defaultValue=\"specifications\" className=\"w-full\">\n                      <TabsList className=\"grid grid-cols-5 w-full mb-6\">\n                        <TabsTrigger value=\"specifications\">Specifications</TabsTrigger>\n                        <TabsTrigger value=\"unit-plans\">Unit Plans</TabsTrigger>\n                        <TabsTrigger value=\"floor-plan\">Floor Plan</TabsTrigger>\n                        <TabsTrigger value=\"3d-view\">3D View</TabsTrigger>\n                        <TabsTrigger value=\"renderings\">Renderings</TabsTrigger>\n                      </TabsList>\n\n                      {/* Specifications Sub-Tab */}\n                      <TabsContent value=\"specifications\">\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                          <Card>\n                            <CardHeader>\n                              <CardTitle className=\"text-lg\">Unit Mix Summary</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                              <div className=\"grid grid-cols-3 gap-4 text-center\">\n                                <div className=\"bg-blue-50 rounded-lg p-4\">\n                                  <div className=\"text-3xl font-bold text-blue-600\">6</div>\n                                  <div className=\"text-sm font-medium text-blue-700\">1-Bedroom</div>\n                                  <div className=\"text-xs text-gray-600\">650 sq ft avg</div>\n                                </div>\n                                <div className=\"bg-green-50 rounded-lg p-4\">\n                                  <div className=\"text-3xl font-bold text-green-600\">12</div>\n                                  <div className=\"text-sm font-medium text-green-700\">2-Bedroom</div>\n                                  <div className=\"text-xs text-gray-600\">850 sq ft avg</div>\n                                </div>\n                                <div className=\"bg-purple-50 rounded-lg p-4\">\n                                  <div className=\"text-3xl font-bold text-purple-600\">6</div>\n                                  <div className=\"text-sm font-medium text-purple-700\">3-Bedroom</div>\n                                  <div className=\"text-xs text-gray-600\">1,100 sq ft avg</div>\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n\n                          <Card>\n                            <CardHeader>\n                              <CardTitle className=\"text-lg\">Building Specifications</CardTitle>\n                            </CardHeader>\n                            <CardContent className=\"space-y-3\">\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-sm font-medium\">Total Units</span>\n                                <span className=\"text-sm\">24 Units</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-sm font-medium\">Building Type</span>\n                                <span className=\"text-sm\">4-Story Podium</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-sm font-medium\">Construction Type</span>\n                                <span className=\"text-sm\">Type V-A</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-sm font-medium\">Total Area</span>\n                                <span className=\"text-sm\">19,008 sq ft</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-sm font-medium\">Parking Spaces</span>\n                                <span className=\"text-sm\">32 Spaces</span>\n                              </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-sm font-medium\">Amenity Space</span>\n                                <span className=\"text-sm\">1,200 sq ft</span>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n\n                        <Card className=\"mt-6\">\n                          <CardHeader>\n                            <CardTitle className=\"text-lg\">Modular Specifications</CardTitle>\n                          </CardHeader>\n                          <CardContent>\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                              <div className=\"space-y-2\">\n                                <div className=\"text-sm font-medium text-blue-700\">Module Dimensions</div>\n                                <div className=\"text-sm text-gray-600\">14' x 60' Standard<br />12' x 48' Compact</div>\n                              </div>\n                              <div className=\"space-y-2\">\n                                <div className=\"text-sm font-medium text-green-700\">Structural System</div>\n                                <div className=\"text-sm text-gray-600\">Light Gauge Steel Frame<br />Welded Connections</div>\n                              </div>\n                              <div className=\"space-y-2\">\n                                <div className=\"text-sm font-medium text-orange-700\">Exterior Cladding</div>\n                                <div className=\"text-sm text-gray-600\">Fiber Cement Panels<br />Metal Accent Elements</div>\n                              </div>\n                              <div className=\"space-y-2\">\n                                <div className=\"text-sm font-medium text-purple-700\">Interior Finishes</div>\n                                <div className=\"text-sm text-gray-600\">Luxury Vinyl Plank<br />Quartz Countertops</div>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      </TabsContent>\n\n                      {/* Unit Plans Sub-Tab */}\n                      <TabsContent value=\"unit-plans\">\n                        <div className=\"space-y-6\">\n                          {/* Unit Plans Overview */}\n                          <div className=\"text-center\">\n                            <img \n                              src={unitPlansImage} \n                              alt=\"Comprehensive apartment unit floor plans layout\"\n                              className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-4\"\n                              style={{ maxHeight: '70vh' }}\n                            />\n                            <h5 className=\"font-semibold text-gray-800 mb-2\">Unit Plans Overview</h5>\n                            <p className=\"text-sm text-gray-600\">Complete floor plan layouts for all unit types</p>\n                          </div>\n\n                          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-8\">\n                            <Card>\n                              <CardHeader>\n                                <CardTitle className=\"text-lg\">1-Bedroom Unit (650 sf)</CardTitle>\n                              </CardHeader>\n                              <CardContent>\n                                <div className=\"text-center mb-4\">\n                                  <img \n                                    src={oneBedImage} \n                                    alt=\"1-bedroom unit floor plan\"\n                                    className=\"w-full h-auto border rounded-lg shadow object-contain bg-white\"\n                                    style={{ maxHeight: '300px' }}\n                                  />\n                                </div>\n                                <div className=\"space-y-2 text-sm\">\n                                  <div><strong>Layout:</strong> Open concept living/kitchen</div>\n                                  <div><strong>Bedroom:</strong> 12' x 11' with walk-in closet</div>\n                                  <div><strong>Kitchen:</strong> Galley style with island</div>\n                                  <div><strong>Bathroom:</strong> Full bath with tub/shower</div>\n                                  <div><strong>Features:</strong> In-unit laundry, private balcony</div>\n                                </div>\n                              </CardContent>\n                            </Card>\n\n                            <Card>\n                              <CardHeader>\n                                <CardTitle className=\"text-lg\">2-Bedroom Unit (850 sf)</CardTitle>\n                              </CardHeader>\n                              <CardContent>\n                                <div className=\"text-center mb-4\">\n                                  <img \n                                    src={twoBedImage} \n                                    alt=\"2-bedroom unit floor plan\"\n                                    className=\"w-full h-auto border rounded-lg shadow object-contain bg-white\"\n                                    style={{ maxHeight: '300px' }}\n                                  />\n                                </div>\n                                <div className=\"space-y-2 text-sm\">\n                                  <div><strong>Layout:</strong> Split bedroom design</div>\n                                  <div><strong>Master:</strong> 13' x 12' with en-suite bath</div>\n                                  <div><strong>Second BR:</strong> 11' x 10' with closet</div>\n                                  <div><strong>Kitchen:</strong> L-shaped with peninsula</div>\n                                  <div><strong>Features:</strong> 2 full baths, large balcony</div>\n                                </div>\n                              </CardContent>\n                            </Card>\n\n                            <Card>\n                              <CardHeader>\n                                <CardTitle className=\"text-lg\">3-Bedroom Unit (1,100 sf)</CardTitle>\n                              </CardHeader>\n                              <CardContent>\n                                <div className=\"text-center mb-4\">\n                                  <img \n                                    src={threeBedImage} \n                                    alt=\"3-bedroom unit floor plan\"\n                                    className=\"w-full h-auto border rounded-lg shadow object-contain bg-white\"\n                                    style={{ maxHeight: '300px' }}\n                                  />\n                                </div>\n                                <div className=\"space-y-2 text-sm\">\n                                  <div><strong>Layout:</strong> Family-oriented design</div>\n                                  <div><strong>Master:</strong> 14' x 13' with walk-in closet</div>\n                                  <div><strong>Bedrooms:</strong> 11' x 10' and 10' x 10'</div>\n                                  <div><strong>Kitchen:</strong> U-shaped with breakfast bar</div>\n                                  <div><strong>Features:</strong> 2.5 baths, utility room</div>\n                                </div>\n                              </CardContent>\n                            </Card>\n                          </div>\n                        </div>\n                      </TabsContent>\n\n                      {/* Floor Plan Sub-Tab */}\n                      <TabsContent value=\"floor-plan\">\n                        <div className=\"space-y-6\">\n                          <Card>\n                            <CardHeader>\n                              <CardTitle className=\"text-lg\">Building Floor Plans</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                              <div className=\"text-center mb-6\">\n                                <img \n                                  src={floorPlanImage} \n                                  alt=\"Building floor plan layout showing unit arrangement and common areas\"\n                                  className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-4\"\n                                  style={{ maxHeight: '70vh' }}\n                                />\n                                <h5 className=\"font-semibold text-gray-800 mb-2\">Complete Building Floor Plan</h5>\n                                <p className=\"text-sm text-gray-600\">Detailed layout showing all units, corridors, and common areas</p>\n                              </div>\n\n                              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                                <div>\n                                  <h4 className=\"font-semibold mb-3\">Ground Floor (Parking + Amenities)</h4>\n                                  <div className=\"bg-white border rounded-lg p-4\">\n                                    <div className=\"space-y-2 text-sm\">\n                                      <div><strong>Parking:</strong> 32 spaces (1.33 per unit)</div>\n                                      <div><strong>Amenities:</strong> Community room, fitness center</div>\n                                      <div><strong>Services:</strong> Mail room, bike storage</div>\n                                      <div><strong>Access:</strong> Secure entry, elevator core</div>\n                                      <div><strong>Total Area:</strong> 8,500 sq ft</div>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                <div>\n                                  <h4 className=\"font-semibold mb-3\">Typical Floor (6 Units)</h4>\n                                  <div className=\"bg-white border rounded-lg p-4\">\n                                    <div className=\"space-y-2 text-sm\">\n                                      <div><strong>Layout:</strong> Double-loaded corridor</div>\n                                      <div><strong>Circulation:</strong> 6' wide hallways</div>\n                                      <div><strong>Utilities:</strong> Central mechanical rooms</div>\n                                      <div><strong>Emergency:</strong> Two means of egress</div>\n                                      <div><strong>Floor Area:</strong> 4,750 sq ft per floor</div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </TabsContent>\n\n                      {/* 3D View Sub-Tab */}\n                      <TabsContent value=\"3d-view\">\n                        <div className=\"space-y-6\">\n                          <Card>\n                            <CardHeader>\n                              <CardTitle className=\"text-lg\">Building Renderings</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                              <div className=\"text-center mb-6\">\n                                <img \n                                  src={buildingRenderingImage} \n                                  alt=\"3D rendering of the modular apartment building\"\n                                  className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-4\"\n                                  style={{ maxHeight: '70vh' }}\n                                />\n                                <h5 className=\"font-semibold text-gray-800 mb-2\">Exterior Building Rendering</h5>\n                                <p className=\"text-sm text-gray-600\">Three-story modular apartment building with contemporary design</p>\n                              </div>\n\n                              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                                <div className=\"bg-white border rounded-lg p-4\">\n                                  <h4 className=\"font-semibold mb-3\">Design Features</h4>\n                                  <div className=\"space-y-2 text-sm\">\n                                    <div><strong>Architecture:</strong> Contemporary design with clean lines</div>\n                                    <div><strong>Materials:</strong> Mixed exterior materials (siding, brick)</div>\n                                    <div><strong>Colors:</strong> Warm gray with dark trim</div>\n                                    <div><strong>Windows:</strong> Energy-efficient windows</div>\n                                    <div><strong>Parking:</strong> Covered parking at ground level</div>\n                                    <div><strong>Landscaping:</strong> Landscaped common areas</div>\n                                    <div><strong>Features:</strong> Balconies for upper floor units</div>\n                                  </div>\n                                </div>\n\n                                <div className=\"bg-white border rounded-lg p-4\">\n                                  <h4 className=\"font-semibold mb-3\">Modular Advantages</h4>\n                                  <div className=\"space-y-2 text-sm\">\n                                    <div><strong>Quality:</strong> Factory-controlled quality</div>\n                                    <div><strong>Consistency:</strong> Consistent material finishes</div>\n                                    <div><strong>Speed:</strong> Reduced on-site construction time</div>\n                                    <div><strong>Performance:</strong> Enhanced structural performance</div>\n                                    <div><strong>Weather:</strong> Better weather protection during build</div>\n                                    <div><strong>Precision:</strong> Improved dimensional accuracy</div>\n                                    <div><strong>Sustainability:</strong> Reduced material waste</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </TabsContent>\n\n                      {/* Renderings Sub-Tab */}\n                      <TabsContent value=\"renderings\">\n                        <div className=\"space-y-6\">\n                          {/* Main Exterior Rendering */}\n                          <Card>\n                            <CardHeader>\n                              <CardTitle className=\"text-lg\">Exterior Building Renderings</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                              <div className=\"text-center mb-6\">\n                                <img \n                                  src={exteriorRenderingImage} \n                                  alt=\"Modern three-story modular apartment building exterior rendering\"\n                                  className=\"w-full h-auto border rounded-lg shadow-lg object-contain bg-white mb-4\"\n                                  style={{ maxHeight: '70vh' }}\n                                />\n                                <h5 className=\"font-semibold text-gray-800 mb-2\">Main Exterior View</h5>\n                                <p className=\"text-sm text-gray-600\">Contemporary modular apartment building with mixed materials and modern design</p>\n                              </div>\n                            </CardContent>\n                          </Card>\n\n                          {/* Additional Renderings Grid */}\n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                            <Card>\n                              <CardHeader>\n                                <CardTitle className=\"text-lg\">Courtyard View</CardTitle>\n                              </CardHeader>\n                              <CardContent>\n                                <div className=\"text-center\">\n                                  <img \n                                    src={courtyardRenderingImage} \n                                    alt=\"Building courtyard view with landscaping and resident amenities\"\n                                    className=\"w-full h-auto border rounded-lg shadow object-contain bg-white mb-4\"\n                                    style={{ maxHeight: '400px' }}\n                                  />\n                                  <h6 className=\"font-semibold text-gray-800 mb-2\">Central Courtyard</h6>\n                                  <p className=\"text-sm text-gray-600\">Private outdoor space for residents with landscaping and community areas</p>\n                                </div>\n                                \n                                <div className=\"mt-4 space-y-2 text-sm\">\n                                  <div><strong>Features:</strong> Central courtyard design</div>\n                                  <div><strong>Landscaping:</strong> Professional landscape design</div>\n                                  <div><strong>Privacy:</strong> Screened outdoor spaces</div>\n                                  <div><strong>Community:</strong> Shared resident amenities</div>\n                                </div>\n                              </CardContent>\n                            </Card>\n\n                            <Card>\n                              <CardHeader>\n                                <CardTitle className=\"text-lg\">Evening View</CardTitle>\n                              </CardHeader>\n                              <CardContent>\n                                <div className=\"text-center\">\n                                  <img \n                                    src={twilightRenderingImage} \n                                    alt=\"Building twilight view with warm interior lighting\"\n                                    className=\"w-full h-auto border rounded-lg shadow object-contain bg-white mb-4\"\n                                    style={{ maxHeight: '400px' }}\n                                  />\n                                  <h6 className=\"font-semibold text-gray-800 mb-2\">Twilight Exterior</h6>\n                                  <p className=\"text-sm text-gray-600\">Evening view showcasing warm interior lighting and architectural details</p>\n                                </div>\n                                \n                                <div className=\"mt-4 space-y-2 text-sm\">\n                                  <div><strong>Lighting:</strong> Warm interior ambiance</div>\n                                  <div><strong>Materials:</strong> Mixed exterior finishes</div>\n                                  <div><strong>Windows:</strong> Large energy-efficient openings</div>\n                                  <div><strong>Balconies:</strong> Private outdoor spaces</div>\n                                </div>\n                              </CardContent>\n                            </Card>\n                          </div>\n\n                          {/* Rendering Details */}\n                          <Card>\n                            <CardHeader>\n                              <CardTitle className=\"text-lg\">Design Visualization Details</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                                <div className=\"bg-white border rounded-lg p-4\">\n                                  <h6 className=\"font-semibold text-blue-700 mb-3\">Architectural Style</h6>\n                                  <div className=\"space-y-2 text-sm\">\n                                    <div>• Contemporary design language</div>\n                                    <div>• Clean lines and geometric forms</div>\n                                    <div>• Mixed material palette</div>\n                                    <div>• Human-scale proportions</div>\n                                  </div>\n                                </div>\n                                \n                                <div className=\"bg-white border rounded-lg p-4\">\n                                  <h6 className=\"font-semibold text-green-700 mb-3\">Material Selection</h6>\n                                  <div className=\"space-y-2 text-sm\">\n                                    <div>• Fiber cement siding panels</div>\n                                    <div>• Brick accent elements</div>\n                                    <div>• Metal trim and detailing</div>\n                                    <div>• High-performance windows</div>\n                                  </div>\n                                </div>\n                                \n                                <div className=\"bg-white border rounded-lg p-4\">\n                                  <h6 className=\"font-semibold text-orange-700 mb-3\">Modular Benefits</h6>\n                                  <div className=\"space-y-2 text-sm\">\n                                    <div>• Factory precision construction</div>\n                                    <div>• Consistent quality finishes</div>\n                                    <div>• Reduced construction timeline</div>\n                                    <div>• Enhanced structural integrity</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </TabsContent>\n                    </Tabs>\n\n                    {/* Action Buttons */}\n                    <div className=\"flex justify-between pt-6 border-t\">\n                      <Button\n                        variant=\"outline\"\n                        onClick={() => updateProject.mutate({ buildingLayoutComplete: !project.buildingLayoutComplete })}\n                      >\n                        {project.buildingLayoutComplete ? \"Mark Incomplete\" : \"Mark Complete\"}\n                      </Button>\n                      <div className=\"space-x-2\">\n                        <Button variant=\"outline\">\n                          <Download className=\"h-4 w-4 mr-2\" />\n                          Download Package\n                        </Button>\n                        <Button>\n                          <Edit3 className=\"h-4 w-4 mr-2\" />\n                          Request Changes\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* AOR Collaboration Tab */}\n          <TabsContent value=\"aor\">\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Users className=\"h-5 w-5\" />\n                    <span>Architect of Record (AOR) Collaboration</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    {/* AOR Partner Information */}\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg flex items-center justify-between\">\n                          AOR Partner\n                          {editMode === \"aor\" ? (\n                            <Button size=\"sm\" onClick={() => setEditMode(null)}>\n                              <Save className=\"h-4 w-4 mr-2\" />\n                              Save\n                            </Button>\n                          ) : (\n                            <Button size=\"sm\" variant=\"ghost\" onClick={() => setEditMode(\"aor\")}>\n                              <Edit3 className=\"h-4 w-4 mr-2\" />\n                              Edit\n                            </Button>\n                          )}\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        {editMode === \"aor\" ? (\n                          <div className=\"space-y-4\">\n                            <div>\n                              <Label htmlFor=\"aorPartner\">Firm Name</Label>\n                              <Input\n                                id=\"aorPartner\"\n                                defaultValue={project.aorPartner || \"\"}\n                                onBlur={(e) => updateProject.mutate({ aorPartner: e.target.value })}\n                                placeholder=\"Enter AOR firm name\"\n                              />\n                            </div>\n                            <div>\n                              <Label htmlFor=\"aorContact\">Contact Information</Label>\n                              <Textarea\n                                id=\"aorContact\"\n                                defaultValue={project.aorContactInfo || \"\"}\n                                onBlur={(e) => updateProject.mutate({ aorContactInfo: e.target.value })}\n                                placeholder=\"Contact details (JSON format)\"\n                                rows={3}\n                              />\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"space-y-4\">\n                            <div>\n                              <div className=\"text-sm font-medium\">Firm Name</div>\n                              <div className=\"text-sm text-gray-600\">{project.aorPartner || \"Not specified\"}</div>\n                            </div>\n                            <div>\n                              <div className=\"text-sm font-medium\">Contact Information</div>\n                              <div className=\"text-sm text-gray-600\">{project.aorContactInfo || \"Not specified\"}</div>\n                            </div>\n                          </div>\n                        )}\n                        <div className=\"flex space-x-2\">\n                          <Button size=\"sm\" variant=\"outline\">\n                            <Mail className=\"h-4 w-4 mr-2\" />\n                            Email AOR\n                          </Button>\n                          <Button size=\"sm\" variant=\"outline\">\n                            <Phone className=\"h-4 w-4 mr-2\" />\n                            Call AOR\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    {/* Design Handoff Status */}\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-lg\">Design Handoff & Entitlement Package</CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                            <div className=\"flex items-center space-x-2\">\n                              {project.designHandoffComplete ? (\n                                <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                              ) : (\n                                <Circle className=\"h-4 w-4 text-gray-400\" />\n                              )}\n                              <span className=\"text-sm\">Design Handoff</span>\n                            </div>\n                            <div className=\"flex items-center space-x-2\">\n                              {getStatusBadge(project.aorReviewStatus)}\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => updateProject.mutate({ designHandoffComplete: !project.designHandoffComplete })}\n                              >\n                                {project.designHandoffComplete ? \"Mark Incomplete\" : \"Mark Complete\"}\n                              </Button>\n                            </div>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label>AOR Review Status</Label>\n                            <Select\n                              value={project.aorReviewStatus || \"\"}\n                              onValueChange={(value) => updateProject.mutate({ aorReviewStatus: value })}\n                            >\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Select review status\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"pending\">Pending</SelectItem>\n                                <SelectItem value=\"reviewing\">Reviewing</SelectItem>\n                                <SelectItem value=\"approved\">Approved</SelectItem>\n                                <SelectItem value=\"revisions_requested\">Revisions Requested</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label>Entitlement Package Status</Label>\n                            <Select\n                              value={project.entitlementPackageStatus || \"\"}\n                              onValueChange={(value) => updateProject.mutate({ entitlementPackageStatus: value })}\n                            >\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Select package status\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"planning\">Planning</SelectItem>\n                                <SelectItem value=\"in_progress\">In Progress</SelectItem>\n                                <SelectItem value=\"submitted\">Submitted</SelectItem>\n                                <SelectItem value=\"approved\">Approved</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n\n                  {/* AOR Feedback Section */}\n                  <Card className=\"mt-6\">\n                    <CardHeader>\n                      <CardTitle className=\"text-lg flex items-center space-x-2\">\n                        <MessageSquare className=\"h-5 w-5\" />\n                        <span>AOR Feedback & Communication</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div>\n                          <Label htmlFor=\"aorFeedback\">AOR Feedback</Label>\n                          <Textarea\n                            id=\"aorFeedback\"\n                            defaultValue={project.aorFeedback || \"\"}\n                            onBlur={(e) => updateProject.mutate({ aorFeedback: e.target.value })}\n                            placeholder=\"Record feedback from AOR reviews and meetings\"\n                            rows={4}\n                          />\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <Button variant=\"outline\">\n                            <Download className=\"h-4 w-4 mr-2\" />\n                            Download Design Package\n                          </Button>\n                          <Button>\n                            <Mail className=\"h-4 w-4 mr-2\" />\n                            Send to AOR\n                          </Button>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Cost Package Tab */}\n          <TabsContent value=\"pricing\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <DollarSign className=\"h-5 w-5\" />\n                  <span>Cost Analysis</span>\n                  <Badge variant=\"outline\" className=\"ml-auto bg-green-100 text-green-700 border-green-300\">\n                    Score: {(project as any)?.costScore || \"4.5\"}/5.0\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score & Summary */}\n                  <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-6 border border-green-200\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-xl font-bold text-green-800\">Cost Assessment</h3>\n                      <div className=\"text-3xl font-bold text-green-600\">{(project as any)?.costScore || \"4.5\"}/5</div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-2\">\n                      <strong>Score of {(project as any)?.costScore || \"4.5\"}/5:</strong> ${(parseFloat((project as any)?.modularTotalCost || '0') / 1000000).toFixed(1)}M (${(project as any)?.modularCostPerSf || '0'}/sf; ${(project as any)?.modularCostPerUnit || '0'}/unit) with Prevailing Wage. \n                      {(project as any)?.costSavingsPercent || '0'}% savings over site-built. Modular construction provides cost advantages.\n                    </p>\n                    <div className=\"text-xs text-green-600 font-medium\">\n                      Weight: 20% of overall feasibility score\n                    </div>\n                  </div>\n\n                  {/* Detailed MasterFormat Cost Breakdown */}\n                  <div>\n                    <h4 className=\"font-semibold text-raap-dark mb-4\">Detailed MasterFormat Cost Breakdown</h4>\n                    <div className=\"bg-white border rounded-lg overflow-hidden\">\n                      <table className=\"w-full text-sm\">\n                        <thead className=\"bg-gray-700 text-white\">\n                          <tr>\n                            <th className=\"px-3 py-3 text-left font-semibold\">MasterFormat Division</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">Site Built Total</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">Site Built $/sf</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">RaaP GC</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">RaaP Fab</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">RaaP Total</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">RaaP $/sf</th>\n                            <th className=\"px-3 py-3 text-right font-semibold\">Savings</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200\">\n                          {/* Concrete, Masonry & Metals Section */}\n                          <tr className=\"bg-blue-50\">\n                            <td className=\"px-3 py-2 font-semibold text-blue-800\">Concrete, Masonry & Metals</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$1,311,770</td>\n                            <td className=\"px-3 py-2 text-right\">$50</td>\n                            <td className=\"px-3 py-2 text-right\">$1,147,404</td>\n                            <td className=\"px-3 py-2 text-right\">$281,220</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$1,428,623</td>\n                            <td className=\"px-3 py-2 text-right\">$54</td>\n                            <td className=\"px-3 py-2 text-right text-red-600 font-semibold\">-$116,853</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">03 Concrete</td>\n                            <td className=\"px-3 py-2 text-right\">$407,021</td>\n                            <td className=\"px-3 py-2 text-right\">$16</td>\n                            <td className=\"px-3 py-2 text-right\">$285,136</td>\n                            <td className=\"px-3 py-2 text-right\">$164,393</td>\n                            <td className=\"px-3 py-2 text-right\">$449,528</td>\n                            <td className=\"px-3 py-2 text-right\">$17</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$42,507</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">04 Masonry</td>\n                            <td className=\"px-3 py-2 text-right\">$233,482</td>\n                            <td className=\"px-3 py-2 text-right\">$9</td>\n                            <td className=\"px-3 py-2 text-right\">$260,237</td>\n                            <td className=\"px-3 py-2 text-right\">-</td>\n                            <td className=\"px-3 py-2 text-right\">$260,237</td>\n                            <td className=\"px-3 py-2 text-right\">$10</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$26,755</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">05 Metal</td>\n                            <td className=\"px-3 py-2 text-right\">$671,267</td>\n                            <td className=\"px-3 py-2 text-right\">$26</td>\n                            <td className=\"px-3 py-2 text-right\">$602,031</td>\n                            <td className=\"px-3 py-2 text-right\">$116,827</td>\n                            <td className=\"px-3 py-2 text-right\">$718,859</td>\n                            <td className=\"px-3 py-2 text-right\">$27</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$47,592</td>\n                          </tr>\n\n                          {/* Rooms Section */}\n                          <tr className=\"bg-green-50\">\n                            <td className=\"px-3 py-2 font-semibold text-green-800\">Rooms</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$4,452,553</td>\n                            <td className=\"px-3 py-2 text-right\">$171</td>\n                            <td className=\"px-3 py-2 text-right\">$465,938</td>\n                            <td className=\"px-3 py-2 text-right\">$4,121,807</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$4,587,745</td>\n                            <td className=\"px-3 py-2 text-right\">$174</td>\n                            <td className=\"px-3 py-2 text-right text-red-600 font-semibold\">-$135,192</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">06 Wood & Plastics</td>\n                            <td className=\"px-3 py-2 text-right\">$1,982,860</td>\n                            <td className=\"px-3 py-2 text-right\">$76</td>\n                            <td className=\"px-3 py-2 text-right\">$14,171</td>\n                            <td className=\"px-3 py-2 text-right\">$2,137,612</td>\n                            <td className=\"px-3 py-2 text-right\">$2,151,783</td>\n                            <td className=\"px-3 py-2 text-right\">$82</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$168,923</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">07 Thermal & Moisture Protection</td>\n                            <td className=\"px-3 py-2 text-right\">$490,766</td>\n                            <td className=\"px-3 py-2 text-right\">$19</td>\n                            <td className=\"px-3 py-2 text-right\">$289,407</td>\n                            <td className=\"px-3 py-2 text-right\">$293,030</td>\n                            <td className=\"px-3 py-2 text-right\">$582,437</td>\n                            <td className=\"px-3 py-2 text-right\">$22</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$91,671</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">08 Openings</td>\n                            <td className=\"px-3 py-2 text-right\">$486,606</td>\n                            <td className=\"px-3 py-2 text-right\">$19</td>\n                            <td className=\"px-3 py-2 text-right\">$138,123</td>\n                            <td className=\"px-3 py-2 text-right\">$337,164</td>\n                            <td className=\"px-3 py-2 text-right\">$475,287</td>\n                            <td className=\"px-3 py-2 text-right\">$18</td>\n                            <td className=\"px-3 py-2 text-right text-green-600\">$11,319</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">09 Finishes</td>\n                            <td className=\"px-3 py-2 text-right\">$1,492,321</td>\n                            <td className=\"px-3 py-2 text-right\">$57</td>\n                            <td className=\"px-3 py-2 text-right\">$24,237</td>\n                            <td className=\"px-3 py-2 text-right\">$1,354,001</td>\n                            <td className=\"px-3 py-2 text-right\">$1,378,238</td>\n                            <td className=\"px-3 py-2 text-right\">$52</td>\n                            <td className=\"px-3 py-2 text-right text-green-600\">$114,083</td>\n                          </tr>\n\n                          {/* Equipment & Special Construction Section */}\n                          <tr className=\"bg-orange-50\">\n                            <td className=\"px-3 py-2 font-semibold text-orange-800\">Equipment & Special Construction</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$221,062</td>\n                            <td className=\"px-3 py-2 text-right\">$9</td>\n                            <td className=\"px-3 py-2 text-right\">$68,827</td>\n                            <td className=\"px-3 py-2 text-right\">$139,859</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$208,686</td>\n                            <td className=\"px-3 py-2 text-right\">$8</td>\n                            <td className=\"px-3 py-2 text-right text-green-600 font-semibold\">$12,376</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">10 Specialties</td>\n                            <td className=\"px-3 py-2 text-right\">$55,363</td>\n                            <td className=\"px-3 py-2 text-right\">$2</td>\n                            <td className=\"px-3 py-2 text-right\">-</td>\n                            <td className=\"px-3 py-2 text-right\">$47,078</td>\n                            <td className=\"px-3 py-2 text-right\">$47,078</td>\n                            <td className=\"px-3 py-2 text-right\">$2</td>\n                            <td className=\"px-3 py-2 text-right text-green-600\">$8,285</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">11 Equipment</td>\n                            <td className=\"px-3 py-2 text-right\">$16,837</td>\n                            <td className=\"px-3 py-2 text-right\">$1</td>\n                            <td className=\"px-3 py-2 text-right\">$16,837</td>\n                            <td className=\"px-3 py-2 text-right\">-</td>\n                            <td className=\"px-3 py-2 text-right\">$16,837</td>\n                            <td className=\"px-3 py-2 text-right\">$1</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">12 Furnishing</td>\n                            <td className=\"px-3 py-2 text-right\">$99,730</td>\n                            <td className=\"px-3 py-2 text-right\">$4</td>\n                            <td className=\"px-3 py-2 text-right\">$2,858</td>\n                            <td className=\"px-3 py-2 text-right\">$92,781</td>\n                            <td className=\"px-3 py-2 text-right\">$95,639</td>\n                            <td className=\"px-3 py-2 text-right\">$4</td>\n                            <td className=\"px-3 py-2 text-right text-green-600\">$4,091</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">13 Special Construction</td>\n                            <td className=\"px-3 py-2 text-right\">$49,132</td>\n                            <td className=\"px-3 py-2 text-right\">$2</td>\n                            <td className=\"px-3 py-2 text-right\">$49,132</td>\n                            <td className=\"px-3 py-2 text-right\">-</td>\n                            <td className=\"px-3 py-2 text-right\">$49,132</td>\n                            <td className=\"px-3 py-2 text-right\">$2</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                          </tr>\n\n                          {/* MEPs Section */}\n                          <tr className=\"bg-purple-50\">\n                            <td className=\"px-3 py-2 font-semibold text-purple-800\">MEPs</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$1,938,147</td>\n                            <td className=\"px-3 py-2 text-right\">$74</td>\n                            <td className=\"px-3 py-2 text-right\">$1,026,490</td>\n                            <td className=\"px-3 py-2 text-right\">$1,323,688</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$2,350,178</td>\n                            <td className=\"px-3 py-2 text-right\">$90</td>\n                            <td className=\"px-3 py-2 text-right text-red-600 font-semibold\">-$412,031</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">21 Fire Suppression</td>\n                            <td className=\"px-3 py-2 text-right\">$234,567</td>\n                            <td className=\"px-3 py-2 text-right\">$9</td>\n                            <td className=\"px-3 py-2 text-right\">$156,789</td>\n                            <td className=\"px-3 py-2 text-right\">$123,456</td>\n                            <td className=\"px-3 py-2 text-right\">$280,245</td>\n                            <td className=\"px-3 py-2 text-right\">$11</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$45,678</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">22 Plumbing</td>\n                            <td className=\"px-3 py-2 text-right\">$456,789</td>\n                            <td className=\"px-3 py-2 text-right\">$18</td>\n                            <td className=\"px-3 py-2 text-right\">$234,567</td>\n                            <td className=\"px-3 py-2 text-right\">$345,678</td>\n                            <td className=\"px-3 py-2 text-right\">$580,245</td>\n                            <td className=\"px-3 py-2 text-right\">$22</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$123,456</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">23 HVAC</td>\n                            <td className=\"px-3 py-2 text-right\">$678,901</td>\n                            <td className=\"px-3 py-2 text-right\">$26</td>\n                            <td className=\"px-3 py-2 text-right\">$345,678</td>\n                            <td className=\"px-3 py-2 text-right\">$456,789</td>\n                            <td className=\"px-3 py-2 text-right\">$802,467</td>\n                            <td className=\"px-3 py-2 text-right\">$31</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$123,566</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">26 Electrical</td>\n                            <td className=\"px-3 py-2 text-right\">$567,890</td>\n                            <td className=\"px-3 py-2 text-right\">$22</td>\n                            <td className=\"px-3 py-2 text-right\">$289,456</td>\n                            <td className=\"px-3 py-2 text-right\">$398,765</td>\n                            <td className=\"px-3 py-2 text-right\">$688,221</td>\n                            <td className=\"px-3 py-2 text-right\">$26</td>\n                            <td className=\"px-3 py-2 text-right text-red-600\">-$120,331</td>\n                          </tr>\n\n                          {/* Site Work Section */}\n                          <tr className=\"bg-brown-50 border-gray-300 border-t-2\">\n                            <td className=\"px-3 py-2 font-semibold text-yellow-900\">Site Work</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$1,247,892</td>\n                            <td className=\"px-3 py-2 text-right\">$48</td>\n                            <td className=\"px-3 py-2 text-right\">$1,247,892</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$1,247,892</td>\n                            <td className=\"px-3 py-2 text-right\">$48</td>\n                            <td className=\"px-3 py-2 text-right text-gray-600 font-semibold\">$0</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">02 Existing Conditions</td>\n                            <td className=\"px-3 py-2 text-right\">$124,789</td>\n                            <td className=\"px-3 py-2 text-right\">$5</td>\n                            <td className=\"px-3 py-2 text-right\">$124,789</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                            <td className=\"px-3 py-2 text-right\">$124,789</td>\n                            <td className=\"px-3 py-2 text-right\">$5</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">31 Earthwork</td>\n                            <td className=\"px-3 py-2 text-right\">$456,123</td>\n                            <td className=\"px-3 py-2 text-right\">$17</td>\n                            <td className=\"px-3 py-2 text-right\">$456,123</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                            <td className=\"px-3 py-2 text-right\">$456,123</td>\n                            <td className=\"px-3 py-2 text-right\">$17</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">32 Exterior Improvements</td>\n                            <td className=\"px-3 py-2 text-right\">$332,456</td>\n                            <td className=\"px-3 py-2 text-right\">$13</td>\n                            <td className=\"px-3 py-2 text-right\">$332,456</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                            <td className=\"px-3 py-2 text-right\">$332,456</td>\n                            <td className=\"px-3 py-2 text-right\">$13</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">33 Utilities</td>\n                            <td className=\"px-3 py-2 text-right\">$334,524</td>\n                            <td className=\"px-3 py-2 text-right\">$13</td>\n                            <td className=\"px-3 py-2 text-right\">$334,524</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                            <td className=\"px-3 py-2 text-right\">$334,524</td>\n                            <td className=\"px-3 py-2 text-right\">$13</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                          </tr>\n\n                          {/* GC Charges Section */}\n                          <tr className=\"bg-gray-100\">\n                            <td className=\"px-3 py-2 font-semibold text-gray-800\">GC Charges</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$892,345</td>\n                            <td className=\"px-3 py-2 text-right\">$34</td>\n                            <td className=\"px-3 py-2 text-right\">$456,789</td>\n                            <td className=\"px-3 py-2 text-right\">$234,567</td>\n                            <td className=\"px-3 py-2 text-right font-semibold\">$691,356</td>\n                            <td className=\"px-3 py-2 text-right\">$26</td>\n                            <td className=\"px-3 py-2 text-right text-green-600 font-semibold\">$200,989</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">01 General Requirements</td>\n                            <td className=\"px-3 py-2 text-right\">$692,345</td>\n                            <td className=\"px-3 py-2 text-right\">$27</td>\n                            <td className=\"px-3 py-2 text-right\">$356,789</td>\n                            <td className=\"px-3 py-2 text-right\">$134,567</td>\n                            <td className=\"px-3 py-2 text-right\">$491,356</td>\n                            <td className=\"px-3 py-2 text-right\">$19</td>\n                            <td className=\"px-3 py-2 text-right text-green-600\">$200,989</td>\n                          </tr>\n                          <tr>\n                            <td className=\"px-3 py-2 pl-6\">00 Fees</td>\n                            <td className=\"px-3 py-2 text-right\">$200,000</td>\n                            <td className=\"px-3 py-2 text-right\">$8</td>\n                            <td className=\"px-3 py-2 text-right\">$100,000</td>\n                            <td className=\"px-3 py-2 text-right\">$100,000</td>\n                            <td className=\"px-3 py-2 text-right\">$200,000</td>\n                            <td className=\"px-3 py-2 text-right\">$8</td>\n                            <td className=\"px-3 py-2 text-right\">$0</td>\n                          </tr>\n\n                          {/* Total Row */}\n                          <tr className=\"bg-gray-700 text-white font-bold text-base\">\n                            <td className=\"px-3 py-3\">PROJECT TOTAL</td>\n                            <td className=\"px-3 py-3 text-right\">$10,060,303</td>\n                            <td className=\"px-3 py-3 text-right\">$387</td>\n                            <td className=\"px-3 py-3 text-right\">$4,777,945</td>\n                            <td className=\"px-3 py-3 text-right\">$6,462,156</td>\n                            <td className=\"px-3 py-3 text-right\">$11,240,101</td>\n                            <td className=\"px-3 py-3 text-right\">$432</td>\n                            <td className=\"px-3 py-3 text-right text-red-400\">-$179,798</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Project Cost Summary</h4>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex justify-between p-3 bg-blue-50 rounded border border-blue-200\">\n                          <span>RaaP Modular Cost</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold text-blue-600\">$10,821,565</div>\n                            <div className=\"text-sm text-gray-600\">$411/sf • 9 Months</div>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between p-3 bg-gray-50 rounded\">\n                          <span>Traditional Site-Built</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold\">$10,960,303</div>\n                            <div className=\"text-sm text-gray-600\">$422/sf • 13 Months</div>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between p-3 bg-green-50 rounded border border-green-200\">\n                          <span>Cost Savings</span>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold text-green-600\">$138,738</div>\n                            <div className=\"text-sm text-gray-600\">1.2% savings</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-raap-dark mb-3\">Per Unit Analysis</h4>\n                      <div className=\"bg-white border rounded-lg p-4\">\n                        <div className=\"space-y-2\">\n                          <div className=\"flex justify-between\">\n                            <span>Number of Units</span>\n                            <span className=\"font-semibold\">24</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span>Average Unit Area</span>\n                            <span className=\"font-semibold\">792 sf</span>\n                          </div>\n                          <hr className=\"my-2\" />\n                          <div className=\"flex justify-between\">\n                            <span>Cost per Unit (RaaP)</span>\n                            <span className=\"font-semibold text-blue-600\">$450,899</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span>Cost per Sq Ft (RaaP)</span>\n                            <span className=\"font-semibold text-blue-600\">$411</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Simulator Tab */}\n          <TabsContent value=\"simulator\">\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Calculator className=\"h-5 w-5\" />\n                    <span>Interactive Cost Simulator</span>\n                    <Badge variant=\"outline\" className=\"ml-auto bg-blue-100 text-blue-700 border-blue-300\">\n                      Live Model\n                    </Badge>\n                  </CardTitle>\n                  <CardDescription>\n                    Adjust project parameters to see real-time cost impacts from our integrated financial model\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    {/* Parameter Controls */}\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg\">Unit Mix</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">1-Bedroom Units</label>\n                            <div className=\"flex items-center space-x-3\">\n                              <input \n                                type=\"range\" \n                                min=\"0\" \n                                max=\"15\" \n                                value={simulator.state.oneBedUnits}\n                                onChange={(e) => simulator.updateParameter('oneBedUnits', parseInt(e.target.value))}\n                                className=\"flex-1\"\n                                data-testid=\"slider-one-bedroom\"\n                              />\n                              <span className=\"w-8 text-sm font-medium\">{simulator.state.oneBedUnits}</span>\n                            </div>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">2-Bedroom Units</label>\n                            <div className=\"flex items-center space-x-3\">\n                              <input \n                                type=\"range\" \n                                min=\"0\" \n                                max=\"15\" \n                                value={simulator.state.twoBedUnits}\n                                onChange={(e) => simulator.updateParameter('twoBedUnits', parseInt(e.target.value))}\n                                className=\"flex-1\"\n                                data-testid=\"slider-two-bedroom\"\n                              />\n                              <span className=\"w-8 text-sm font-medium\">{simulator.state.twoBedUnits}</span>\n                            </div>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">3-Bedroom Units</label>\n                            <div className=\"flex items-center space-x-3\">\n                              <input \n                                type=\"range\" \n                                min=\"0\" \n                                max=\"10\" \n                                value={simulator.state.threeBedUnits}\n                                onChange={(e) => simulator.updateParameter('threeBedUnits', parseInt(e.target.value))}\n                                className=\"flex-1\"\n                                data-testid=\"slider-three-bedroom\"\n                              />\n                              <span className=\"w-8 text-sm font-medium\">{simulator.state.threeBedUnits}</span>\n                            </div>\n                          </div>\n                          <div className=\"pt-2 border-t\">\n                            <div className=\"flex justify-between text-sm\">\n                              <span>Total Units:</span>\n                              <span className=\"font-semibold\">{simulator.getTotalUnits()}</span>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg\">Building Configuration</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">Number of Floors</label>\n                            <select \n                              className=\"w-full p-2 border rounded-md\" \n                              data-testid=\"select-floors\"\n                              value={simulator.state.floors}\n                              onChange={(e) => simulator.updateParameter('floors', parseInt(e.target.value))}\n                            >\n                              <option value=\"2\">2 Floors</option>\n                              <option value=\"3\">3 Floors</option>\n                              <option value=\"4\">4 Floors</option>\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">Building Type</label>\n                            <select \n                              className=\"w-full p-2 border rounded-md\" \n                              data-testid=\"select-building-type\"\n                              value={simulator.state.buildingType}\n                              onChange={(e) => simulator.updateParameter('buildingType', e.target.value)}\n                            >\n                              <option value=\"garden\">Garden Style</option>\n                              <option value=\"stacked\">Stacked Flats</option>\n                              <option value=\"townhome\">Townhome Style</option>\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">Parking Type</label>\n                            <select \n                              className=\"w-full p-2 border rounded-md\" \n                              data-testid=\"select-parking\"\n                              value={simulator.state.parkingType}\n                              onChange={(e) => simulator.updateParameter('parkingType', e.target.value)}\n                            >\n                              <option value=\"surface\">Surface Parking</option>\n                              <option value=\"covered\">Covered Parking</option>\n                              <option value=\"garage\">Garage Parking</option>\n                            </select>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg\">Location Factors</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">Market Location</label>\n                            <select \n                              className=\"w-full p-2 border rounded-md\" \n                              data-testid=\"select-location\"\n                              value={simulator.state.location}\n                              onChange={(e) => simulator.updateParameter('location', e.target.value)}\n                            >\n                              <option value=\"vallejo\">Vallejo, CA</option>\n                              <option value=\"sacramento\">Sacramento, CA</option>\n                              <option value=\"fresno\">Fresno, CA</option>\n                              <option value=\"stockton\">Stockton, CA</option>\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">Prevailing Wage</label>\n                            <div className=\"flex items-center space-x-2\">\n                              <input \n                                type=\"checkbox\" \n                                checked={simulator.state.prevailingWage}\n                                onChange={(e) => simulator.updateParameter('prevailingWage', e.target.checked)}\n                                className=\"h-4 w-4\" \n                                data-testid=\"checkbox-prevailing-wage\" \n                              />\n                              <span className=\"text-sm\">Required</span>\n                            </div>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium mb-2 block\">Site Conditions</label>\n                            <select \n                              className=\"w-full p-2 border rounded-md\" \n                              data-testid=\"select-site-conditions\"\n                              value={simulator.state.siteConditions}\n                              onChange={(e) => simulator.updateParameter('siteConditions', e.target.value)}\n                            >\n                              <option value=\"standard\">Standard</option>\n                              <option value=\"challenging\">Challenging</option>\n                              <option value=\"complex\">Complex</option>\n                            </select>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n\n                    {/* Results Display */}\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg\">Cost Summary</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                          <div className=\"space-y-4\">\n                            <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\">\n                              <div className=\"text-center\">\n                                <div className=\"text-2xl font-bold text-blue-700 mb-1\">{simulator.formatCurrency(simulator.results.totalCost)}</div>\n                                <div className=\"text-sm text-blue-600\">Total Project Cost</div>\n                              </div>\n                            </div>\n                            \n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                                <div className=\"text-lg font-semibold text-gray-700\">${simulator.results.costPerSF}</div>\n                                <div className=\"text-xs text-gray-600\">Cost per SF</div>\n                              </div>\n                              <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                                <div className=\"text-lg font-semibold text-gray-700\">{simulator.formatCurrency(simulator.results.costPerUnit)}</div>\n                                <div className=\"text-xs text-gray-600\">Cost per Unit</div>\n                              </div>\n                            </div>\n\n                            <div className=\"space-y-2 pt-2 border-t\">\n                              <div className=\"flex justify-between text-sm\">\n                                <span>Modular Total:</span>\n                                <span className=\"font-semibold text-green-600\">{simulator.formatCurrency(simulator.results.modularTotal)}</span>\n                              </div>\n                              <div className=\"flex justify-between text-sm\">\n                                <span>Site-Built Est:</span>\n                                <span className=\"font-semibold\">{simulator.formatCurrency(simulator.results.siteBuiltTotal)}</span>\n                              </div>\n                              <div className=\"flex justify-between text-sm font-semibold text-green-600\">\n                                <span>Savings:</span>\n                                <span>{simulator.formatCurrency(simulator.results.savings)} ({simulator.results.savingsPercent}%)</span>\n                              </div>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg\">Cost Breakdown</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex justify-between text-sm\">\n                              <span>Site Preparation:</span>\n                              <span className=\"font-medium\">{simulator.formatCurrency(simulator.results.breakdown.sitePreparation)}</span>\n                            </div>\n                            <div className=\"flex justify-between text-sm\">\n                              <span>Foundation:</span>\n                              <span className=\"font-medium\">{simulator.formatCurrency(simulator.results.breakdown.foundation)}</span>\n                            </div>\n                            <div className=\"flex justify-between text-sm\">\n                              <span>Modular Units:</span>\n                              <span className=\"font-medium\">{simulator.formatCurrency(simulator.results.breakdown.modularUnits)}</span>\n                            </div>\n                            <div className=\"flex justify-between text-sm\">\n                              <span>Site Assembly:</span>\n                              <span className=\"font-medium\">{simulator.formatCurrency(simulator.results.breakdown.siteAssembly)}</span>\n                            </div>\n                            <div className=\"flex justify-between text-sm\">\n                              <span>MEP Connections:</span>\n                              <span className=\"font-medium\">{simulator.formatCurrency(simulator.results.breakdown.mepConnections)}</span>\n                            </div>\n                            <div className=\"flex justify-between text-sm\">\n                              <span>Finish Work:</span>\n                              <span className=\"font-medium\">{simulator.formatCurrency(simulator.results.breakdown.finishWork)}</span>\n                            </div>\n                            <div className=\"flex justify-between text-sm\">\n                              <span>Soft Costs:</span>\n                              <span className=\"font-medium\">{simulator.formatCurrency(simulator.results.breakdown.softCosts)}</span>\n                            </div>\n                            <div className=\"pt-2 border-t flex justify-between font-semibold\">\n                              <span>Total:</span>\n                              <span>{simulator.formatCurrency(simulator.results.totalCost)}</span>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n\n                    {/* Action Buttons */}\n                    <div className=\"flex justify-between items-center pt-4 border-t\">\n                      <div className=\"text-sm text-gray-600\">\n                        Powered by integrated Google Sheets financial model\n                      </div>\n                      <div className=\"flex space-x-3\">\n                        <button \n                          className={`px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm ${simulator.isCalculating ? 'opacity-50 cursor-not-allowed' : ''}`}\n                          onClick={simulator.updateModel}\n                          disabled={simulator.isCalculating}\n                          data-testid=\"button-update-model\"\n                        >\n                          {simulator.isCalculating ? 'Calculating...' : 'Update Model'}\n                        </button>\n                        <button className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 text-sm\" data-testid=\"button-save-scenario\">\n                          Save Scenario\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Bids Tab */}\n          <TabsContent value=\"costs\">\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Handshake className=\"h-5 w-5\" />\n                    <span>Project Bids</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p>Bids and final cost collaboration will be implemented here...</p>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        {/* Complete Assessment Button */}\n        {!project.smartStartComplete && (\n          <Card className=\"mt-8\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"font-semibold text-raap-dark mb-1\">Complete SmartStart Application</h3>\n                  <p className=\"text-gray-600\">\n                    Once you've completed all design work, reviewed AOR requirements, finalized cost analysis, and collected bids, \n                    mark this application as complete to proceed to FabAssure.\n                  </p>\n                </div>\n                <Button\n                  className=\"bg-raap-green hover:bg-green-700\"\n                  onClick={() => markAsComplete.mutate()}\n                  disabled={markAsComplete.isPending}\n                  data-testid=\"button-complete-smartstart\"\n                >\n                  {markAsComplete.isPending ? \"Completing...\" : \"Complete SmartStart\"}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Success Message */}\n        {project.smartStartComplete && (\n          <Card className=\"mt-8 border-green-200 bg-green-50\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center space-x-2 text-green-700\">\n                <CheckCircle className=\"h-5 w-5\" />\n                <span className=\"font-semibold\">SmartStart Complete!</span>\n              </div>\n              <p className=\"text-green-600 mt-2\">\n                Your SmartStart application has been completed. You can now proceed to FabAssure for partner marketplace and factory coordination.\n              </p>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n    </div>\n  );\n}\n","size_bytes":108306},"client/src/pages/WorkflowOverview.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Header from \"@/components/Header\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { \n  ArrowLeft, \n  ArrowRight,\n  CheckCircle,\n  Circle,\n  MapPin,\n  Building,\n  Truck,\n  Palette,\n  FileText,\n  Clock\n} from \"lucide-react\";\nimport type { Project } from \"@shared/schema\";\n// Removed isSampleProject import - using database field directly\n\ninterface ApplicationStep {\n  id: string;\n  name: string;\n  description: string;\n  icon: React.ReactNode;\n  color: string;\n  route: string;\n  completedField: keyof Project;\n  isAvailable: (project: Project) => boolean;\n}\n\nconst applicationSteps: ApplicationStep[] = [\n  {\n    id: \"modular-feasibility\",\n    name: \"ModularFeasibility\",\n    description: \"Assess project suitability for modular construction across 6 key criteria\",\n    icon: <Building className=\"h-6 w-6\" />,\n    color: \"blue\",\n    route: \"/projects/:id/modular-feasibility\",\n    completedField: \"modularFeasibilityComplete\",\n    isAvailable: () => true, // Always available after project creation\n  },\n  {\n    id: \"smart-start\",\n    name: \"SmartStart\",\n    description: \"Navigate entitlements, permitting, and preliminary design development\",\n    icon: <FileText className=\"h-6 w-6\" />,\n    color: \"green\",\n    route: \"/projects/:id/smart-start\",\n    completedField: \"smartStartComplete\",\n    isAvailable: (project) => Boolean(project.modularFeasibilityComplete),\n  },\n  {\n    id: \"fab-assure\",\n    name: \"FabAssure\",\n    description: \"Coordinate factory production, quality assurance, and logistics planning\",\n    icon: <Truck className=\"h-6 w-6\" />,\n    color: \"orange\",\n    route: \"/projects/:id/fab-assure\",\n    completedField: \"fabAssureComplete\",\n    isAvailable: (project) => Boolean(project.smartStartComplete),\n  },\n  {\n    id: \"easy-design\",\n    name: \"EasyDesign\",\n    description: \"Finalize architectural plans, interior design, and material selections\",\n    icon: <Palette className=\"h-6 w-6\" />,\n    color: \"purple\",\n    route: \"/projects/:id/easy-design\",\n    completedField: \"easyDesignComplete\",\n    isAvailable: (project) => Boolean(project.fabAssureComplete),\n  },\n];\n\nexport default function WorkflowOverview() {\n  const [, params] = useRoute(\"/projects/:id/workflow\");\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const projectId = params?.id;\n\n  const { data: project, isLoading, error } = useQuery<Project>({\n    queryKey: [\"/api/projects\", projectId],\n    enabled: !!projectId,\n  });\n\n  // Handle authentication errors\n  if (error && isUnauthorizedError(error)) {\n    toast({\n      title: \"Unauthorized\",\n      description: \"You are logged out. Logging in again...\",\n      variant: \"destructive\",\n    });\n    setTimeout(() => {\n      window.location.href = \"/api/login\";\n    }, 500);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse space-y-8\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"h-64 bg-gray-200 rounded-lg\"></div>\n              ))}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Project not found</h2>\n            <Button onClick={() => navigate(\"/\")} className=\"mt-4\">\n              Back to Dashboard\n            </Button>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  const totalUnits = (project.studioUnits || 0) + (project.oneBedUnits || 0) + \n                    (project.twoBedUnits || 0) + (project.threeBedUnits || 0);\n  const totalRooms = (project.queenUnits || 0) + (project.kingUnits || 0) + (project.oneBedUnits || 0);\n\n  const getStepStatus = (step: ApplicationStep) => {\n    // For sample projects, override FabAssure and EasyDesign status\n    if (project.isSample) {\n      if (step.id === \"fab-assure\" || step.id === \"easy-design\") {\n        return \"in_progress\";\n      }\n    }\n    \n    if (project[step.completedField]) return \"completed\";\n    if (step.isAvailable(project)) return \"available\";\n    return \"locked\";\n  };\n\n  // Calculate overall progress with overridden status for sample projects\n  const getActualCompletedSteps = () => {\n    return applicationSteps.filter(step => {\n      const status = getStepStatus(step);\n      return status === \"completed\";\n    }).length;\n  };\n  \n  const completedSteps = getActualCompletedSteps();\n  const progressPercentage = (completedSteps / applicationSteps.length) * 100;\n\n  // Helper function to format step names with line breaks at second capital letter\n  const formatStepName = (name: string) => {\n    const nameBreaks: Record<string, [string, string]> = {\n      'ModularFeasibility': ['Modular', 'Feasibility'],\n      'SmartStart': ['Smart', 'Start'], \n      'FabAssure': ['Fab', 'Assure'],\n      'EasyDesign': ['Easy', 'Design']\n    };\n    \n    const breakParts = nameBreaks[name];\n    if (breakParts) {\n      return (\n        <>\n          {breakParts[0]}\n          <br />\n          {breakParts[1]}\n        </>\n      );\n    }\n    return name;\n  };\n\n  const getStepColorClasses = (step: ApplicationStep, status: string) => {\n    if (status === \"completed\") {\n      return {\n        card: \"border-green-200 bg-green-50 hover:bg-green-100\",\n        title: \"text-green-800\",\n        icon: \"text-green-600\",\n        button: \"bg-green-600 hover:bg-green-700 text-white\",\n      };\n    }\n    if (status === \"in_progress\") {\n      return {\n        card: `border-yellow-200 bg-yellow-50 hover:bg-yellow-100`,\n        title: `text-yellow-800`,\n        icon: `text-yellow-600`,\n        button: `bg-yellow-600 hover:bg-yellow-700 text-white`,\n      };\n    }\n    if (status === \"available\") {\n      return {\n        card: `border-${step.color}-200 bg-${step.color}-50 hover:bg-${step.color}-100`,\n        title: `text-${step.color}-800`,\n        icon: `text-${step.color}-600`,\n        button: `bg-${step.color}-600 hover:bg-${step.color}-700 text-white`,\n      };\n    }\n    return {\n      card: \"border-gray-200 bg-gray-50\",\n      title: \"text-gray-500\",\n      icon: \"text-gray-400\",\n      button: \"bg-gray-300 text-gray-500 cursor-not-allowed\",\n    };\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate(\"/\")}\n            className=\"text-raap-green hover:text-green-700 mb-4 p-0\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Dashboard\n          </Button>\n          \n          <div className=\"flex justify-between items-start mb-6\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-raap-dark mb-2\">{project.name}</h1>\n              <div className=\"flex items-center text-gray-600 mb-2\">\n                <MapPin className=\"h-4 w-4 mr-1\" />\n                {project.address}\n              </div>\n              <p className=\"text-gray-600\">\n                {project.projectType === 'hotel' || project.projectType === 'hostel' ? \n                  `${project.projectType.charAt(0).toUpperCase() + project.projectType.slice(1)} (Commercial Hospitality) • ${totalRooms} Rooms • ${project.targetFloors} Stories` :\n                  `${project.projectType.charAt(0).toUpperCase() + project.projectType.slice(1)} Housing • ${totalUnits} Units • ${project.targetFloors} Stories`\n                }\n              </p>\n            </div>\n            \n            <div className=\"text-right\">\n              <div className=\"text-2xl font-bold text-raap-green\">{completedSteps}/{applicationSteps.length}</div>\n              <div className=\"text-sm text-gray-500 mb-2\">Applications Complete</div>\n              <div className=\"w-32\">\n                <Progress value={progressPercentage} className=\"h-2\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Workflow Overview */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Clock className=\"h-5 w-5\" />\n              <span>Development Workflow</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-gray-600 mb-6\">\n              Complete each application in sequence to progress through your modular construction project development. \n              Each application builds on the previous one, ensuring a systematic approach to bringing your project to completion.\n            </p>\n            \n            {/* Progress Timeline */}\n            <div className=\"flex items-center justify-between mb-8 relative\">\n              <div className=\"absolute top-6 left-0 right-0 h-0.5 bg-gray-200 z-0\"></div>\n              {applicationSteps.map((step, index) => {\n                const status = getStepStatus(step);\n                const isCompleted = status === \"completed\";\n                const nextStepCompleted = index < applicationSteps.length - 1 ? \n                  getStepStatus(applicationSteps[index + 1]) === \"completed\" : false;\n                \n                return (\n                  <div key={step.id} className=\"flex flex-col items-center relative z-10\">\n                    <div className={`w-12 h-12 rounded-full border-2 flex items-center justify-center ${\n                      isCompleted \n                        ? \"bg-green-500 border-green-500 text-white\" \n                        : status === \"in_progress\"\n                        ? \"bg-yellow-500 border-yellow-500 text-white\"\n                        : status === \"available\"\n                        ? `bg-${step.color}-500 border-${step.color}-500 text-white`\n                        : \"bg-gray-200 border-gray-300 text-gray-400\"\n                    }`}>\n                      {isCompleted ? <CheckCircle className=\"h-6 w-6\" /> : step.icon}\n                    </div>\n                    <div className=\"text-xs font-medium mt-2 text-center max-w-20 sm:max-w-24 leading-tight\">\n                      {formatStepName(step.name)}\n                    </div>\n                    {index < applicationSteps.length - 1 && (\n                      <div className={`absolute top-6 left-12 w-20 h-0.5 ${\n                        isCompleted || nextStepCompleted ? \"bg-green-500\" : \"bg-gray-200\"\n                      }`}></div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Application Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {applicationSteps.map((step, index) => {\n            const status = getStepStatus(step);\n            const colors = getStepColorClasses(step, status);\n            \n            return (\n              <Card key={step.id} className={`${colors.card} transition-colors duration-200`}>\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className={`${colors.icon}`}>\n                      {step.icon}\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <span className=\"text-sm font-medium text-gray-500\">\n                        {index + 1}\n                      </span>\n                      {status === \"completed\" && (\n                        <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                      )}\n                      {status === \"locked\" && (\n                        <Circle className=\"h-4 w-4 text-gray-400\" />\n                      )}\n                    </div>\n                  </div>\n                  <CardTitle className={`${colors.title} text-lg`}>\n                    {step.name}\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-sm text-gray-600 mb-4 min-h-[3rem]\">\n                    {step.description}\n                  </p>\n                  \n                  <div className=\"space-y-2 mb-4\">\n                    {status === \"completed\" && (\n                      <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\n                        Completed\n                      </Badge>\n                    )}\n                    {status === \"in_progress\" && (\n                      <Badge variant=\"outline\" className=\"text-yellow-600 border-yellow-600\">\n                        In Progress\n                      </Badge>\n                    )}\n                    {status === \"available\" && (\n                      <Badge variant=\"outline\" className={`text-${step.color}-600 border-${step.color}-600`}>\n                        Ready to Start\n                      </Badge>\n                    )}\n                    {status === \"locked\" && (\n                      <Badge variant=\"outline\" className=\"text-gray-500 border-gray-400\">\n                        Locked\n                      </Badge>\n                    )}\n                  </div>\n                  \n                  <Button\n                    className={`w-full ${colors.button}`}\n                    disabled={status === \"locked\"}\n                    onClick={() => {\n                      if (status !== \"locked\") {\n                        const route = step.route.replace(\":id\", project.id);\n                        navigate(route);\n                      }\n                    }}\n                    data-testid={`button-${step.id}`}\n                  >\n                    {status === \"completed\" ? \"Review\" : status === \"in_progress\" ? \"Continue\" : status === \"available\" ? \"Start\" : \"Locked\"}\n                    {status !== \"locked\" && <ArrowRight className=\"h-4 w-4 ml-2\" />}\n                  </Button>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n\n        {/* Next Steps */}\n        {completedSteps < applicationSteps.length && (\n          <Card className=\"mt-8\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"font-semibold text-raap-dark mb-1\">Next Step</h3>\n                  <p className=\"text-gray-600\">\n                    {completedSteps === 0 \n                      ? \"Start with ModularFeasibility to assess your project's suitability for modular construction.\"\n                      : `Complete ${applicationSteps.find(step => step.isAvailable(project) && !project[step.completedField])?.name} to continue your project development.`\n                    }\n                  </p>\n                </div>\n                <Button\n                  className=\"bg-raap-green hover:bg-green-700\"\n                  onClick={() => {\n                    const nextStep = applicationSteps.find(step => step.isAvailable(project) && !project[step.completedField]);\n                    if (nextStep) {\n                      const route = nextStep.route.replace(\":id\", project.id);\n                      navigate(route);\n                    }\n                  }}\n                  data-testid=\"button-next-step\"\n                >\n                  Continue Workflow\n                  <ArrowRight className=\"h-4 w-4 ml-2\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n    </div>\n  );\n}","size_bytes":16218},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/utils/googleMapsLoader.ts":{"content":"// Global singleton to manage Google Maps API loading\nclass GoogleMapsLoader {\n  private static instance: GoogleMapsLoader;\n  private loadPromise: Promise<void> | null = null;\n  private isLoaded = false;\n  private apiKey: string | null = null;\n\n  private constructor() {}\n\n  static getInstance(): GoogleMapsLoader {\n    if (!GoogleMapsLoader.instance) {\n      GoogleMapsLoader.instance = new GoogleMapsLoader();\n    }\n    return GoogleMapsLoader.instance;\n  }\n\n  async loadGoogleMaps(): Promise<void> {\n    // If already loaded, return immediately\n    if (this.isLoaded && (window as any).google && (window as any).google.maps) {\n      return Promise.resolve();\n    }\n\n    // If currently loading, return the existing promise\n    if (this.loadPromise) {\n      return this.loadPromise;\n    }\n\n    // Start loading process\n    this.loadPromise = this.doLoad();\n    return this.loadPromise;\n  }\n\n  private async doLoad(): Promise<void> {\n    try {\n      // Fetch API key if not already cached\n      if (!this.apiKey) {\n        const response = await fetch('/api/config/maps');\n        if (!response.ok) {\n          throw new Error('Failed to fetch API key');\n        }\n        const config = await response.json();\n        \n        if (!config.apiKey) {\n          throw new Error('Google Maps API key not configured');\n        }\n        this.apiKey = config.apiKey;\n      }\n\n      // Check if script already exists and remove it to start fresh\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (existingScript) {\n        existingScript.remove();\n      }\n\n      // Create new script\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n\n      return new Promise<void>((resolve, reject) => {\n        script.onload = () => {\n          this.isLoaded = true;\n          this.loadPromise = null;\n          resolve();\n        };\n        \n        script.onerror = () => {\n          this.loadPromise = null;\n          reject(new Error('Failed to load Google Maps API'));\n        };\n\n        document.head.appendChild(script);\n      });\n    } catch (error) {\n      this.loadPromise = null;\n      throw error;\n    }\n  }\n\n  isGoogleMapsLoaded(): boolean {\n    return this.isLoaded && (window as any).google && (window as any).google.maps;\n  }\n}\n\nexport default GoogleMapsLoader.getInstance();","size_bytes":2480},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/lib/useCostTotals.ts":{"content":"import type { Project, CostBreakdown } from '@shared/schema';\n\nexport interface CostTotals {\n  siteBuiltTotal: number;\n  modularTotal: number;\n  savings: number;\n  costSavingsPercent: number;\n  modularCostPerSf: number;\n  siteBuiltCostPerSf: number;\n  modularCostPerUnit: number;\n  siteBuiltCostPerUnit: number;\n  totalSqFt: number;\n  totalUnits: number;\n}\n\n/**\n * Helper function to safely parse currency/number strings\n * Handles commas, dollar signs, parentheses, and other formatting\n */\nfunction safeParseNumber(value: string | null | undefined): number {\n  if (!value) return 0;\n  \n  const str = value.toString();\n  \n  // Check if parentheses indicate negative value (accounting format)\n  const isNegative = /\\(.*\\)/.test(str);\n  \n  // Remove common formatting: $, commas, spaces, parentheses\n  const cleaned = str\n    .replace(/[$,\\s()]/g, '')\n    .replace(/[^\\d.-]/g, '');\n    \n  const num = parseFloat(cleaned);\n  if (isNaN(num)) return 0;\n  \n  return isNegative ? -Math.abs(num) : num;\n}\n\n/**\n * SINGLE SOURCE OF TRUTH for cost calculations\n * Calculates all cost metrics from MasterFormat breakdown data\n * This ensures consistency across the entire application\n */\nexport function calculateCostTotals(project: Project, costBreakdowns: CostBreakdown[]): CostTotals {\n  // Ensure we have stable defaults\n  const safeProject = project || {} as Project;\n  const safeCostBreakdowns = costBreakdowns || [];\n    // Calculate total units\n    const totalUnits = (safeProject.studioUnits || 0) + (safeProject.oneBedUnits || 0) + \n                      (safeProject.twoBedUnits || 0) + (safeProject.threeBedUnits || 0);\n    \n    // Calculate total square footage from project data\n    const getTotalSqFt = (): number => {\n      // Try to parse building dimensions if available (e.g., \"146' X 66'\")\n      if (safeProject.buildingDimensions) {\n        const match = safeProject.buildingDimensions.match(/(\\d+)'?\\s*[xX×]\\s*(\\d+)'/);\n        if (match) {\n          const width = parseInt(match[1]);\n          const height = parseInt(match[2]);\n          return width * height;\n        }\n      }\n      \n      // Estimate total sq ft based on units (assuming ~720 sq ft average per unit)\n      // This is a reasonable default for multifamily residential\n      if (totalUnits > 0) {\n        return totalUnits * 720;\n      }\n      \n      // Final fallback\n      return 17360;\n    };\n\n    const totalSqFt = getTotalSqFt();\n\n    // Return zero values if no cost breakdown data\n    if (!safeCostBreakdowns || safeCostBreakdowns.length === 0) {\n      return {\n        siteBuiltTotal: 0,\n        modularTotal: 0,\n        savings: 0,\n        costSavingsPercent: 0,\n        modularCostPerSf: 0,\n        siteBuiltCostPerSf: 0,\n        modularCostPerUnit: 0,\n        siteBuiltCostPerUnit: 0,\n        totalSqFt,\n        totalUnits\n      };\n    }\n\n    // Filter to only leaf MasterFormat categories (those starting with two digits)\n    // to avoid double-counting rollup summary categories\n    const leafCategories = safeCostBreakdowns.filter(cb => /^\\d{2}\\s/.test(cb.category));\n    \n    // Calculate totals from MasterFormat breakdown data using safe parsing\n    const siteBuiltTotal = leafCategories.reduce((sum, breakdown) => {\n      return sum + safeParseNumber(breakdown.siteBuiltCost);\n    }, 0);\n    \n    const modularTotal = leafCategories.reduce((sum, breakdown) => {\n      return sum + safeParseNumber(breakdown.raapTotalCost);\n    }, 0);\n    \n    const savings = siteBuiltTotal - modularTotal;\n    const costSavingsPercent = siteBuiltTotal > 0 ? ((savings / siteBuiltTotal) * 100) : 0;\n\n    // Calculate per-unit and per-sf from actual breakdown totals\n    const modularCostPerSf = totalSqFt > 0 ? modularTotal / totalSqFt : 0;\n    const siteBuiltCostPerSf = totalSqFt > 0 ? siteBuiltTotal / totalSqFt : 0;\n    const modularCostPerUnit = totalUnits > 0 ? modularTotal / totalUnits : 0;\n    const siteBuiltCostPerUnit = totalUnits > 0 ? siteBuiltTotal / totalUnits : 0;\n\n  return {\n    siteBuiltTotal,\n    modularTotal,\n    savings,\n    costSavingsPercent,\n    modularCostPerSf,\n    siteBuiltCostPerSf,\n    modularCostPerUnit,\n    siteBuiltCostPerUnit,\n    totalSqFt,\n    totalUnits\n  };\n}\n\n/**\n * Hook wrapper for calculateCostTotals to maintain compatibility\n * This is now just a simple wrapper around the calculation function\n */\nexport function useCostTotals(project: Project, costBreakdowns: CostBreakdown[]): CostTotals {\n  return calculateCostTotals(project, costBreakdowns);\n}\n\n/**\n * Helper function to format currency values\n */\nexport function formatCurrency(amount: number | string): string {\n  const num = typeof amount === 'string' ? parseFloat(amount) : amount;\n  if (isNaN(num)) return '$0';\n  \n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  }).format(num);\n}\n\n/**\n * Helper function to calculate cost per square foot\n * Uses the same project-based calculation logic for consistency\n */\nexport function calculateCostPerSf(cost: number, project: Project): string {\n  const totalUnits = (project.studioUnits || 0) + (project.oneBedUnits || 0) + \n                    (project.twoBedUnits || 0) + (project.threeBedUnits || 0);\n  \n  let totalSqFt = 17360; // fallback\n  \n  if (project.buildingDimensions) {\n    const match = project.buildingDimensions.match(/(\\d+)'?\\s*[xX×]\\s*(\\d+)'/);\n    if (match) {\n      totalSqFt = parseInt(match[1]) * parseInt(match[2]);\n    }\n  } else if (totalUnits > 0) {\n    totalSqFt = totalUnits * 720;\n  }\n  \n  if (totalSqFt === 0) return '$0';\n  return `$${Math.round(cost / totalSqFt)}`;\n}","size_bytes":5601}},"version":1}